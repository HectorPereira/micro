
4 Cerradura.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00001550  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000da  00000000  00000000  00000154  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800100  00800100  00001549  2**0
                  ALLOC
  3 .eeprom       00000007  00810000  00810000  00001549  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      0000002f  00000000  00000000  00001550  2**0
                  CONTENTS, READONLY
  5 .stack.descriptors.hdr 0000001c  00000000  00000000  0000157f  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000200  00000000  00000000  0000159b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003093  00000000  00000000  0000179b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000953  00000000  00000000  0000482e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000012de  00000000  00000000  00005181  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000005c8  00000000  00000000  00006460  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000265  00000000  00000000  00006a28  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000018bc  00000000  00000000  00006c8d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001f0  00000000  00000000  00008549  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .text         00000004  000013e0  000013e0  00001534  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000873c  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .progmemx.data 00000193  000000da  000000da  0000022e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 17 .text.i2c_master_start 00000058  00000eb0  00000eb0  00001004  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.i2c_master_write 00000024  00001274  00001274  000013c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.i2c_master_stop 00000008  000013d0  000013d0  00001524  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.i2c_master_sendByte 00000022  00001298  00001298  000013ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.lq_transmitI2C 0000000e  00001392  00001392  000014e6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.lq_turnOnBacklight 0000000e  000013a0  000013a0  000014f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.lq_writeDevicePulse 00000036  0000112c  0000112c  00001280  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.lq_writeDevice4Bits 0000001e  000012ba  000012ba  0000140e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.lq_writeDeviceByte 0000003a  000010f2  000010f2  00001246  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.lq_print 0000002a  00001222  00001222  00001376  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.lq_sendCommand 00000008  000013d8  000013d8  0000152c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.lq_setCursor 0000003e  000010b4  000010b4  00001208  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.lq_clear 00000028  0000124c  0000124c  000013a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.lq_returnHome 00000014  0000131e  0000131e  00001472  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.lq_turnOnDisplay 00000012  0000136e  0000136e  000014c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.lq_init 0000011c  0000095a  0000095a  00000aae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.__vector_16 0000004a  00000f54  00000f54  000010a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.state_menu_UI 00000098  00000bca  00000bca  00000d1e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.state_ingreso_UI 00000076  00000c62  00000c62  00000db6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.state_cambio_actual_UI 00000076  00000cd8  00000cd8  00000e2c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.state_cambio_nueva_UI 00000076  00000d4e  00000d4e  00000ea2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.state_abierto_UI 00000076  00000dc4  00000dc4  00000f18  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.state_alarma_UI 00000076  00000e3a  00000e3a  00000f8e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.reset_typed_password 0000000a  000013bc  000013bc  00001510  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.keypad_init 0000000a  000013c6  000013c6  0000151a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.millis_now 00000016  000012f2  000012f2  00001446  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.keypad_task 00000036  00001162  00001162  000012b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.keypad_debounce_ms 00000030  00001198  00001198  000012ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.keypad_scan 000000b6  00000a76  00000a76  00000bca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.timer0_init 00000014  00001332  00001332  00001486  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.buzzer_init 0000000e  000013ae  000013ae  00001502  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.buzzer_task 0000002e  000011c8  000011c8  0000131c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.buzzer_beep 00000046  00000fe8  00000fe8  0000113c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.alarm_start 00000044  0000102e  0000102e  00001182  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.led_red_on 00000012  00001380  00001380  000014d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.led_green_on 00000014  00001346  00001346  0000149a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.alarm_task 0000009e  00000b2c  00000b2c  00000c80  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.led_init 00000014  0000135a  0000135a  000014ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.led_task 0000004a  00000f9e  00000f9e  000010f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.main    000006dc  0000027e  0000027e  000003d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .bss.prevKey.2554 00000001  0080012a  0080012a  00001549  2**0
                  ALLOC
 58 .progmemx.data.keypad 00000010  0000026d  0000026d  000003c1  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 59 .bss.storedPassword_length 00000001  0080012b  0080012b  00001549  2**0
                  ALLOC
 60 .bss.typedPassword_counter 00000001  0080012c  0080012c  00001549  2**0
                  ALLOC
 61 .data.storedPassword 00000007  00800107  000013ee  00001542  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 62 .bss.millis_counter 00000004  0080010e  0080010e  00001549  2**0
                  ALLOC
 63 .data.keypad_enable 00000001  0080012d  0000027d  000003d1  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 64 .bss.keypad_on_at 00000004  00800112  00800112  00001549  2**0
                  ALLOC
 65 .bss.led_toggle_enable 00000001  0080012e  0080012e  00001549  2**0
                  ALLOC
 66 .bss.led_state 00000001  0080012f  0080012f  00001549  2**0
                  ALLOC
 67 .bss.led_off_at 00000004  00800116  00800116  00001549  2**0
                  ALLOC
 68 .bss.alarm_next_toggle 00000004  0080011a  0080011a  00001549  2**0
                  ALLOC
 69 .bss.alarm_phase 00000001  00800130  00800130  00001549  2**0
                  ALLOC
 70 .bss.alarm_until 00000004  0080011e  0080011e  00001549  2**0
                  ALLOC
 71 .bss.alarm_active 00000001  00800131  00800131  00001549  2**0
                  ALLOC
 72 .bss.buzzer_off_at 00000004  00800122  00800122  00001549  2**0
                  ALLOC
 73 .bss.buzzer_on_at 00000004  00800126  00800126  00001549  2**0
                  ALLOC
 74 .text.libgcc  0000001a  000012d8  000012d8  0000142c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.__dummy_fini 00000002  000013e8  000013e8  0000153c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text.__dummy_funcs_on_exit 00000002  000013ea  000013ea  0000153e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text.__dummy_simulator_exit 00000002  000013ec  000013ec  00001540  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text.exit    00000016  00001308  00001308  0000145c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text.strcmp  00000042  00001072  00001072  000011c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .text.strlen  0000002c  000011f6  000011f6  0000134a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 .text.strncpy 0000004c  00000f08  00000f08  0000105c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text._Exit   00000004  000013e4  000013e4  00001538  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 43 00 	jmp	0x86	; 0x86 <__ctors_end>
   4:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
   8:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
   c:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  10:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  14:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  18:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  1c:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  20:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  24:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  28:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  2c:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  30:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  34:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  38:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  3c:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  40:	0c 94 aa 07 	jmp	0xf54	; 0xf54 <__vector_16>
  44:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  48:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  4c:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  50:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  54:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  58:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  5c:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  60:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>
  64:	0c 94 f0 09 	jmp	0x13e0	; 0x13e0 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 07       	cpc	r16, r17
  6c:	80 01       	movw	r16, r0
  6e:	07 01       	movw	r0, r14
  70:	0e 00       	.word	0x000e	; ????
  72:	13 ee       	ldi	r17, 0xE3	; 227
  74:	01 0e       	add	r0, r17
  76:	01 2d       	mov	r16, r1
  78:	80 01       	movw	r16, r0
  7a:	2d 01       	movw	r4, r26
  7c:	2e 00       	.word	0x002e	; ????
  7e:	02 7d       	andi	r16, 0xD2	; 210
  80:	01 2e       	mov	r0, r17
  82:	01 32       	cpi	r16, 0x21	; 33
  84:	80 00       	.word	0x0080	; ????

00000086 <__ctors_end>:
  86:	11 24       	eor	r1, r1
  88:	1f be       	out	0x3f, r1	; 63
  8a:	cf ef       	ldi	r28, 0xFF	; 255
  8c:	d8 e0       	ldi	r29, 0x08	; 8
  8e:	de bf       	out	0x3e, r29	; 62
  90:	cd bf       	out	0x3d, r28	; 61

00000092 <__do_copy_data>:
  92:	e8 e6       	ldi	r30, 0x68	; 104
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	40 e0       	ldi	r20, 0x00	; 0
  98:	17 c0       	rjmp	.+46     	; 0xc8 <__do_clear_bss+0x8>
  9a:	b5 91       	lpm	r27, Z+
  9c:	a5 91       	lpm	r26, Z+
  9e:	35 91       	lpm	r19, Z+
  a0:	25 91       	lpm	r18, Z+
  a2:	05 91       	lpm	r16, Z+
  a4:	07 fd       	sbrc	r16, 7
  a6:	0c c0       	rjmp	.+24     	; 0xc0 <__do_clear_bss>
  a8:	95 91       	lpm	r25, Z+
  aa:	85 91       	lpm	r24, Z+
  ac:	ef 01       	movw	r28, r30
  ae:	f9 2f       	mov	r31, r25
  b0:	e8 2f       	mov	r30, r24
  b2:	05 90       	lpm	r0, Z+
  b4:	0d 92       	st	X+, r0
  b6:	a2 17       	cp	r26, r18
  b8:	b3 07       	cpc	r27, r19
  ba:	d9 f7       	brne	.-10     	; 0xb2 <__do_copy_data+0x20>
  bc:	fe 01       	movw	r30, r28
  be:	04 c0       	rjmp	.+8      	; 0xc8 <__do_clear_bss+0x8>

000000c0 <__do_clear_bss>:
  c0:	1d 92       	st	X+, r1
  c2:	a2 17       	cp	r26, r18
  c4:	b3 07       	cpc	r27, r19
  c6:	e1 f7       	brne	.-8      	; 0xc0 <__do_clear_bss>
  c8:	e5 38       	cpi	r30, 0x85	; 133
  ca:	f4 07       	cpc	r31, r20
  cc:	31 f7       	brne	.-52     	; 0x9a <__do_copy_data+0x8>
  ce:	0e 94 3f 01 	call	0x27e	; 0x27e <main>
  d2:	0c 94 84 09 	jmp	0x1308	; 0x1308 <exit>

000000d6 <_exit>:
  d6:	f8 94       	cli

000000d8 <__stop_program>:
  d8:	ff cf       	rjmp	.-2      	; 0xd8 <__stop_program>

Disassembly of section .text:

000013e0 <__bad_interrupt>:
    13e0:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.i2c_master_start:

00000eb0 <i2c_master_start>:
	// wait for end of transmission
	while( !(TWCR & (1<<TWINT)) );

	// return received data from TWDR
	return TWDR;
}
 eb0:	ec eb       	ldi	r30, 0xBC	; 188
 eb2:	f0 e0       	ldi	r31, 0x00	; 0
 eb4:	10 82       	st	Z, r1
 eb6:	94 ea       	ldi	r25, 0xA4	; 164
 eb8:	90 83       	st	Z, r25
 eba:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 ebe:	99 23       	and	r25, r25
 ec0:	e4 f7       	brge	.-8      	; 0xeba <i2c_master_start+0xa>
 ec2:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 ec6:	98 7f       	andi	r25, 0xF8	; 248
 ec8:	98 30       	cpi	r25, 0x08	; 8
 eca:	11 f0       	breq	.+4      	; 0xed0 <i2c_master_start+0x20>
 ecc:	90 31       	cpi	r25, 0x10	; 16
 ece:	b1 f4       	brne	.+44     	; 0xefc <i2c_master_start+0x4c>
 ed0:	90 e0       	ldi	r25, 0x00	; 0
 ed2:	88 0f       	add	r24, r24
 ed4:	99 1f       	adc	r25, r25
 ed6:	86 2b       	or	r24, r22
 ed8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 edc:	84 e8       	ldi	r24, 0x84	; 132
 ede:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 ee2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 ee6:	88 23       	and	r24, r24
 ee8:	e4 f7       	brge	.-8      	; 0xee2 <i2c_master_start+0x32>
 eea:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 eee:	88 7f       	andi	r24, 0xF8	; 248
 ef0:	88 31       	cpi	r24, 0x18	; 24
 ef2:	31 f0       	breq	.+12     	; 0xf00 <i2c_master_start+0x50>
 ef4:	80 34       	cpi	r24, 0x40	; 64
 ef6:	31 f4       	brne	.+12     	; 0xf04 <i2c_master_start+0x54>
 ef8:	80 e0       	ldi	r24, 0x00	; 0
 efa:	08 95       	ret
 efc:	8a e0       	ldi	r24, 0x0A	; 10
 efe:	08 95       	ret
 f00:	80 e0       	ldi	r24, 0x00	; 0
 f02:	08 95       	ret
 f04:	84 e1       	ldi	r24, 0x14	; 20
 f06:	08 95       	ret

Disassembly of section .text.i2c_master_write:

00001274 <i2c_master_write>:
    1274:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    1278:	84 e8       	ldi	r24, 0x84	; 132
    127a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    127e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1282:	88 23       	and	r24, r24
    1284:	e4 f7       	brge	.-8      	; 0x127e <i2c_master_write+0xa>
    1286:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    128a:	88 7f       	andi	r24, 0xF8	; 248
    128c:	88 32       	cpi	r24, 0x28	; 40
    128e:	11 f0       	breq	.+4      	; 0x1294 <i2c_master_write+0x20>
    1290:	85 e1       	ldi	r24, 0x15	; 21
    1292:	08 95       	ret
    1294:	80 e0       	ldi	r24, 0x00	; 0
    1296:	08 95       	ret

Disassembly of section .text.i2c_master_stop:

000013d0 <i2c_master_stop>:
	return I2C_STATUS_SUCCESS;
}

void i2c_master_stop(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    13d0:	84 e9       	ldi	r24, 0x94	; 148
    13d2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    13d6:	08 95       	ret

Disassembly of section .text.i2c_master_sendByte:

00001298 <i2c_master_sendByte>:
	// wait for end of transmission
	while( !(TWCR & (1<<TWINT)) );

	// return received data from TWDR
	return TWDR;
}
    1298:	cf 93       	push	r28
    129a:	c6 2f       	mov	r28, r22
    129c:	60 e0       	ldi	r22, 0x00	; 0
    129e:	0e 94 58 07 	call	0xeb0	; 0xeb0 <i2c_master_start>
    12a2:	81 11       	cpse	r24, r1
    12a4:	08 c0       	rjmp	.+16     	; 0x12b6 <i2c_master_sendByte+0x1e>
    12a6:	8c 2f       	mov	r24, r28
    12a8:	0e 94 3a 09 	call	0x1274	; 0x1274 <i2c_master_write>
    12ac:	81 11       	cpse	r24, r1
    12ae:	03 c0       	rjmp	.+6      	; 0x12b6 <i2c_master_sendByte+0x1e>
    12b0:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <i2c_master_stop>
    12b4:	80 e0       	ldi	r24, 0x00	; 0
    12b6:	cf 91       	pop	r28
    12b8:	08 95       	ret

Disassembly of section .text.lq_transmitI2C:

00001392 <lq_transmitI2C>:
    1392:	fc 01       	movw	r30, r24
    1394:	23 81       	ldd	r18, Z+3	; 0x03
    1396:	62 2b       	or	r22, r18
    1398:	80 81       	ld	r24, Z
    139a:	0e 94 4c 09 	call	0x1298	; 0x1298 <i2c_master_sendByte>
    139e:	08 95       	ret

Disassembly of section .text.lq_turnOnBacklight:

000013a0 <lq_turnOnBacklight>:
    13a0:	28 e0       	ldi	r18, 0x08	; 8
    13a2:	fc 01       	movw	r30, r24
    13a4:	23 83       	std	Z+3, r18	; 0x03
    13a6:	60 e0       	ldi	r22, 0x00	; 0
    13a8:	0e 94 c9 09 	call	0x1392	; 0x1392 <lq_transmitI2C>
    13ac:	08 95       	ret

Disassembly of section .text.lq_writeDevicePulse:

0000112c <lq_writeDevicePulse>:
    112c:	0f 93       	push	r16
    112e:	1f 93       	push	r17
    1130:	cf 93       	push	r28
    1132:	8c 01       	movw	r16, r24
    1134:	c6 2f       	mov	r28, r22
    1136:	64 60       	ori	r22, 0x04	; 4
    1138:	0e 94 c9 09 	call	0x1392	; 0x1392 <lq_transmitI2C>
    113c:	8a e0       	ldi	r24, 0x0A	; 10
    113e:	8a 95       	dec	r24
    1140:	f1 f7       	brne	.-4      	; 0x113e <lq_writeDevicePulse+0x12>
    1142:	00 c0       	rjmp	.+0      	; 0x1144 <lq_writeDevicePulse+0x18>
    1144:	6c 2f       	mov	r22, r28
    1146:	6b 7f       	andi	r22, 0xFB	; 251
    1148:	c8 01       	movw	r24, r16
    114a:	0e 94 c9 09 	call	0x1392	; 0x1392 <lq_transmitI2C>
    114e:	87 ec       	ldi	r24, 0xC7	; 199
    1150:	90 e0       	ldi	r25, 0x00	; 0
    1152:	01 97       	sbiw	r24, 0x01	; 1
    1154:	f1 f7       	brne	.-4      	; 0x1152 <lq_writeDevicePulse+0x26>
    1156:	00 c0       	rjmp	.+0      	; 0x1158 <lq_writeDevicePulse+0x2c>
    1158:	00 00       	nop
    115a:	cf 91       	pop	r28
    115c:	1f 91       	pop	r17
    115e:	0f 91       	pop	r16
    1160:	08 95       	ret

Disassembly of section .text.lq_writeDevice4Bits:

000012ba <lq_writeDevice4Bits>:
    12ba:	1f 93       	push	r17
    12bc:	cf 93       	push	r28
    12be:	df 93       	push	r29
    12c0:	ec 01       	movw	r28, r24
    12c2:	16 2f       	mov	r17, r22
    12c4:	0e 94 c9 09 	call	0x1392	; 0x1392 <lq_transmitI2C>
    12c8:	61 2f       	mov	r22, r17
    12ca:	ce 01       	movw	r24, r28
    12cc:	0e 94 96 08 	call	0x112c	; 0x112c <lq_writeDevicePulse>
    12d0:	df 91       	pop	r29
    12d2:	cf 91       	pop	r28
    12d4:	1f 91       	pop	r17
    12d6:	08 95       	ret

Disassembly of section .text.lq_writeDeviceByte:

000010f2 <lq_writeDeviceByte>:
    10f2:	ff 92       	push	r15
    10f4:	0f 93       	push	r16
    10f6:	1f 93       	push	r17
    10f8:	cf 93       	push	r28
    10fa:	df 93       	push	r29
    10fc:	8c 01       	movw	r16, r24
    10fe:	f4 2e       	mov	r15, r20
    1100:	86 2f       	mov	r24, r22
    1102:	80 7f       	andi	r24, 0xF0	; 240
    1104:	90 e1       	ldi	r25, 0x10	; 16
    1106:	69 9f       	mul	r22, r25
    1108:	e0 01       	movw	r28, r0
    110a:	11 24       	eor	r1, r1
    110c:	68 2f       	mov	r22, r24
    110e:	64 2b       	or	r22, r20
    1110:	c8 01       	movw	r24, r16
    1112:	0e 94 5d 09 	call	0x12ba	; 0x12ba <lq_writeDevice4Bits>
    1116:	6c 2f       	mov	r22, r28
    1118:	6f 29       	or	r22, r15
    111a:	c8 01       	movw	r24, r16
    111c:	0e 94 5d 09 	call	0x12ba	; 0x12ba <lq_writeDevice4Bits>
    1120:	df 91       	pop	r29
    1122:	cf 91       	pop	r28
    1124:	1f 91       	pop	r17
    1126:	0f 91       	pop	r16
    1128:	ff 90       	pop	r15
    112a:	08 95       	ret

Disassembly of section .text.lq_print:

00001222 <lq_print>:
    1222:	0f 93       	push	r16
    1224:	1f 93       	push	r17
    1226:	cf 93       	push	r28
    1228:	df 93       	push	r29
    122a:	8c 01       	movw	r16, r24
    122c:	eb 01       	movw	r28, r22
    122e:	68 81       	ld	r22, Y
    1230:	06 c0       	rjmp	.+12     	; 0x123e <lq_print+0x1c>
    1232:	41 e0       	ldi	r20, 0x01	; 1
    1234:	c8 01       	movw	r24, r16
    1236:	0e 94 79 08 	call	0x10f2	; 0x10f2 <lq_writeDeviceByte>
    123a:	21 96       	adiw	r28, 0x01	; 1
    123c:	68 81       	ld	r22, Y
    123e:	61 11       	cpse	r22, r1
    1240:	f8 cf       	rjmp	.-16     	; 0x1232 <lq_print+0x10>
    1242:	df 91       	pop	r29
    1244:	cf 91       	pop	r28
    1246:	1f 91       	pop	r17
    1248:	0f 91       	pop	r16
    124a:	08 95       	ret

Disassembly of section .text.lq_sendCommand:

000013d8 <lq_sendCommand>:
}


void lq_sendCommand(LiquidCrystalDevice_t* device, uint8_t command)
{
	lq_writeDeviceByte(device, command, 0);
    13d8:	40 e0       	ldi	r20, 0x00	; 0
    13da:	0e 94 79 08 	call	0x10f2	; 0x10f2 <lq_writeDeviceByte>
    13de:	08 95       	ret

Disassembly of section .text.lq_setCursor:

000010b4 <lq_setCursor>:
    10b4:	cf 93       	push	r28
    10b6:	df 93       	push	r29
    10b8:	00 d0       	rcall	.+0      	; 0x10ba <lq_setCursor+0x6>
    10ba:	00 d0       	rcall	.+0      	; 0x10bc <lq_setCursor+0x8>
    10bc:	cd b7       	in	r28, 0x3d	; 61
    10be:	de b7       	in	r29, 0x3e	; 62
    10c0:	19 82       	std	Y+1, r1	; 0x01
    10c2:	20 e4       	ldi	r18, 0x40	; 64
    10c4:	2a 83       	std	Y+2, r18	; 0x02
    10c6:	24 e1       	ldi	r18, 0x14	; 20
    10c8:	2b 83       	std	Y+3, r18	; 0x03
    10ca:	24 e5       	ldi	r18, 0x54	; 84
    10cc:	2c 83       	std	Y+4, r18	; 0x04
    10ce:	e1 e0       	ldi	r30, 0x01	; 1
    10d0:	f0 e0       	ldi	r31, 0x00	; 0
    10d2:	ec 0f       	add	r30, r28
    10d4:	fd 1f       	adc	r31, r29
    10d6:	e6 0f       	add	r30, r22
    10d8:	f1 1d       	adc	r31, r1
    10da:	60 81       	ld	r22, Z
    10dc:	64 0f       	add	r22, r20
    10de:	60 68       	ori	r22, 0x80	; 128
    10e0:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <lq_sendCommand>
    10e4:	0f 90       	pop	r0
    10e6:	0f 90       	pop	r0
    10e8:	0f 90       	pop	r0
    10ea:	0f 90       	pop	r0
    10ec:	df 91       	pop	r29
    10ee:	cf 91       	pop	r28
    10f0:	08 95       	ret

Disassembly of section .text.lq_clear:

0000124c <lq_clear>:
    124c:	cf 93       	push	r28
    124e:	df 93       	push	r29
    1250:	ec 01       	movw	r28, r24
    1252:	61 e0       	ldi	r22, 0x01	; 1
    1254:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <lq_sendCommand>
    1258:	8f e3       	ldi	r24, 0x3F	; 63
    125a:	9f e1       	ldi	r25, 0x1F	; 31
    125c:	01 97       	sbiw	r24, 0x01	; 1
    125e:	f1 f7       	brne	.-4      	; 0x125c <lq_clear+0x10>
    1260:	00 c0       	rjmp	.+0      	; 0x1262 <lq_clear+0x16>
    1262:	00 00       	nop
    1264:	40 e0       	ldi	r20, 0x00	; 0
    1266:	60 e0       	ldi	r22, 0x00	; 0
    1268:	ce 01       	movw	r24, r28
    126a:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
    126e:	df 91       	pop	r29
    1270:	cf 91       	pop	r28
    1272:	08 95       	ret

Disassembly of section .text.lq_returnHome:

0000131e <lq_returnHome>:
    131e:	62 e0       	ldi	r22, 0x02	; 2
    1320:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <lq_sendCommand>
    1324:	8f e3       	ldi	r24, 0x3F	; 63
    1326:	9f e1       	ldi	r25, 0x1F	; 31
    1328:	01 97       	sbiw	r24, 0x01	; 1
    132a:	f1 f7       	brne	.-4      	; 0x1328 <lq_returnHome+0xa>
    132c:	00 c0       	rjmp	.+0      	; 0x132e <lq_returnHome+0x10>
    132e:	00 00       	nop
    1330:	08 95       	ret

Disassembly of section .text.lq_turnOnDisplay:

0000136e <lq_turnOnDisplay>:
    136e:	fc 01       	movw	r30, r24
    1370:	65 81       	ldd	r22, Z+5	; 0x05
    1372:	26 2f       	mov	r18, r22
    1374:	24 60       	ori	r18, 0x04	; 4
    1376:	25 83       	std	Z+5, r18	; 0x05
    1378:	6c 60       	ori	r22, 0x0C	; 12
    137a:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <lq_sendCommand>
    137e:	08 95       	ret

Disassembly of section .text.lq_init:

0000095a <lq_init>:
 95a:	cf 93       	push	r28
 95c:	df 93       	push	r29
 95e:	cd b7       	in	r28, 0x3d	; 61
 960:	de b7       	in	r29, 0x3e	; 62
 962:	2e 97       	sbiw	r28, 0x0e	; 14
 964:	0f b6       	in	r0, 0x3f	; 63
 966:	f8 94       	cli
 968:	de bf       	out	0x3e, r29	; 62
 96a:	0f be       	out	0x3f, r0	; 63
 96c:	cd bf       	out	0x3d, r28	; 61
 96e:	88 87       	std	Y+8, r24	; 0x08
 970:	69 87       	std	Y+9, r22	; 0x09
 972:	4a 87       	std	Y+10, r20	; 0x0a
 974:	1b 86       	std	Y+11, r1	; 0x0b
 976:	2c 87       	std	Y+12, r18	; 0x0c
 978:	84 e0       	ldi	r24, 0x04	; 4
 97a:	8d 87       	std	Y+13, r24	; 0x0d
 97c:	82 e0       	ldi	r24, 0x02	; 2
 97e:	8e 87       	std	Y+14, r24	; 0x0e
 980:	42 30       	cpi	r20, 0x02	; 2
 982:	18 f0       	brcs	.+6      	; 0x98a <lq_init+0x30>
 984:	82 2f       	mov	r24, r18
 986:	88 60       	ori	r24, 0x08	; 8
 988:	8c 87       	std	Y+12, r24	; 0x0c
 98a:	22 23       	and	r18, r18
 98c:	29 f0       	breq	.+10     	; 0x998 <lq_init+0x3e>
 98e:	41 30       	cpi	r20, 0x01	; 1
 990:	19 f4       	brne	.+6      	; 0x998 <lq_init+0x3e>
 992:	8c 85       	ldd	r24, Y+12	; 0x0c
 994:	84 60       	ori	r24, 0x04	; 4
 996:	8c 87       	std	Y+12, r24	; 0x0c
 998:	2f ef       	ldi	r18, 0xFF	; 255
 99a:	81 ee       	ldi	r24, 0xE1	; 225
 99c:	94 e0       	ldi	r25, 0x04	; 4
 99e:	21 50       	subi	r18, 0x01	; 1
 9a0:	80 40       	sbci	r24, 0x00	; 0
 9a2:	90 40       	sbci	r25, 0x00	; 0
 9a4:	e1 f7       	brne	.-8      	; 0x99e <lq_init+0x44>
 9a6:	00 c0       	rjmp	.+0      	; 0x9a8 <lq_init+0x4e>
 9a8:	00 00       	nop
 9aa:	60 e0       	ldi	r22, 0x00	; 0
 9ac:	ce 01       	movw	r24, r28
 9ae:	08 96       	adiw	r24, 0x08	; 8
 9b0:	0e 94 c9 09 	call	0x1392	; 0x1392 <lq_transmitI2C>
 9b4:	2f ef       	ldi	r18, 0xFF	; 255
 9b6:	83 ed       	ldi	r24, 0xD3	; 211
 9b8:	90 e3       	ldi	r25, 0x30	; 48
 9ba:	21 50       	subi	r18, 0x01	; 1
 9bc:	80 40       	sbci	r24, 0x00	; 0
 9be:	90 40       	sbci	r25, 0x00	; 0
 9c0:	e1 f7       	brne	.-8      	; 0x9ba <lq_init+0x60>
 9c2:	00 c0       	rjmp	.+0      	; 0x9c4 <lq_init+0x6a>
 9c4:	00 00       	nop
 9c6:	60 e3       	ldi	r22, 0x30	; 48
 9c8:	ce 01       	movw	r24, r28
 9ca:	08 96       	adiw	r24, 0x08	; 8
 9cc:	0e 94 c9 09 	call	0x1392	; 0x1392 <lq_transmitI2C>
 9d0:	8f e4       	ldi	r24, 0x4F	; 79
 9d2:	96 e4       	ldi	r25, 0x46	; 70
 9d4:	01 97       	sbiw	r24, 0x01	; 1
 9d6:	f1 f7       	brne	.-4      	; 0x9d4 <lq_init+0x7a>
 9d8:	00 c0       	rjmp	.+0      	; 0x9da <lq_init+0x80>
 9da:	00 00       	nop
 9dc:	60 e3       	ldi	r22, 0x30	; 48
 9de:	ce 01       	movw	r24, r28
 9e0:	08 96       	adiw	r24, 0x08	; 8
 9e2:	0e 94 5d 09 	call	0x12ba	; 0x12ba <lq_writeDevice4Bits>
 9e6:	8f e4       	ldi	r24, 0x4F	; 79
 9e8:	96 e4       	ldi	r25, 0x46	; 70
 9ea:	01 97       	sbiw	r24, 0x01	; 1
 9ec:	f1 f7       	brne	.-4      	; 0x9ea <lq_init+0x90>
 9ee:	00 c0       	rjmp	.+0      	; 0x9f0 <lq_init+0x96>
 9f0:	00 00       	nop
 9f2:	60 e3       	ldi	r22, 0x30	; 48
 9f4:	ce 01       	movw	r24, r28
 9f6:	08 96       	adiw	r24, 0x08	; 8
 9f8:	0e 94 5d 09 	call	0x12ba	; 0x12ba <lq_writeDevice4Bits>
 9fc:	87 e5       	ldi	r24, 0x57	; 87
 9fe:	92 e0       	ldi	r25, 0x02	; 2
 a00:	01 97       	sbiw	r24, 0x01	; 1
 a02:	f1 f7       	brne	.-4      	; 0xa00 <lq_init+0xa6>
 a04:	00 c0       	rjmp	.+0      	; 0xa06 <lq_init+0xac>
 a06:	00 00       	nop
 a08:	60 e2       	ldi	r22, 0x20	; 32
 a0a:	ce 01       	movw	r24, r28
 a0c:	08 96       	adiw	r24, 0x08	; 8
 a0e:	0e 94 5d 09 	call	0x12ba	; 0x12ba <lq_writeDevice4Bits>
 a12:	6c 85       	ldd	r22, Y+12	; 0x0c
 a14:	60 62       	ori	r22, 0x20	; 32
 a16:	ce 01       	movw	r24, r28
 a18:	08 96       	adiw	r24, 0x08	; 8
 a1a:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <lq_sendCommand>
 a1e:	ce 01       	movw	r24, r28
 a20:	08 96       	adiw	r24, 0x08	; 8
 a22:	0e 94 b7 09 	call	0x136e	; 0x136e <lq_turnOnDisplay>
 a26:	ce 01       	movw	r24, r28
 a28:	08 96       	adiw	r24, 0x08	; 8
 a2a:	0e 94 26 09 	call	0x124c	; 0x124c <lq_clear>
 a2e:	6e 85       	ldd	r22, Y+14	; 0x0e
 a30:	64 60       	ori	r22, 0x04	; 4
 a32:	ce 01       	movw	r24, r28
 a34:	08 96       	adiw	r24, 0x08	; 8
 a36:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <lq_sendCommand>
 a3a:	ce 01       	movw	r24, r28
 a3c:	08 96       	adiw	r24, 0x08	; 8
 a3e:	0e 94 8f 09 	call	0x131e	; 0x131e <lq_returnHome>
 a42:	87 e0       	ldi	r24, 0x07	; 7
 a44:	fe 01       	movw	r30, r28
 a46:	38 96       	adiw	r30, 0x08	; 8
 a48:	de 01       	movw	r26, r28
 a4a:	11 96       	adiw	r26, 0x01	; 1
 a4c:	01 90       	ld	r0, Z+
 a4e:	0d 92       	st	X+, r0
 a50:	8a 95       	dec	r24
 a52:	e1 f7       	brne	.-8      	; 0xa4c <lq_init+0xf2>
 a54:	29 81       	ldd	r18, Y+1	; 0x01
 a56:	3a 81       	ldd	r19, Y+2	; 0x02
 a58:	4b 81       	ldd	r20, Y+3	; 0x03
 a5a:	5c 81       	ldd	r21, Y+4	; 0x04
 a5c:	6d 81       	ldd	r22, Y+5	; 0x05
 a5e:	7e 81       	ldd	r23, Y+6	; 0x06
 a60:	8f 81       	ldd	r24, Y+7	; 0x07
 a62:	90 e0       	ldi	r25, 0x00	; 0
 a64:	2e 96       	adiw	r28, 0x0e	; 14
 a66:	0f b6       	in	r0, 0x3f	; 63
 a68:	f8 94       	cli
 a6a:	de bf       	out	0x3e, r29	; 62
 a6c:	0f be       	out	0x3f, r0	; 63
 a6e:	cd bf       	out	0x3d, r28	; 61
 a70:	df 91       	pop	r29
 a72:	cf 91       	pop	r28
 a74:	08 95       	ret

Disassembly of section .text.__vector_16:

00000f54 <__vector_16>:
 f54:	1f 92       	push	r1
 f56:	0f 92       	push	r0
 f58:	0f b6       	in	r0, 0x3f	; 63
 f5a:	0f 92       	push	r0
 f5c:	11 24       	eor	r1, r1
 f5e:	8f 93       	push	r24
 f60:	9f 93       	push	r25
 f62:	af 93       	push	r26
 f64:	bf 93       	push	r27
 f66:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <millis_counter>
 f6a:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <millis_counter+0x1>
 f6e:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <millis_counter+0x2>
 f72:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <millis_counter+0x3>
 f76:	01 96       	adiw	r24, 0x01	; 1
 f78:	a1 1d       	adc	r26, r1
 f7a:	b1 1d       	adc	r27, r1
 f7c:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <millis_counter>
 f80:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <millis_counter+0x1>
 f84:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <millis_counter+0x2>
 f88:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <millis_counter+0x3>
 f8c:	bf 91       	pop	r27
 f8e:	af 91       	pop	r26
 f90:	9f 91       	pop	r25
 f92:	8f 91       	pop	r24
 f94:	0f 90       	pop	r0
 f96:	0f be       	out	0x3f, r0	; 63
 f98:	0f 90       	pop	r0
 f9a:	1f 90       	pop	r1
 f9c:	18 95       	reti

Disassembly of section .text.state_menu_UI:

00000bca <state_menu_UI>:
 bca:	cf 93       	push	r28
 bcc:	df 93       	push	r29
 bce:	cd b7       	in	r28, 0x3d	; 61
 bd0:	de b7       	in	r29, 0x3e	; 62
 bd2:	a9 97       	sbiw	r28, 0x29	; 41
 bd4:	0f b6       	in	r0, 0x3f	; 63
 bd6:	f8 94       	cli
 bd8:	de bf       	out	0x3e, r29	; 62
 bda:	0f be       	out	0x3f, r0	; 63
 bdc:	cd bf       	out	0x3d, r28	; 61
 bde:	2b a3       	std	Y+35, r18	; 0x23
 be0:	3c a3       	std	Y+36, r19	; 0x24
 be2:	4d a3       	std	Y+37, r20	; 0x25
 be4:	5e a3       	std	Y+38, r21	; 0x26
 be6:	6f a3       	std	Y+39, r22	; 0x27
 be8:	78 a7       	std	Y+40, r23	; 0x28
 bea:	89 a7       	std	Y+41, r24	; 0x29
 bec:	2a ec       	ldi	r18, 0xCA	; 202
 bee:	31 e0       	ldi	r19, 0x01	; 1
 bf0:	40 e0       	ldi	r20, 0x00	; 0
 bf2:	81 e1       	ldi	r24, 0x11	; 17
 bf4:	f9 01       	movw	r30, r18
 bf6:	de 01       	movw	r26, r28
 bf8:	11 96       	adiw	r26, 0x01	; 1
 bfa:	74 2f       	mov	r23, r20
 bfc:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <__movmemx_qi>
 c00:	2b ed       	ldi	r18, 0xDB	; 219
 c02:	31 e0       	ldi	r19, 0x01	; 1
 c04:	40 e0       	ldi	r20, 0x00	; 0
 c06:	81 e1       	ldi	r24, 0x11	; 17
 c08:	f9 01       	movw	r30, r18
 c0a:	de 01       	movw	r26, r28
 c0c:	52 96       	adiw	r26, 0x12	; 18
 c0e:	74 2f       	mov	r23, r20
 c10:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <__movmemx_qi>
 c14:	ce 01       	movw	r24, r28
 c16:	83 96       	adiw	r24, 0x23	; 35
 c18:	0e 94 26 09 	call	0x124c	; 0x124c <lq_clear>
 c1c:	40 e0       	ldi	r20, 0x00	; 0
 c1e:	60 e0       	ldi	r22, 0x00	; 0
 c20:	ce 01       	movw	r24, r28
 c22:	83 96       	adiw	r24, 0x23	; 35
 c24:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 c28:	be 01       	movw	r22, r28
 c2a:	6f 5f       	subi	r22, 0xFF	; 255
 c2c:	7f 4f       	sbci	r23, 0xFF	; 255
 c2e:	ce 01       	movw	r24, r28
 c30:	83 96       	adiw	r24, 0x23	; 35
 c32:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 c36:	40 e0       	ldi	r20, 0x00	; 0
 c38:	61 e0       	ldi	r22, 0x01	; 1
 c3a:	ce 01       	movw	r24, r28
 c3c:	83 96       	adiw	r24, 0x23	; 35
 c3e:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 c42:	be 01       	movw	r22, r28
 c44:	6e 5e       	subi	r22, 0xEE	; 238
 c46:	7f 4f       	sbci	r23, 0xFF	; 255
 c48:	ce 01       	movw	r24, r28
 c4a:	83 96       	adiw	r24, 0x23	; 35
 c4c:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 c50:	a9 96       	adiw	r28, 0x29	; 41
 c52:	0f b6       	in	r0, 0x3f	; 63
 c54:	f8 94       	cli
 c56:	de bf       	out	0x3e, r29	; 62
 c58:	0f be       	out	0x3f, r0	; 63
 c5a:	cd bf       	out	0x3d, r28	; 61
 c5c:	df 91       	pop	r29
 c5e:	cf 91       	pop	r28
 c60:	08 95       	ret

Disassembly of section .text.state_ingreso_UI:

00000c62 <state_ingreso_UI>:
 c62:	cf 93       	push	r28
 c64:	df 93       	push	r29
 c66:	cd b7       	in	r28, 0x3d	; 61
 c68:	de b7       	in	r29, 0x3e	; 62
 c6a:	68 97       	sbiw	r28, 0x18	; 24
 c6c:	0f b6       	in	r0, 0x3f	; 63
 c6e:	f8 94       	cli
 c70:	de bf       	out	0x3e, r29	; 62
 c72:	0f be       	out	0x3f, r0	; 63
 c74:	cd bf       	out	0x3d, r28	; 61
 c76:	2a 8b       	std	Y+18, r18	; 0x12
 c78:	3b 8b       	std	Y+19, r19	; 0x13
 c7a:	4c 8b       	std	Y+20, r20	; 0x14
 c7c:	5d 8b       	std	Y+21, r21	; 0x15
 c7e:	6e 8b       	std	Y+22, r22	; 0x16
 c80:	7f 8b       	std	Y+23, r23	; 0x17
 c82:	88 8f       	std	Y+24, r24	; 0x18
 c84:	ce 01       	movw	r24, r28
 c86:	42 96       	adiw	r24, 0x12	; 18
 c88:	0e 94 26 09 	call	0x124c	; 0x124c <lq_clear>
 c8c:	2c ee       	ldi	r18, 0xEC	; 236
 c8e:	31 e0       	ldi	r19, 0x01	; 1
 c90:	40 e0       	ldi	r20, 0x00	; 0
 c92:	81 e1       	ldi	r24, 0x11	; 17
 c94:	f9 01       	movw	r30, r18
 c96:	de 01       	movw	r26, r28
 c98:	11 96       	adiw	r26, 0x01	; 1
 c9a:	74 2f       	mov	r23, r20
 c9c:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <__movmemx_qi>
 ca0:	40 e0       	ldi	r20, 0x00	; 0
 ca2:	60 e0       	ldi	r22, 0x00	; 0
 ca4:	ce 01       	movw	r24, r28
 ca6:	42 96       	adiw	r24, 0x12	; 18
 ca8:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 cac:	be 01       	movw	r22, r28
 cae:	6f 5f       	subi	r22, 0xFF	; 255
 cb0:	7f 4f       	sbci	r23, 0xFF	; 255
 cb2:	ce 01       	movw	r24, r28
 cb4:	42 96       	adiw	r24, 0x12	; 18
 cb6:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 cba:	40 e0       	ldi	r20, 0x00	; 0
 cbc:	61 e0       	ldi	r22, 0x01	; 1
 cbe:	ce 01       	movw	r24, r28
 cc0:	42 96       	adiw	r24, 0x12	; 18
 cc2:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 cc6:	68 96       	adiw	r28, 0x18	; 24
 cc8:	0f b6       	in	r0, 0x3f	; 63
 cca:	f8 94       	cli
 ccc:	de bf       	out	0x3e, r29	; 62
 cce:	0f be       	out	0x3f, r0	; 63
 cd0:	cd bf       	out	0x3d, r28	; 61
 cd2:	df 91       	pop	r29
 cd4:	cf 91       	pop	r28
 cd6:	08 95       	ret

Disassembly of section .text.state_cambio_actual_UI:

00000cd8 <state_cambio_actual_UI>:
 cd8:	cf 93       	push	r28
 cda:	df 93       	push	r29
 cdc:	cd b7       	in	r28, 0x3d	; 61
 cde:	de b7       	in	r29, 0x3e	; 62
 ce0:	66 97       	sbiw	r28, 0x16	; 22
 ce2:	0f b6       	in	r0, 0x3f	; 63
 ce4:	f8 94       	cli
 ce6:	de bf       	out	0x3e, r29	; 62
 ce8:	0f be       	out	0x3f, r0	; 63
 cea:	cd bf       	out	0x3d, r28	; 61
 cec:	28 8b       	std	Y+16, r18	; 0x10
 cee:	39 8b       	std	Y+17, r19	; 0x11
 cf0:	4a 8b       	std	Y+18, r20	; 0x12
 cf2:	5b 8b       	std	Y+19, r21	; 0x13
 cf4:	6c 8b       	std	Y+20, r22	; 0x14
 cf6:	7d 8b       	std	Y+21, r23	; 0x15
 cf8:	8e 8b       	std	Y+22, r24	; 0x16
 cfa:	ce 01       	movw	r24, r28
 cfc:	40 96       	adiw	r24, 0x10	; 16
 cfe:	0e 94 26 09 	call	0x124c	; 0x124c <lq_clear>
 d02:	2d ef       	ldi	r18, 0xFD	; 253
 d04:	31 e0       	ldi	r19, 0x01	; 1
 d06:	40 e0       	ldi	r20, 0x00	; 0
 d08:	8f e0       	ldi	r24, 0x0F	; 15
 d0a:	f9 01       	movw	r30, r18
 d0c:	de 01       	movw	r26, r28
 d0e:	11 96       	adiw	r26, 0x01	; 1
 d10:	74 2f       	mov	r23, r20
 d12:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <__movmemx_qi>
 d16:	40 e0       	ldi	r20, 0x00	; 0
 d18:	60 e0       	ldi	r22, 0x00	; 0
 d1a:	ce 01       	movw	r24, r28
 d1c:	40 96       	adiw	r24, 0x10	; 16
 d1e:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 d22:	be 01       	movw	r22, r28
 d24:	6f 5f       	subi	r22, 0xFF	; 255
 d26:	7f 4f       	sbci	r23, 0xFF	; 255
 d28:	ce 01       	movw	r24, r28
 d2a:	40 96       	adiw	r24, 0x10	; 16
 d2c:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 d30:	40 e0       	ldi	r20, 0x00	; 0
 d32:	61 e0       	ldi	r22, 0x01	; 1
 d34:	ce 01       	movw	r24, r28
 d36:	40 96       	adiw	r24, 0x10	; 16
 d38:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 d3c:	66 96       	adiw	r28, 0x16	; 22
 d3e:	0f b6       	in	r0, 0x3f	; 63
 d40:	f8 94       	cli
 d42:	de bf       	out	0x3e, r29	; 62
 d44:	0f be       	out	0x3f, r0	; 63
 d46:	cd bf       	out	0x3d, r28	; 61
 d48:	df 91       	pop	r29
 d4a:	cf 91       	pop	r28
 d4c:	08 95       	ret

Disassembly of section .text.state_cambio_nueva_UI:

00000d4e <state_cambio_nueva_UI>:
 d4e:	cf 93       	push	r28
 d50:	df 93       	push	r29
 d52:	cd b7       	in	r28, 0x3d	; 61
 d54:	de b7       	in	r29, 0x3e	; 62
 d56:	65 97       	sbiw	r28, 0x15	; 21
 d58:	0f b6       	in	r0, 0x3f	; 63
 d5a:	f8 94       	cli
 d5c:	de bf       	out	0x3e, r29	; 62
 d5e:	0f be       	out	0x3f, r0	; 63
 d60:	cd bf       	out	0x3d, r28	; 61
 d62:	2f 87       	std	Y+15, r18	; 0x0f
 d64:	38 8b       	std	Y+16, r19	; 0x10
 d66:	49 8b       	std	Y+17, r20	; 0x11
 d68:	5a 8b       	std	Y+18, r21	; 0x12
 d6a:	6b 8b       	std	Y+19, r22	; 0x13
 d6c:	7c 8b       	std	Y+20, r23	; 0x14
 d6e:	8d 8b       	std	Y+21, r24	; 0x15
 d70:	ce 01       	movw	r24, r28
 d72:	0f 96       	adiw	r24, 0x0f	; 15
 d74:	0e 94 26 09 	call	0x124c	; 0x124c <lq_clear>
 d78:	2c e0       	ldi	r18, 0x0C	; 12
 d7a:	32 e0       	ldi	r19, 0x02	; 2
 d7c:	40 e0       	ldi	r20, 0x00	; 0
 d7e:	8e e0       	ldi	r24, 0x0E	; 14
 d80:	f9 01       	movw	r30, r18
 d82:	de 01       	movw	r26, r28
 d84:	11 96       	adiw	r26, 0x01	; 1
 d86:	74 2f       	mov	r23, r20
 d88:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <__movmemx_qi>
 d8c:	40 e0       	ldi	r20, 0x00	; 0
 d8e:	60 e0       	ldi	r22, 0x00	; 0
 d90:	ce 01       	movw	r24, r28
 d92:	0f 96       	adiw	r24, 0x0f	; 15
 d94:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 d98:	be 01       	movw	r22, r28
 d9a:	6f 5f       	subi	r22, 0xFF	; 255
 d9c:	7f 4f       	sbci	r23, 0xFF	; 255
 d9e:	ce 01       	movw	r24, r28
 da0:	0f 96       	adiw	r24, 0x0f	; 15
 da2:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 da6:	40 e0       	ldi	r20, 0x00	; 0
 da8:	61 e0       	ldi	r22, 0x01	; 1
 daa:	ce 01       	movw	r24, r28
 dac:	0f 96       	adiw	r24, 0x0f	; 15
 dae:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 db2:	65 96       	adiw	r28, 0x15	; 21
 db4:	0f b6       	in	r0, 0x3f	; 63
 db6:	f8 94       	cli
 db8:	de bf       	out	0x3e, r29	; 62
 dba:	0f be       	out	0x3f, r0	; 63
 dbc:	cd bf       	out	0x3d, r28	; 61
 dbe:	df 91       	pop	r29
 dc0:	cf 91       	pop	r28
 dc2:	08 95       	ret

Disassembly of section .text.state_abierto_UI:

00000dc4 <state_abierto_UI>:
 dc4:	cf 93       	push	r28
 dc6:	df 93       	push	r29
 dc8:	cd b7       	in	r28, 0x3d	; 61
 dca:	de b7       	in	r29, 0x3e	; 62
 dcc:	67 97       	sbiw	r28, 0x17	; 23
 dce:	0f b6       	in	r0, 0x3f	; 63
 dd0:	f8 94       	cli
 dd2:	de bf       	out	0x3e, r29	; 62
 dd4:	0f be       	out	0x3f, r0	; 63
 dd6:	cd bf       	out	0x3d, r28	; 61
 dd8:	29 8b       	std	Y+17, r18	; 0x11
 dda:	3a 8b       	std	Y+18, r19	; 0x12
 ddc:	4b 8b       	std	Y+19, r20	; 0x13
 dde:	5c 8b       	std	Y+20, r21	; 0x14
 de0:	6d 8b       	std	Y+21, r22	; 0x15
 de2:	7e 8b       	std	Y+22, r23	; 0x16
 de4:	8f 8b       	std	Y+23, r24	; 0x17
 de6:	ce 01       	movw	r24, r28
 de8:	41 96       	adiw	r24, 0x11	; 17
 dea:	0e 94 26 09 	call	0x124c	; 0x124c <lq_clear>
 dee:	2a e1       	ldi	r18, 0x1A	; 26
 df0:	32 e0       	ldi	r19, 0x02	; 2
 df2:	40 e0       	ldi	r20, 0x00	; 0
 df4:	80 e1       	ldi	r24, 0x10	; 16
 df6:	f9 01       	movw	r30, r18
 df8:	de 01       	movw	r26, r28
 dfa:	11 96       	adiw	r26, 0x01	; 1
 dfc:	74 2f       	mov	r23, r20
 dfe:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <__movmemx_qi>
 e02:	40 e0       	ldi	r20, 0x00	; 0
 e04:	60 e0       	ldi	r22, 0x00	; 0
 e06:	ce 01       	movw	r24, r28
 e08:	41 96       	adiw	r24, 0x11	; 17
 e0a:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 e0e:	be 01       	movw	r22, r28
 e10:	6f 5f       	subi	r22, 0xFF	; 255
 e12:	7f 4f       	sbci	r23, 0xFF	; 255
 e14:	ce 01       	movw	r24, r28
 e16:	41 96       	adiw	r24, 0x11	; 17
 e18:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 e1c:	40 e0       	ldi	r20, 0x00	; 0
 e1e:	61 e0       	ldi	r22, 0x01	; 1
 e20:	ce 01       	movw	r24, r28
 e22:	41 96       	adiw	r24, 0x11	; 17
 e24:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 e28:	67 96       	adiw	r28, 0x17	; 23
 e2a:	0f b6       	in	r0, 0x3f	; 63
 e2c:	f8 94       	cli
 e2e:	de bf       	out	0x3e, r29	; 62
 e30:	0f be       	out	0x3f, r0	; 63
 e32:	cd bf       	out	0x3d, r28	; 61
 e34:	df 91       	pop	r29
 e36:	cf 91       	pop	r28
 e38:	08 95       	ret

Disassembly of section .text.state_alarma_UI:

00000e3a <state_alarma_UI>:
 e3a:	cf 93       	push	r28
 e3c:	df 93       	push	r29
 e3e:	cd b7       	in	r28, 0x3d	; 61
 e40:	de b7       	in	r29, 0x3e	; 62
 e42:	68 97       	sbiw	r28, 0x18	; 24
 e44:	0f b6       	in	r0, 0x3f	; 63
 e46:	f8 94       	cli
 e48:	de bf       	out	0x3e, r29	; 62
 e4a:	0f be       	out	0x3f, r0	; 63
 e4c:	cd bf       	out	0x3d, r28	; 61
 e4e:	2a 8b       	std	Y+18, r18	; 0x12
 e50:	3b 8b       	std	Y+19, r19	; 0x13
 e52:	4c 8b       	std	Y+20, r20	; 0x14
 e54:	5d 8b       	std	Y+21, r21	; 0x15
 e56:	6e 8b       	std	Y+22, r22	; 0x16
 e58:	7f 8b       	std	Y+23, r23	; 0x17
 e5a:	88 8f       	std	Y+24, r24	; 0x18
 e5c:	ce 01       	movw	r24, r28
 e5e:	42 96       	adiw	r24, 0x12	; 18
 e60:	0e 94 26 09 	call	0x124c	; 0x124c <lq_clear>
 e64:	2a e2       	ldi	r18, 0x2A	; 42
 e66:	32 e0       	ldi	r19, 0x02	; 2
 e68:	40 e0       	ldi	r20, 0x00	; 0
 e6a:	81 e1       	ldi	r24, 0x11	; 17
 e6c:	f9 01       	movw	r30, r18
 e6e:	de 01       	movw	r26, r28
 e70:	11 96       	adiw	r26, 0x01	; 1
 e72:	74 2f       	mov	r23, r20
 e74:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <__movmemx_qi>
 e78:	40 e0       	ldi	r20, 0x00	; 0
 e7a:	60 e0       	ldi	r22, 0x00	; 0
 e7c:	ce 01       	movw	r24, r28
 e7e:	42 96       	adiw	r24, 0x12	; 18
 e80:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 e84:	be 01       	movw	r22, r28
 e86:	6f 5f       	subi	r22, 0xFF	; 255
 e88:	7f 4f       	sbci	r23, 0xFF	; 255
 e8a:	ce 01       	movw	r24, r28
 e8c:	42 96       	adiw	r24, 0x12	; 18
 e8e:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 e92:	40 e0       	ldi	r20, 0x00	; 0
 e94:	61 e0       	ldi	r22, 0x01	; 1
 e96:	ce 01       	movw	r24, r28
 e98:	42 96       	adiw	r24, 0x12	; 18
 e9a:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 e9e:	68 96       	adiw	r28, 0x18	; 24
 ea0:	0f b6       	in	r0, 0x3f	; 63
 ea2:	f8 94       	cli
 ea4:	de bf       	out	0x3e, r29	; 62
 ea6:	0f be       	out	0x3f, r0	; 63
 ea8:	cd bf       	out	0x3d, r28	; 61
 eaa:	df 91       	pop	r29
 eac:	cf 91       	pop	r28
 eae:	08 95       	ret

Disassembly of section .text.reset_typed_password:

000013bc <reset_typed_password>:
    13bc:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
    13c0:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <typedPassword_counter>
    13c4:	08 95       	ret

Disassembly of section .text.keypad_init:

000013c6 <keypad_init>:
    13c6:	80 ef       	ldi	r24, 0xF0	; 240
    13c8:	8a b9       	out	0x0a, r24	; 10
    13ca:	8f e0       	ldi	r24, 0x0F	; 15
    13cc:	8b b9       	out	0x0b, r24	; 11
    13ce:	08 95       	ret

Disassembly of section .text.millis_now:

000012f2 <millis_now>:
    12f2:	f8 94       	cli
    12f4:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <millis_counter>
    12f8:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <millis_counter+0x1>
    12fc:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <millis_counter+0x2>
    1300:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <millis_counter+0x3>
    1304:	78 94       	sei
    1306:	08 95       	ret

Disassembly of section .text.keypad_task:

00001162 <keypad_task>:
    1162:	0f 93       	push	r16
    1164:	1f 93       	push	r17
    1166:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <keypad_enable>
    116a:	81 11       	cpse	r24, r1
    116c:	12 c0       	rjmp	.+36     	; 0x1192 <keypad_task+0x30>
    116e:	0e 94 79 09 	call	0x12f2	; 0x12f2 <millis_now>
    1172:	00 91 12 01 	lds	r16, 0x0112	; 0x800112 <keypad_on_at>
    1176:	10 91 13 01 	lds	r17, 0x0113	; 0x800113 <keypad_on_at+0x1>
    117a:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <keypad_on_at+0x2>
    117e:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <keypad_on_at+0x3>
    1182:	06 17       	cp	r16, r22
    1184:	17 07       	cpc	r17, r23
    1186:	28 07       	cpc	r18, r24
    1188:	39 07       	cpc	r19, r25
    118a:	18 f4       	brcc	.+6      	; 0x1192 <keypad_task+0x30>
    118c:	81 e0       	ldi	r24, 0x01	; 1
    118e:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <keypad_enable>
    1192:	1f 91       	pop	r17
    1194:	0f 91       	pop	r16
    1196:	08 95       	ret

Disassembly of section .text.keypad_debounce_ms:

00001198 <keypad_debounce_ms>:
    1198:	cf 93       	push	r28
    119a:	df 93       	push	r29
    119c:	ec 01       	movw	r28, r24
    119e:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <keypad_enable>
    11a2:	0e 94 79 09 	call	0x12f2	; 0x12f2 <millis_now>
    11a6:	dc 01       	movw	r26, r24
    11a8:	cb 01       	movw	r24, r22
    11aa:	8c 0f       	add	r24, r28
    11ac:	9d 1f       	adc	r25, r29
    11ae:	a1 1d       	adc	r26, r1
    11b0:	b1 1d       	adc	r27, r1
    11b2:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <keypad_on_at>
    11b6:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <keypad_on_at+0x1>
    11ba:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <keypad_on_at+0x2>
    11be:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <keypad_on_at+0x3>
    11c2:	df 91       	pop	r29
    11c4:	cf 91       	pop	r28
    11c6:	08 95       	ret

Disassembly of section .text.keypad_scan:

00000a76 <keypad_scan>:
 a76:	cf 93       	push	r28
 a78:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <keypad_enable>
 a7c:	88 23       	and	r24, r24
 a7e:	09 f4       	brne	.+2      	; 0xa82 <keypad_scan+0xc>
 a80:	4f c0       	rjmp	.+158    	; 0xb20 <keypad_scan+0xaa>
 a82:	60 e0       	ldi	r22, 0x00	; 0
 a84:	46 c0       	rjmp	.+140    	; 0xb12 <keypad_scan+0x9c>
 a86:	2b b1       	in	r18, 0x0b	; 11
 a88:	e6 2f       	mov	r30, r22
 a8a:	f0 e0       	ldi	r31, 0x00	; 0
 a8c:	af 01       	movw	r20, r30
 a8e:	4c 5f       	subi	r20, 0xFC	; 252
 a90:	5f 4f       	sbci	r21, 0xFF	; 255
 a92:	81 e0       	ldi	r24, 0x01	; 1
 a94:	90 e0       	ldi	r25, 0x00	; 0
 a96:	02 c0       	rjmp	.+4      	; 0xa9c <keypad_scan+0x26>
 a98:	88 0f       	add	r24, r24
 a9a:	99 1f       	adc	r25, r25
 a9c:	4a 95       	dec	r20
 a9e:	e2 f7       	brpl	.-8      	; 0xa98 <keypad_scan+0x22>
 aa0:	92 2f       	mov	r25, r18
 aa2:	90 6f       	ori	r25, 0xF0	; 240
 aa4:	80 95       	com	r24
 aa6:	89 23       	and	r24, r25
 aa8:	8b b9       	out	0x0b, r24	; 11
 aaa:	8a e1       	ldi	r24, 0x1A	; 26
 aac:	8a 95       	dec	r24
 aae:	f1 f7       	brne	.-4      	; 0xaac <keypad_scan+0x36>
 ab0:	00 c0       	rjmp	.+0      	; 0xab2 <keypad_scan+0x3c>
 ab2:	99 b1       	in	r25, 0x09	; 9
 ab4:	9f 70       	andi	r25, 0x0F	; 15
 ab6:	80 e0       	ldi	r24, 0x00	; 0
 ab8:	29 c0       	rjmp	.+82     	; 0xb0c <keypad_scan+0x96>
 aba:	48 2f       	mov	r20, r24
 abc:	50 e0       	ldi	r21, 0x00	; 0
 abe:	29 2f       	mov	r18, r25
 ac0:	30 e0       	ldi	r19, 0x00	; 0
 ac2:	08 2e       	mov	r0, r24
 ac4:	02 c0       	rjmp	.+4      	; 0xaca <keypad_scan+0x54>
 ac6:	35 95       	asr	r19
 ac8:	27 95       	ror	r18
 aca:	0a 94       	dec	r0
 acc:	e2 f7       	brpl	.-8      	; 0xac6 <keypad_scan+0x50>
 ace:	20 fd       	sbrc	r18, 0
 ad0:	1c c0       	rjmp	.+56     	; 0xb0a <keypad_scan+0x94>
 ad2:	cf 01       	movw	r24, r30
 ad4:	88 0f       	add	r24, r24
 ad6:	99 1f       	adc	r25, r25
 ad8:	88 0f       	add	r24, r24
 ada:	99 1f       	adc	r25, r25
 adc:	84 0f       	add	r24, r20
 ade:	95 1f       	adc	r25, r21
 ae0:	09 2e       	mov	r0, r25
 ae2:	00 0c       	add	r0, r0
 ae4:	aa 0b       	sbc	r26, r26
 ae6:	83 59       	subi	r24, 0x93	; 147
 ae8:	9d 4f       	sbci	r25, 0xFD	; 253
 aea:	af 4f       	sbci	r26, 0xFF	; 255
 aec:	fc 01       	movw	r30, r24
 aee:	c4 91       	lpm	r28, Z
 af0:	a7 fd       	sbrc	r26, 7
 af2:	c0 81       	ld	r28, Z
 af4:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <prevKey.2554>
 af8:	c8 17       	cp	r28, r24
 afa:	a1 f0       	breq	.+40     	; 0xb24 <keypad_scan+0xae>
 afc:	88 ec       	ldi	r24, 0xC8	; 200
 afe:	90 e0       	ldi	r25, 0x00	; 0
 b00:	0e 94 cc 08 	call	0x1198	; 0x1198 <keypad_debounce_ms>
 b04:	c0 93 2a 01 	sts	0x012A, r28	; 0x80012a <prevKey.2554>
 b08:	0e c0       	rjmp	.+28     	; 0xb26 <keypad_scan+0xb0>
 b0a:	8f 5f       	subi	r24, 0xFF	; 255
 b0c:	84 30       	cpi	r24, 0x04	; 4
 b0e:	a8 f2       	brcs	.-86     	; 0xaba <keypad_scan+0x44>
 b10:	6f 5f       	subi	r22, 0xFF	; 255
 b12:	64 30       	cpi	r22, 0x04	; 4
 b14:	08 f4       	brcc	.+2      	; 0xb18 <keypad_scan+0xa2>
 b16:	b7 cf       	rjmp	.-146    	; 0xa86 <keypad_scan+0x10>
 b18:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <prevKey.2554>
 b1c:	c0 e0       	ldi	r28, 0x00	; 0
 b1e:	03 c0       	rjmp	.+6      	; 0xb26 <keypad_scan+0xb0>
 b20:	c0 e0       	ldi	r28, 0x00	; 0
 b22:	01 c0       	rjmp	.+2      	; 0xb26 <keypad_scan+0xb0>
 b24:	c0 e0       	ldi	r28, 0x00	; 0
 b26:	8c 2f       	mov	r24, r28
 b28:	cf 91       	pop	r28
 b2a:	08 95       	ret

Disassembly of section .text.timer0_init:

00001332 <timer0_init>:
    1332:	14 bc       	out	0x24, r1	; 36
    1334:	85 b5       	in	r24, 0x25	; 37
    1336:	83 60       	ori	r24, 0x03	; 3
    1338:	85 bd       	out	0x25, r24	; 37
    133a:	ee e6       	ldi	r30, 0x6E	; 110
    133c:	f0 e0       	ldi	r31, 0x00	; 0
    133e:	80 81       	ld	r24, Z
    1340:	81 60       	ori	r24, 0x01	; 1
    1342:	80 83       	st	Z, r24
    1344:	08 95       	ret

Disassembly of section .text.buzzer_init:

000013ae <buzzer_init>:
    13ae:	84 b1       	in	r24, 0x04	; 4
    13b0:	80 62       	ori	r24, 0x20	; 32
    13b2:	84 b9       	out	0x04, r24	; 4
    13b4:	85 b1       	in	r24, 0x05	; 5
    13b6:	8f 7d       	andi	r24, 0xDF	; 223
    13b8:	85 b9       	out	0x05, r24	; 5
    13ba:	08 95       	ret

Disassembly of section .text.buzzer_task:

000011c8 <buzzer_task>:
    11c8:	0f 93       	push	r16
    11ca:	1f 93       	push	r17
    11cc:	0e 94 79 09 	call	0x12f2	; 0x12f2 <millis_now>
    11d0:	00 91 22 01 	lds	r16, 0x0122	; 0x800122 <buzzer_off_at>
    11d4:	10 91 23 01 	lds	r17, 0x0123	; 0x800123 <buzzer_off_at+0x1>
    11d8:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <buzzer_off_at+0x2>
    11dc:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <buzzer_off_at+0x3>
    11e0:	06 17       	cp	r16, r22
    11e2:	17 07       	cpc	r17, r23
    11e4:	28 07       	cpc	r18, r24
    11e6:	39 07       	cpc	r19, r25
    11e8:	18 f4       	brcc	.+6      	; 0x11f0 <buzzer_task+0x28>
    11ea:	85 b1       	in	r24, 0x05	; 5
    11ec:	8f 7d       	andi	r24, 0xDF	; 223
    11ee:	85 b9       	out	0x05, r24	; 5
    11f0:	1f 91       	pop	r17
    11f2:	0f 91       	pop	r16
    11f4:	08 95       	ret

Disassembly of section .text.buzzer_beep:

00000fe8 <buzzer_beep>:
     fe8:	cf 93       	push	r28
     fea:	df 93       	push	r29
     fec:	ec 01       	movw	r28, r24
     fee:	85 b1       	in	r24, 0x05	; 5
     ff0:	80 62       	ori	r24, 0x20	; 32
     ff2:	85 b9       	out	0x05, r24	; 5
     ff4:	0e 94 79 09 	call	0x12f2	; 0x12f2 <millis_now>
     ff8:	60 93 26 01 	sts	0x0126, r22	; 0x800126 <buzzer_on_at>
     ffc:	70 93 27 01 	sts	0x0127, r23	; 0x800127 <buzzer_on_at+0x1>
    1000:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <buzzer_on_at+0x2>
    1004:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <buzzer_on_at+0x3>
    1008:	0e 94 79 09 	call	0x12f2	; 0x12f2 <millis_now>
    100c:	dc 01       	movw	r26, r24
    100e:	cb 01       	movw	r24, r22
    1010:	8c 0f       	add	r24, r28
    1012:	9d 1f       	adc	r25, r29
    1014:	a1 1d       	adc	r26, r1
    1016:	b1 1d       	adc	r27, r1
    1018:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <buzzer_off_at>
    101c:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <buzzer_off_at+0x1>
    1020:	a0 93 24 01 	sts	0x0124, r26	; 0x800124 <buzzer_off_at+0x2>
    1024:	b0 93 25 01 	sts	0x0125, r27	; 0x800125 <buzzer_off_at+0x3>
    1028:	df 91       	pop	r29
    102a:	cf 91       	pop	r28
    102c:	08 95       	ret

Disassembly of section .text.alarm_start:

0000102e <alarm_start>:
    102e:	0f 93       	push	r16
    1030:	1f 93       	push	r17
    1032:	0e 94 79 09 	call	0x12f2	; 0x12f2 <millis_now>
    1036:	21 e0       	ldi	r18, 0x01	; 1
    1038:	20 93 31 01 	sts	0x0131, r18	; 0x800131 <alarm_active>
    103c:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <alarm_phase>
    1040:	8b 01       	movw	r16, r22
    1042:	9c 01       	movw	r18, r24
    1044:	00 5f       	subi	r16, 0xF0	; 240
    1046:	18 4d       	sbci	r17, 0xD8	; 216
    1048:	2f 4f       	sbci	r18, 0xFF	; 255
    104a:	3f 4f       	sbci	r19, 0xFF	; 255
    104c:	00 93 1e 01 	sts	0x011E, r16	; 0x80011e <alarm_until>
    1050:	10 93 1f 01 	sts	0x011F, r17	; 0x80011f <alarm_until+0x1>
    1054:	20 93 20 01 	sts	0x0120, r18	; 0x800120 <alarm_until+0x2>
    1058:	30 93 21 01 	sts	0x0121, r19	; 0x800121 <alarm_until+0x3>
    105c:	60 93 1a 01 	sts	0x011A, r22	; 0x80011a <alarm_next_toggle>
    1060:	70 93 1b 01 	sts	0x011B, r23	; 0x80011b <alarm_next_toggle+0x1>
    1064:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <alarm_next_toggle+0x2>
    1068:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <alarm_next_toggle+0x3>
    106c:	1f 91       	pop	r17
    106e:	0f 91       	pop	r16
    1070:	08 95       	ret

Disassembly of section .text.led_red_on:

00001380 <led_red_on>:
    1380:	85 b1       	in	r24, 0x05	; 5
    1382:	8d 7f       	andi	r24, 0xFD	; 253
    1384:	85 b9       	out	0x05, r24	; 5
    1386:	85 b1       	in	r24, 0x05	; 5
    1388:	81 60       	ori	r24, 0x01	; 1
    138a:	85 b9       	out	0x05, r24	; 5
    138c:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <led_state>
    1390:	08 95       	ret

Disassembly of section .text.led_green_on:

00001346 <led_green_on>:
    1346:	85 b1       	in	r24, 0x05	; 5
    1348:	8e 7f       	andi	r24, 0xFE	; 254
    134a:	85 b9       	out	0x05, r24	; 5
    134c:	85 b1       	in	r24, 0x05	; 5
    134e:	82 60       	ori	r24, 0x02	; 2
    1350:	85 b9       	out	0x05, r24	; 5
    1352:	81 e0       	ldi	r24, 0x01	; 1
    1354:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <led_state>
    1358:	08 95       	ret

Disassembly of section .text.alarm_task:

00000b2c <alarm_task>:
 b2c:	0f 93       	push	r16
 b2e:	1f 93       	push	r17
 b30:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <alarm_active>
 b34:	88 23       	and	r24, r24
 b36:	09 f4       	brne	.+2      	; 0xb3a <alarm_task+0xe>
 b38:	45 c0       	rjmp	.+138    	; 0xbc4 <alarm_task+0x98>
 b3a:	0e 94 79 09 	call	0x12f2	; 0x12f2 <millis_now>
 b3e:	00 91 1e 01 	lds	r16, 0x011E	; 0x80011e <alarm_until>
 b42:	10 91 1f 01 	lds	r17, 0x011F	; 0x80011f <alarm_until+0x1>
 b46:	20 91 20 01 	lds	r18, 0x0120	; 0x800120 <alarm_until+0x2>
 b4a:	30 91 21 01 	lds	r19, 0x0121	; 0x800121 <alarm_until+0x3>
 b4e:	06 17       	cp	r16, r22
 b50:	17 07       	cpc	r17, r23
 b52:	28 07       	cpc	r18, r24
 b54:	39 07       	cpc	r19, r25
 b56:	40 f4       	brcc	.+16     	; 0xb68 <alarm_task+0x3c>
 b58:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <alarm_active>
 b5c:	85 b1       	in	r24, 0x05	; 5
 b5e:	8f 7d       	andi	r24, 0xDF	; 223
 b60:	85 b9       	out	0x05, r24	; 5
 b62:	0e 94 c0 09 	call	0x1380	; 0x1380 <led_red_on>
 b66:	2e c0       	rjmp	.+92     	; 0xbc4 <alarm_task+0x98>
 b68:	00 91 1a 01 	lds	r16, 0x011A	; 0x80011a <alarm_next_toggle>
 b6c:	10 91 1b 01 	lds	r17, 0x011B	; 0x80011b <alarm_next_toggle+0x1>
 b70:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <alarm_next_toggle+0x2>
 b74:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <alarm_next_toggle+0x3>
 b78:	06 17       	cp	r16, r22
 b7a:	17 07       	cpc	r17, r23
 b7c:	28 07       	cpc	r18, r24
 b7e:	39 07       	cpc	r19, r25
 b80:	08 f5       	brcc	.+66     	; 0xbc4 <alarm_task+0x98>
 b82:	dc 01       	movw	r26, r24
 b84:	cb 01       	movw	r24, r22
 b86:	88 53       	subi	r24, 0x38	; 56
 b88:	9f 4f       	sbci	r25, 0xFF	; 255
 b8a:	af 4f       	sbci	r26, 0xFF	; 255
 b8c:	bf 4f       	sbci	r27, 0xFF	; 255
 b8e:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <alarm_next_toggle>
 b92:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <alarm_next_toggle+0x1>
 b96:	a0 93 1c 01 	sts	0x011C, r26	; 0x80011c <alarm_next_toggle+0x2>
 b9a:	b0 93 1d 01 	sts	0x011D, r27	; 0x80011d <alarm_next_toggle+0x3>
 b9e:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <alarm_phase>
 ba2:	88 23       	and	r24, r24
 ba4:	19 f0       	breq	.+6      	; 0xbac <alarm_task+0x80>
 ba6:	0e 94 c0 09 	call	0x1380	; 0x1380 <led_red_on>
 baa:	02 c0       	rjmp	.+4      	; 0xbb0 <alarm_task+0x84>
 bac:	0e 94 a3 09 	call	0x1346	; 0x1346 <led_green_on>
 bb0:	90 91 30 01 	lds	r25, 0x0130	; 0x800130 <alarm_phase>
 bb4:	81 e0       	ldi	r24, 0x01	; 1
 bb6:	89 27       	eor	r24, r25
 bb8:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <alarm_phase>
 bbc:	84 e6       	ldi	r24, 0x64	; 100
 bbe:	90 e0       	ldi	r25, 0x00	; 0
 bc0:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <buzzer_beep>
 bc4:	1f 91       	pop	r17
 bc6:	0f 91       	pop	r16
 bc8:	08 95       	ret

Disassembly of section .text.led_init:

0000135a <led_init>:
    135a:	84 b1       	in	r24, 0x04	; 4
    135c:	83 60       	ori	r24, 0x03	; 3
    135e:	84 b9       	out	0x04, r24	; 4
    1360:	85 b1       	in	r24, 0x05	; 5
    1362:	81 60       	ori	r24, 0x01	; 1
    1364:	85 b9       	out	0x05, r24	; 5
    1366:	85 b1       	in	r24, 0x05	; 5
    1368:	8d 7f       	andi	r24, 0xFD	; 253
    136a:	85 b9       	out	0x05, r24	; 5
    136c:	08 95       	ret

Disassembly of section .text.led_task:

00000f9e <led_task>:
 f9e:	0f 93       	push	r16
 fa0:	1f 93       	push	r17
 fa2:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <led_toggle_enable>
 fa6:	88 23       	and	r24, r24
 fa8:	e1 f0       	breq	.+56     	; 0xfe2 <led_task+0x44>
 faa:	0e 94 79 09 	call	0x12f2	; 0x12f2 <millis_now>
 fae:	00 91 16 01 	lds	r16, 0x0116	; 0x800116 <led_off_at>
 fb2:	10 91 17 01 	lds	r17, 0x0117	; 0x800117 <led_off_at+0x1>
 fb6:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <led_off_at+0x2>
 fba:	30 91 19 01 	lds	r19, 0x0119	; 0x800119 <led_off_at+0x3>
 fbe:	06 17       	cp	r16, r22
 fc0:	17 07       	cpc	r17, r23
 fc2:	28 07       	cpc	r18, r24
 fc4:	39 07       	cpc	r19, r25
 fc6:	68 f4       	brcc	.+26     	; 0xfe2 <led_task+0x44>
 fc8:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <led_state>
 fcc:	81 11       	cpse	r24, r1
 fce:	03 c0       	rjmp	.+6      	; 0xfd6 <led_task+0x38>
 fd0:	0e 94 a3 09 	call	0x1346	; 0x1346 <led_green_on>
 fd4:	04 c0       	rjmp	.+8      	; 0xfde <led_task+0x40>
 fd6:	81 30       	cpi	r24, 0x01	; 1
 fd8:	11 f4       	brne	.+4      	; 0xfde <led_task+0x40>
 fda:	0e 94 c0 09 	call	0x1380	; 0x1380 <led_red_on>
 fde:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <led_toggle_enable>
 fe2:	1f 91       	pop	r17
 fe4:	0f 91       	pop	r16
 fe6:	08 95       	ret

Disassembly of section .text.main:

0000027e <main>:
 27e:	cf 93       	push	r28
 280:	df 93       	push	r29
 282:	cd b7       	in	r28, 0x3d	; 61
 284:	de b7       	in	r29, 0x3e	; 62
 286:	a4 97       	sbiw	r28, 0x24	; 36
 288:	0f b6       	in	r0, 0x3f	; 63
 28a:	f8 94       	cli
 28c:	de bf       	out	0x3e, r29	; 62
 28e:	0f be       	out	0x3f, r0	; 63
 290:	cd bf       	out	0x3d, r28	; 61
 292:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <keypad_init>
 296:	0e 94 99 09 	call	0x1332	; 0x1332 <timer0_init>
 29a:	0e 94 d7 09 	call	0x13ae	; 0x13ae <buzzer_init>
 29e:	0e 94 ad 09 	call	0x135a	; 0x135a <led_init>
 2a2:	78 94       	sei
 2a4:	20 e0       	ldi	r18, 0x00	; 0
 2a6:	42 e0       	ldi	r20, 0x02	; 2
 2a8:	60 e1       	ldi	r22, 0x10	; 16
 2aa:	87 e2       	ldi	r24, 0x27	; 39
 2ac:	0e 94 ad 04 	call	0x95a	; 0x95a <lq_init>
 2b0:	29 83       	std	Y+1, r18	; 0x01
 2b2:	3a 83       	std	Y+2, r19	; 0x02
 2b4:	4b 83       	std	Y+3, r20	; 0x03
 2b6:	5c 83       	std	Y+4, r21	; 0x04
 2b8:	6d 83       	std	Y+5, r22	; 0x05
 2ba:	7e 83       	std	Y+6, r23	; 0x06
 2bc:	8f 83       	std	Y+7, r24	; 0x07
 2be:	ce 01       	movw	r24, r28
 2c0:	01 96       	adiw	r24, 0x01	; 1
 2c2:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <lq_turnOnBacklight>
 2c6:	2b e3       	ldi	r18, 0x3B	; 59
 2c8:	32 e0       	ldi	r19, 0x02	; 2
 2ca:	40 e0       	ldi	r20, 0x00	; 0
 2cc:	8c e0       	ldi	r24, 0x0C	; 12
 2ce:	f9 01       	movw	r30, r18
 2d0:	de 01       	movw	r26, r28
 2d2:	18 96       	adiw	r26, 0x08	; 8
 2d4:	74 2f       	mov	r23, r20
 2d6:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <__movmemx_qi>
 2da:	be 01       	movw	r22, r28
 2dc:	68 5f       	subi	r22, 0xF8	; 248
 2de:	7f 4f       	sbci	r23, 0xFF	; 255
 2e0:	ce 01       	movw	r24, r28
 2e2:	01 96       	adiw	r24, 0x01	; 1
 2e4:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 2e8:	2f ef       	ldi	r18, 0xFF	; 255
 2ea:	83 ed       	ldi	r24, 0xD3	; 211
 2ec:	90 e3       	ldi	r25, 0x30	; 48
 2ee:	21 50       	subi	r18, 0x01	; 1
 2f0:	80 40       	sbci	r24, 0x00	; 0
 2f2:	90 40       	sbci	r25, 0x00	; 0
 2f4:	e1 f7       	brne	.-8      	; 0x2ee <main+0x70>
 2f6:	00 c0       	rjmp	.+0      	; 0x2f8 <main+0x7a>
 2f8:	00 00       	nop
 2fa:	29 81       	ldd	r18, Y+1	; 0x01
 2fc:	3a 81       	ldd	r19, Y+2	; 0x02
 2fe:	4b 81       	ldd	r20, Y+3	; 0x03
 300:	5c 81       	ldd	r21, Y+4	; 0x04
 302:	6d 81       	ldd	r22, Y+5	; 0x05
 304:	7e 81       	ldd	r23, Y+6	; 0x06
 306:	8f 81       	ldd	r24, Y+7	; 0x07
 308:	0e 94 e5 05 	call	0xbca	; 0xbca <state_menu_UI>
 30c:	87 e0       	ldi	r24, 0x07	; 7
 30e:	91 e0       	ldi	r25, 0x01	; 1
 310:	a0 e8       	ldi	r26, 0x80	; 128
 312:	c8 2e       	mov	r12, r24
 314:	d9 2e       	mov	r13, r25
 316:	ea 2e       	mov	r14, r26
 318:	bc 01       	movw	r22, r24
 31a:	8a 2f       	mov	r24, r26
 31c:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <strlen>
 320:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <storedPassword_length>
 324:	0e 94 de 09 	call	0x13bc	; 0x13bc <reset_typed_password>
 328:	0f 2e       	mov	r0, r31
 32a:	f3 e0       	ldi	r31, 0x03	; 3
 32c:	ff 2e       	mov	r15, r31
 32e:	f0 2d       	mov	r31, r0
 330:	00 e0       	ldi	r16, 0x00	; 0
 332:	04 c0       	rjmp	.+8      	; 0x33c <main+0xbe>
 334:	0f 2e       	mov	r0, r31
 336:	f3 e0       	ldi	r31, 0x03	; 3
 338:	ff 2e       	mov	r15, r31
 33a:	f0 2d       	mov	r31, r0
 33c:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <buzzer_task>
 340:	0e 94 cf 07 	call	0xf9e	; 0xf9e <led_task>
 344:	0e 94 b1 08 	call	0x1162	; 0x1162 <keypad_task>
 348:	0e 94 96 05 	call	0xb2c	; 0xb2c <alarm_task>
 34c:	0e 94 3b 05 	call	0xa76	; 0xa76 <keypad_scan>
 350:	18 2f       	mov	r17, r24
 352:	88 23       	and	r24, r24
 354:	99 f3       	breq	.-26     	; 0x33c <main+0xbe>
 356:	84 e1       	ldi	r24, 0x14	; 20
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <buzzer_beep>
 35e:	02 30       	cpi	r16, 0x02	; 2
 360:	09 f4       	brne	.+2      	; 0x364 <main+0xe6>
 362:	ec c0       	rjmp	.+472    	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
 364:	28 f4       	brcc	.+10     	; 0x370 <main+0xf2>
 366:	00 23       	and	r16, r16
 368:	61 f0       	breq	.+24     	; 0x382 <main+0x104>
 36a:	01 30       	cpi	r16, 0x01	; 1
 36c:	61 f1       	breq	.+88     	; 0x3c6 <main+0x148>
 36e:	e6 cf       	rjmp	.-52     	; 0x33c <main+0xbe>
 370:	04 30       	cpi	r16, 0x04	; 4
 372:	09 f4       	brne	.+2      	; 0x376 <main+0xf8>
 374:	b8 c2       	rjmp	.+1392   	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
 376:	08 f4       	brcc	.+2      	; 0x37a <main+0xfc>
 378:	9a c1       	rjmp	.+820    	; 0x6ae <__EEPROM_REGION_LENGTH__+0x2ae>
 37a:	05 30       	cpi	r16, 0x05	; 5
 37c:	09 f4       	brne	.+2      	; 0x380 <main+0x102>
 37e:	3b c2       	rjmp	.+1142   	; 0x7f6 <__EEPROM_REGION_LENGTH__+0x3f6>
 380:	dd cf       	rjmp	.-70     	; 0x33c <main+0xbe>
 382:	11 34       	cpi	r17, 0x41	; 65
 384:	79 f4       	brne	.+30     	; 0x3a4 <main+0x126>
 386:	29 81       	ldd	r18, Y+1	; 0x01
 388:	3a 81       	ldd	r19, Y+2	; 0x02
 38a:	4b 81       	ldd	r20, Y+3	; 0x03
 38c:	5c 81       	ldd	r21, Y+4	; 0x04
 38e:	6d 81       	ldd	r22, Y+5	; 0x05
 390:	7e 81       	ldd	r23, Y+6	; 0x06
 392:	8f 81       	ldd	r24, Y+7	; 0x07
 394:	0e 94 31 06 	call	0xc62	; 0xc62 <state_ingreso_UI>
 398:	0f 2e       	mov	r0, r31
 39a:	f3 e0       	ldi	r31, 0x03	; 3
 39c:	ff 2e       	mov	r15, r31
 39e:	f0 2d       	mov	r31, r0
 3a0:	01 e0       	ldi	r16, 0x01	; 1
 3a2:	cc cf       	rjmp	.-104    	; 0x33c <main+0xbe>
 3a4:	12 34       	cpi	r17, 0x42	; 66
 3a6:	31 f6       	brne	.-116    	; 0x334 <main+0xb6>
 3a8:	29 81       	ldd	r18, Y+1	; 0x01
 3aa:	3a 81       	ldd	r19, Y+2	; 0x02
 3ac:	4b 81       	ldd	r20, Y+3	; 0x03
 3ae:	5c 81       	ldd	r21, Y+4	; 0x04
 3b0:	6d 81       	ldd	r22, Y+5	; 0x05
 3b2:	7e 81       	ldd	r23, Y+6	; 0x06
 3b4:	8f 81       	ldd	r24, Y+7	; 0x07
 3b6:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <state_cambio_actual_UI>
 3ba:	0f 2e       	mov	r0, r31
 3bc:	f3 e0       	ldi	r31, 0x03	; 3
 3be:	ff 2e       	mov	r15, r31
 3c0:	f0 2d       	mov	r31, r0
 3c2:	02 e0       	ldi	r16, 0x02	; 2
 3c4:	bb cf       	rjmp	.-138    	; 0x33c <main+0xbe>
 3c6:	13 32       	cpi	r17, 0x23	; 35
 3c8:	69 f4       	brne	.+26     	; 0x3e4 <main+0x166>
 3ca:	0e 94 de 09 	call	0x13bc	; 0x13bc <reset_typed_password>
 3ce:	29 81       	ldd	r18, Y+1	; 0x01
 3d0:	3a 81       	ldd	r19, Y+2	; 0x02
 3d2:	4b 81       	ldd	r20, Y+3	; 0x03
 3d4:	5c 81       	ldd	r21, Y+4	; 0x04
 3d6:	6d 81       	ldd	r22, Y+5	; 0x05
 3d8:	7e 81       	ldd	r23, Y+6	; 0x06
 3da:	8f 81       	ldd	r24, Y+7	; 0x07
 3dc:	0e 94 e5 05 	call	0xbca	; 0xbca <state_menu_UI>
 3e0:	00 e0       	ldi	r16, 0x00	; 0
 3e2:	ac cf       	rjmp	.-168    	; 0x33c <main+0xbe>
 3e4:	14 34       	cpi	r17, 0x44	; 68
 3e6:	09 f0       	breq	.+2      	; 0x3ea <main+0x16c>
 3e8:	62 c0       	rjmp	.+196    	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
 3ea:	20 e0       	ldi	r18, 0x00	; 0
 3ec:	31 e0       	ldi	r19, 0x01	; 1
 3ee:	40 e8       	ldi	r20, 0x80	; 128
 3f0:	6c 2d       	mov	r22, r12
 3f2:	7d 2d       	mov	r23, r13
 3f4:	8e 2d       	mov	r24, r14
 3f6:	0e 94 39 08 	call	0x1072	; 0x1072 <strcmp>
 3fa:	89 2b       	or	r24, r25
 3fc:	09 f4       	brne	.+2      	; 0x400 <__EEPROM_REGION_LENGTH__>
 3fe:	48 c0       	rjmp	.+144    	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
 400:	fa 94       	dec	r15
 402:	f1 10       	cpse	r15, r1
 404:	0f c0       	rjmp	.+30     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 406:	29 81       	ldd	r18, Y+1	; 0x01
 408:	3a 81       	ldd	r19, Y+2	; 0x02
 40a:	4b 81       	ldd	r20, Y+3	; 0x03
 40c:	5c 81       	ldd	r21, Y+4	; 0x04
 40e:	6d 81       	ldd	r22, Y+5	; 0x05
 410:	7e 81       	ldd	r23, Y+6	; 0x06
 412:	8f 81       	ldd	r24, Y+7	; 0x07
 414:	0e 94 1d 07 	call	0xe3a	; 0xe3a <state_alarma_UI>
 418:	0e 94 17 08 	call	0x102e	; 0x102e <alarm_start>
 41c:	0e 94 de 09 	call	0x13bc	; 0x13bc <reset_typed_password>
 420:	05 e0       	ldi	r16, 0x05	; 5
 422:	8c cf       	rjmp	.-232    	; 0x33c <main+0xbe>
 424:	ce 01       	movw	r24, r28
 426:	01 96       	adiw	r24, 0x01	; 1
 428:	0e 94 26 09 	call	0x124c	; 0x124c <lq_clear>
 42c:	27 e4       	ldi	r18, 0x47	; 71
 42e:	32 e0       	ldi	r19, 0x02	; 2
 430:	40 e0       	ldi	r20, 0x00	; 0
 432:	8c e0       	ldi	r24, 0x0C	; 12
 434:	f9 01       	movw	r30, r18
 436:	de 01       	movw	r26, r28
 438:	54 96       	adiw	r26, 0x14	; 20
 43a:	74 2f       	mov	r23, r20
 43c:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <__movmemx_qi>
 440:	40 e0       	ldi	r20, 0x00	; 0
 442:	60 e0       	ldi	r22, 0x00	; 0
 444:	ce 01       	movw	r24, r28
 446:	01 96       	adiw	r24, 0x01	; 1
 448:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 44c:	be 01       	movw	r22, r28
 44e:	6c 5e       	subi	r22, 0xEC	; 236
 450:	7f 4f       	sbci	r23, 0xFF	; 255
 452:	ce 01       	movw	r24, r28
 454:	01 96       	adiw	r24, 0x01	; 1
 456:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 45a:	40 e0       	ldi	r20, 0x00	; 0
 45c:	61 e0       	ldi	r22, 0x01	; 1
 45e:	ce 01       	movw	r24, r28
 460:	01 96       	adiw	r24, 0x01	; 1
 462:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 466:	2f ef       	ldi	r18, 0xFF	; 255
 468:	89 e6       	ldi	r24, 0x69	; 105
 46a:	98 e1       	ldi	r25, 0x18	; 24
 46c:	21 50       	subi	r18, 0x01	; 1
 46e:	80 40       	sbci	r24, 0x00	; 0
 470:	90 40       	sbci	r25, 0x00	; 0
 472:	e1 f7       	brne	.-8      	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 474:	00 c0       	rjmp	.+0      	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 476:	00 00       	nop
 478:	0e 94 de 09 	call	0x13bc	; 0x13bc <reset_typed_password>
 47c:	29 81       	ldd	r18, Y+1	; 0x01
 47e:	3a 81       	ldd	r19, Y+2	; 0x02
 480:	4b 81       	ldd	r20, Y+3	; 0x03
 482:	5c 81       	ldd	r21, Y+4	; 0x04
 484:	6d 81       	ldd	r22, Y+5	; 0x05
 486:	7e 81       	ldd	r23, Y+6	; 0x06
 488:	8f 81       	ldd	r24, Y+7	; 0x07
 48a:	0e 94 31 06 	call	0xc62	; 0xc62 <state_ingreso_UI>
 48e:	56 cf       	rjmp	.-340    	; 0x33c <main+0xbe>
 490:	0e 94 de 09 	call	0x13bc	; 0x13bc <reset_typed_password>
 494:	0e 94 a3 09 	call	0x1346	; 0x1346 <led_green_on>
 498:	29 81       	ldd	r18, Y+1	; 0x01
 49a:	3a 81       	ldd	r19, Y+2	; 0x02
 49c:	4b 81       	ldd	r20, Y+3	; 0x03
 49e:	5c 81       	ldd	r21, Y+4	; 0x04
 4a0:	6d 81       	ldd	r22, Y+5	; 0x05
 4a2:	7e 81       	ldd	r23, Y+6	; 0x06
 4a4:	8f 81       	ldd	r24, Y+7	; 0x07
 4a6:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <state_abierto_UI>
 4aa:	04 e0       	ldi	r16, 0x04	; 4
 4ac:	47 cf       	rjmp	.-370    	; 0x33c <main+0xbe>
 4ae:	13 34       	cpi	r17, 0x43	; 67
 4b0:	39 f5       	brne	.+78     	; 0x500 <__EEPROM_REGION_LENGTH__+0x100>
 4b2:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <typedPassword_counter>
 4b6:	88 23       	and	r24, r24
 4b8:	09 f4       	brne	.+2      	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
 4ba:	40 cf       	rjmp	.-384    	; 0x33c <main+0xbe>
 4bc:	20 e2       	ldi	r18, 0x20	; 32
 4be:	30 e0       	ldi	r19, 0x00	; 0
 4c0:	3d 8b       	std	Y+21, r19	; 0x15
 4c2:	2c 8b       	std	Y+20, r18	; 0x14
 4c4:	4f ef       	ldi	r20, 0xFF	; 255
 4c6:	48 0f       	add	r20, r24
 4c8:	40 93 2c 01 	sts	0x012C, r20	; 0x80012c <typedPassword_counter>
 4cc:	61 e0       	ldi	r22, 0x01	; 1
 4ce:	ce 01       	movw	r24, r28
 4d0:	01 96       	adiw	r24, 0x01	; 1
 4d2:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 4d6:	be 01       	movw	r22, r28
 4d8:	6c 5e       	subi	r22, 0xEC	; 236
 4da:	7f 4f       	sbci	r23, 0xFF	; 255
 4dc:	ce 01       	movw	r24, r28
 4de:	01 96       	adiw	r24, 0x01	; 1
 4e0:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 4e4:	40 91 2c 01 	lds	r20, 0x012C	; 0x80012c <typedPassword_counter>
 4e8:	61 e0       	ldi	r22, 0x01	; 1
 4ea:	ce 01       	movw	r24, r28
 4ec:	01 96       	adiw	r24, 0x01	; 1
 4ee:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 4f2:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <typedPassword_counter>
 4f6:	f0 e0       	ldi	r31, 0x00	; 0
 4f8:	e0 50       	subi	r30, 0x00	; 0
 4fa:	ff 4f       	sbci	r31, 0xFF	; 255
 4fc:	10 82       	st	Z, r1
 4fe:	1e cf       	rjmp	.-452    	; 0x33c <main+0xbe>
 500:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <typedPassword_counter>
 504:	e6 30       	cpi	r30, 0x06	; 6
 506:	08 f0       	brcs	.+2      	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
 508:	19 cf       	rjmp	.-462    	; 0x33c <main+0xbe>
 50a:	81 e0       	ldi	r24, 0x01	; 1
 50c:	8e 0f       	add	r24, r30
 50e:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <typedPassword_counter>
 512:	f0 e0       	ldi	r31, 0x00	; 0
 514:	e0 50       	subi	r30, 0x00	; 0
 516:	ff 4f       	sbci	r31, 0xFF	; 255
 518:	10 83       	st	Z, r17
 51a:	e8 2f       	mov	r30, r24
 51c:	f0 e0       	ldi	r31, 0x00	; 0
 51e:	e0 50       	subi	r30, 0x00	; 0
 520:	ff 4f       	sbci	r31, 0xFF	; 255
 522:	10 82       	st	Z, r1
 524:	8a e2       	ldi	r24, 0x2A	; 42
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	9d 8b       	std	Y+21, r25	; 0x15
 52a:	8c 8b       	std	Y+20, r24	; 0x14
 52c:	be 01       	movw	r22, r28
 52e:	6c 5e       	subi	r22, 0xEC	; 236
 530:	7f 4f       	sbci	r23, 0xFF	; 255
 532:	ce 01       	movw	r24, r28
 534:	01 96       	adiw	r24, 0x01	; 1
 536:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 53a:	00 cf       	rjmp	.-512    	; 0x33c <main+0xbe>
 53c:	13 32       	cpi	r17, 0x23	; 35
 53e:	69 f4       	brne	.+26     	; 0x55a <__EEPROM_REGION_LENGTH__+0x15a>
 540:	0e 94 de 09 	call	0x13bc	; 0x13bc <reset_typed_password>
 544:	29 81       	ldd	r18, Y+1	; 0x01
 546:	3a 81       	ldd	r19, Y+2	; 0x02
 548:	4b 81       	ldd	r20, Y+3	; 0x03
 54a:	5c 81       	ldd	r21, Y+4	; 0x04
 54c:	6d 81       	ldd	r22, Y+5	; 0x05
 54e:	7e 81       	ldd	r23, Y+6	; 0x06
 550:	8f 81       	ldd	r24, Y+7	; 0x07
 552:	0e 94 e5 05 	call	0xbca	; 0xbca <state_menu_UI>
 556:	00 e0       	ldi	r16, 0x00	; 0
 558:	f1 ce       	rjmp	.-542    	; 0x33c <main+0xbe>
 55a:	14 34       	cpi	r17, 0x44	; 68
 55c:	09 f0       	breq	.+2      	; 0x560 <__EEPROM_REGION_LENGTH__+0x160>
 55e:	60 c0       	rjmp	.+192    	; 0x620 <__EEPROM_REGION_LENGTH__+0x220>
 560:	20 e0       	ldi	r18, 0x00	; 0
 562:	31 e0       	ldi	r19, 0x01	; 1
 564:	40 e8       	ldi	r20, 0x80	; 128
 566:	6c 2d       	mov	r22, r12
 568:	7d 2d       	mov	r23, r13
 56a:	8e 2d       	mov	r24, r14
 56c:	0e 94 39 08 	call	0x1072	; 0x1072 <strcmp>
 570:	89 2b       	or	r24, r25
 572:	09 f4       	brne	.+2      	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
 574:	48 c0       	rjmp	.+144    	; 0x606 <__EEPROM_REGION_LENGTH__+0x206>
 576:	fa 94       	dec	r15
 578:	f1 10       	cpse	r15, r1
 57a:	0f c0       	rjmp	.+30     	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
 57c:	29 81       	ldd	r18, Y+1	; 0x01
 57e:	3a 81       	ldd	r19, Y+2	; 0x02
 580:	4b 81       	ldd	r20, Y+3	; 0x03
 582:	5c 81       	ldd	r21, Y+4	; 0x04
 584:	6d 81       	ldd	r22, Y+5	; 0x05
 586:	7e 81       	ldd	r23, Y+6	; 0x06
 588:	8f 81       	ldd	r24, Y+7	; 0x07
 58a:	0e 94 1d 07 	call	0xe3a	; 0xe3a <state_alarma_UI>
 58e:	0e 94 17 08 	call	0x102e	; 0x102e <alarm_start>
 592:	0e 94 de 09 	call	0x13bc	; 0x13bc <reset_typed_password>
 596:	05 e0       	ldi	r16, 0x05	; 5
 598:	d1 ce       	rjmp	.-606    	; 0x33c <main+0xbe>
 59a:	ce 01       	movw	r24, r28
 59c:	01 96       	adiw	r24, 0x01	; 1
 59e:	0e 94 26 09 	call	0x124c	; 0x124c <lq_clear>
 5a2:	27 e4       	ldi	r18, 0x47	; 71
 5a4:	32 e0       	ldi	r19, 0x02	; 2
 5a6:	40 e0       	ldi	r20, 0x00	; 0
 5a8:	8c e0       	ldi	r24, 0x0C	; 12
 5aa:	f9 01       	movw	r30, r18
 5ac:	de 01       	movw	r26, r28
 5ae:	54 96       	adiw	r26, 0x14	; 20
 5b0:	74 2f       	mov	r23, r20
 5b2:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <__movmemx_qi>
 5b6:	40 e0       	ldi	r20, 0x00	; 0
 5b8:	60 e0       	ldi	r22, 0x00	; 0
 5ba:	ce 01       	movw	r24, r28
 5bc:	01 96       	adiw	r24, 0x01	; 1
 5be:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 5c2:	be 01       	movw	r22, r28
 5c4:	6c 5e       	subi	r22, 0xEC	; 236
 5c6:	7f 4f       	sbci	r23, 0xFF	; 255
 5c8:	ce 01       	movw	r24, r28
 5ca:	01 96       	adiw	r24, 0x01	; 1
 5cc:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 5d0:	40 e0       	ldi	r20, 0x00	; 0
 5d2:	61 e0       	ldi	r22, 0x01	; 1
 5d4:	ce 01       	movw	r24, r28
 5d6:	01 96       	adiw	r24, 0x01	; 1
 5d8:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 5dc:	2f ef       	ldi	r18, 0xFF	; 255
 5de:	89 e6       	ldi	r24, 0x69	; 105
 5e0:	98 e1       	ldi	r25, 0x18	; 24
 5e2:	21 50       	subi	r18, 0x01	; 1
 5e4:	80 40       	sbci	r24, 0x00	; 0
 5e6:	90 40       	sbci	r25, 0x00	; 0
 5e8:	e1 f7       	brne	.-8      	; 0x5e2 <__EEPROM_REGION_LENGTH__+0x1e2>
 5ea:	00 c0       	rjmp	.+0      	; 0x5ec <__EEPROM_REGION_LENGTH__+0x1ec>
 5ec:	00 00       	nop
 5ee:	0e 94 de 09 	call	0x13bc	; 0x13bc <reset_typed_password>
 5f2:	29 81       	ldd	r18, Y+1	; 0x01
 5f4:	3a 81       	ldd	r19, Y+2	; 0x02
 5f6:	4b 81       	ldd	r20, Y+3	; 0x03
 5f8:	5c 81       	ldd	r21, Y+4	; 0x04
 5fa:	6d 81       	ldd	r22, Y+5	; 0x05
 5fc:	7e 81       	ldd	r23, Y+6	; 0x06
 5fe:	8f 81       	ldd	r24, Y+7	; 0x07
 600:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <state_cambio_actual_UI>
 604:	9b ce       	rjmp	.-714    	; 0x33c <main+0xbe>
 606:	0e 94 de 09 	call	0x13bc	; 0x13bc <reset_typed_password>
 60a:	29 81       	ldd	r18, Y+1	; 0x01
 60c:	3a 81       	ldd	r19, Y+2	; 0x02
 60e:	4b 81       	ldd	r20, Y+3	; 0x03
 610:	5c 81       	ldd	r21, Y+4	; 0x04
 612:	6d 81       	ldd	r22, Y+5	; 0x05
 614:	7e 81       	ldd	r23, Y+6	; 0x06
 616:	8f 81       	ldd	r24, Y+7	; 0x07
 618:	0e 94 a7 06 	call	0xd4e	; 0xd4e <state_cambio_nueva_UI>
 61c:	03 e0       	ldi	r16, 0x03	; 3
 61e:	8e ce       	rjmp	.-740    	; 0x33c <main+0xbe>
 620:	13 34       	cpi	r17, 0x43	; 67
 622:	39 f5       	brne	.+78     	; 0x672 <__EEPROM_REGION_LENGTH__+0x272>
 624:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <typedPassword_counter>
 628:	88 23       	and	r24, r24
 62a:	09 f4       	brne	.+2      	; 0x62e <__EEPROM_REGION_LENGTH__+0x22e>
 62c:	87 ce       	rjmp	.-754    	; 0x33c <main+0xbe>
 62e:	20 e2       	ldi	r18, 0x20	; 32
 630:	30 e0       	ldi	r19, 0x00	; 0
 632:	3d 8b       	std	Y+21, r19	; 0x15
 634:	2c 8b       	std	Y+20, r18	; 0x14
 636:	4f ef       	ldi	r20, 0xFF	; 255
 638:	48 0f       	add	r20, r24
 63a:	40 93 2c 01 	sts	0x012C, r20	; 0x80012c <typedPassword_counter>
 63e:	61 e0       	ldi	r22, 0x01	; 1
 640:	ce 01       	movw	r24, r28
 642:	01 96       	adiw	r24, 0x01	; 1
 644:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 648:	be 01       	movw	r22, r28
 64a:	6c 5e       	subi	r22, 0xEC	; 236
 64c:	7f 4f       	sbci	r23, 0xFF	; 255
 64e:	ce 01       	movw	r24, r28
 650:	01 96       	adiw	r24, 0x01	; 1
 652:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 656:	40 91 2c 01 	lds	r20, 0x012C	; 0x80012c <typedPassword_counter>
 65a:	61 e0       	ldi	r22, 0x01	; 1
 65c:	ce 01       	movw	r24, r28
 65e:	01 96       	adiw	r24, 0x01	; 1
 660:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 664:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <typedPassword_counter>
 668:	f0 e0       	ldi	r31, 0x00	; 0
 66a:	e0 50       	subi	r30, 0x00	; 0
 66c:	ff 4f       	sbci	r31, 0xFF	; 255
 66e:	10 82       	st	Z, r1
 670:	65 ce       	rjmp	.-822    	; 0x33c <main+0xbe>
 672:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <typedPassword_counter>
 676:	e6 30       	cpi	r30, 0x06	; 6
 678:	08 f0       	brcs	.+2      	; 0x67c <__EEPROM_REGION_LENGTH__+0x27c>
 67a:	60 ce       	rjmp	.-832    	; 0x33c <main+0xbe>
 67c:	81 e0       	ldi	r24, 0x01	; 1
 67e:	8e 0f       	add	r24, r30
 680:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <typedPassword_counter>
 684:	f0 e0       	ldi	r31, 0x00	; 0
 686:	e0 50       	subi	r30, 0x00	; 0
 688:	ff 4f       	sbci	r31, 0xFF	; 255
 68a:	10 83       	st	Z, r17
 68c:	e8 2f       	mov	r30, r24
 68e:	f0 e0       	ldi	r31, 0x00	; 0
 690:	e0 50       	subi	r30, 0x00	; 0
 692:	ff 4f       	sbci	r31, 0xFF	; 255
 694:	10 82       	st	Z, r1
 696:	8a e2       	ldi	r24, 0x2A	; 42
 698:	90 e0       	ldi	r25, 0x00	; 0
 69a:	9d 8b       	std	Y+21, r25	; 0x15
 69c:	8c 8b       	std	Y+20, r24	; 0x14
 69e:	be 01       	movw	r22, r28
 6a0:	6c 5e       	subi	r22, 0xEC	; 236
 6a2:	7f 4f       	sbci	r23, 0xFF	; 255
 6a4:	ce 01       	movw	r24, r28
 6a6:	01 96       	adiw	r24, 0x01	; 1
 6a8:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 6ac:	47 ce       	rjmp	.-882    	; 0x33c <main+0xbe>
 6ae:	13 32       	cpi	r17, 0x23	; 35
 6b0:	69 f4       	brne	.+26     	; 0x6cc <__EEPROM_REGION_LENGTH__+0x2cc>
 6b2:	0e 94 de 09 	call	0x13bc	; 0x13bc <reset_typed_password>
 6b6:	29 81       	ldd	r18, Y+1	; 0x01
 6b8:	3a 81       	ldd	r19, Y+2	; 0x02
 6ba:	4b 81       	ldd	r20, Y+3	; 0x03
 6bc:	5c 81       	ldd	r21, Y+4	; 0x04
 6be:	6d 81       	ldd	r22, Y+5	; 0x05
 6c0:	7e 81       	ldd	r23, Y+6	; 0x06
 6c2:	8f 81       	ldd	r24, Y+7	; 0x07
 6c4:	0e 94 e5 05 	call	0xbca	; 0xbca <state_menu_UI>
 6c8:	00 e0       	ldi	r16, 0x00	; 0
 6ca:	38 ce       	rjmp	.-912    	; 0x33c <main+0xbe>
 6cc:	14 34       	cpi	r17, 0x44	; 68
 6ce:	09 f0       	breq	.+2      	; 0x6d2 <__EEPROM_REGION_LENGTH__+0x2d2>
 6d0:	4b c0       	rjmp	.+150    	; 0x768 <__EEPROM_REGION_LENGTH__+0x368>
 6d2:	80 e0       	ldi	r24, 0x00	; 0
 6d4:	91 e0       	ldi	r25, 0x01	; 1
 6d6:	3c 01       	movw	r6, r24
 6d8:	20 e8       	ldi	r18, 0x80	; 128
 6da:	82 2e       	mov	r8, r18
 6dc:	88 2d       	mov	r24, r8
 6de:	b3 01       	movw	r22, r6
 6e0:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <strlen>
 6e4:	04 97       	sbiw	r24, 0x04	; 4
 6e6:	08 f4       	brcc	.+2      	; 0x6ea <__EEPROM_REGION_LENGTH__+0x2ea>
 6e8:	29 ce       	rjmp	.-942    	; 0x33c <main+0xbe>
 6ea:	26 e0       	ldi	r18, 0x06	; 6
 6ec:	30 e0       	ldi	r19, 0x00	; 0
 6ee:	68 2d       	mov	r22, r8
 6f0:	a3 01       	movw	r20, r6
 6f2:	87 e0       	ldi	r24, 0x07	; 7
 6f4:	91 e0       	ldi	r25, 0x01	; 1
 6f6:	0e 94 84 07 	call	0xf08	; 0xf08 <strncpy>
 6fa:	0e 94 de 09 	call	0x13bc	; 0x13bc <reset_typed_password>
 6fe:	ce 01       	movw	r24, r28
 700:	01 96       	adiw	r24, 0x01	; 1
 702:	0e 94 26 09 	call	0x124c	; 0x124c <lq_clear>
 706:	23 e5       	ldi	r18, 0x53	; 83
 708:	32 e0       	ldi	r19, 0x02	; 2
 70a:	40 e0       	ldi	r20, 0x00	; 0
 70c:	81 e1       	ldi	r24, 0x11	; 17
 70e:	f9 01       	movw	r30, r18
 710:	de 01       	movw	r26, r28
 712:	54 96       	adiw	r26, 0x14	; 20
 714:	74 2f       	mov	r23, r20
 716:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <__movmemx_qi>
 71a:	40 e0       	ldi	r20, 0x00	; 0
 71c:	60 e0       	ldi	r22, 0x00	; 0
 71e:	ce 01       	movw	r24, r28
 720:	01 96       	adiw	r24, 0x01	; 1
 722:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 726:	be 01       	movw	r22, r28
 728:	6c 5e       	subi	r22, 0xEC	; 236
 72a:	7f 4f       	sbci	r23, 0xFF	; 255
 72c:	ce 01       	movw	r24, r28
 72e:	01 96       	adiw	r24, 0x01	; 1
 730:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 734:	40 e0       	ldi	r20, 0x00	; 0
 736:	61 e0       	ldi	r22, 0x01	; 1
 738:	ce 01       	movw	r24, r28
 73a:	01 96       	adiw	r24, 0x01	; 1
 73c:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 740:	8f ef       	ldi	r24, 0xFF	; 255
 742:	99 e6       	ldi	r25, 0x69	; 105
 744:	28 e1       	ldi	r18, 0x18	; 24
 746:	81 50       	subi	r24, 0x01	; 1
 748:	90 40       	sbci	r25, 0x00	; 0
 74a:	20 40       	sbci	r18, 0x00	; 0
 74c:	e1 f7       	brne	.-8      	; 0x746 <__EEPROM_REGION_LENGTH__+0x346>
 74e:	00 c0       	rjmp	.+0      	; 0x750 <__EEPROM_REGION_LENGTH__+0x350>
 750:	00 00       	nop
 752:	29 81       	ldd	r18, Y+1	; 0x01
 754:	3a 81       	ldd	r19, Y+2	; 0x02
 756:	4b 81       	ldd	r20, Y+3	; 0x03
 758:	5c 81       	ldd	r21, Y+4	; 0x04
 75a:	6d 81       	ldd	r22, Y+5	; 0x05
 75c:	7e 81       	ldd	r23, Y+6	; 0x06
 75e:	8f 81       	ldd	r24, Y+7	; 0x07
 760:	0e 94 e5 05 	call	0xbca	; 0xbca <state_menu_UI>
 764:	00 e0       	ldi	r16, 0x00	; 0
 766:	ea cd       	rjmp	.-1068   	; 0x33c <main+0xbe>
 768:	13 34       	cpi	r17, 0x43	; 67
 76a:	39 f5       	brne	.+78     	; 0x7ba <__EEPROM_REGION_LENGTH__+0x3ba>
 76c:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <typedPassword_counter>
 770:	88 23       	and	r24, r24
 772:	09 f4       	brne	.+2      	; 0x776 <__EEPROM_REGION_LENGTH__+0x376>
 774:	e3 cd       	rjmp	.-1082   	; 0x33c <main+0xbe>
 776:	20 e2       	ldi	r18, 0x20	; 32
 778:	30 e0       	ldi	r19, 0x00	; 0
 77a:	3d 8b       	std	Y+21, r19	; 0x15
 77c:	2c 8b       	std	Y+20, r18	; 0x14
 77e:	4f ef       	ldi	r20, 0xFF	; 255
 780:	48 0f       	add	r20, r24
 782:	40 93 2c 01 	sts	0x012C, r20	; 0x80012c <typedPassword_counter>
 786:	61 e0       	ldi	r22, 0x01	; 1
 788:	ce 01       	movw	r24, r28
 78a:	01 96       	adiw	r24, 0x01	; 1
 78c:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 790:	be 01       	movw	r22, r28
 792:	6c 5e       	subi	r22, 0xEC	; 236
 794:	7f 4f       	sbci	r23, 0xFF	; 255
 796:	ce 01       	movw	r24, r28
 798:	01 96       	adiw	r24, 0x01	; 1
 79a:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 79e:	40 91 2c 01 	lds	r20, 0x012C	; 0x80012c <typedPassword_counter>
 7a2:	61 e0       	ldi	r22, 0x01	; 1
 7a4:	ce 01       	movw	r24, r28
 7a6:	01 96       	adiw	r24, 0x01	; 1
 7a8:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 7ac:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <typedPassword_counter>
 7b0:	f0 e0       	ldi	r31, 0x00	; 0
 7b2:	e0 50       	subi	r30, 0x00	; 0
 7b4:	ff 4f       	sbci	r31, 0xFF	; 255
 7b6:	10 82       	st	Z, r1
 7b8:	c1 cd       	rjmp	.-1150   	; 0x33c <main+0xbe>
 7ba:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <typedPassword_counter>
 7be:	e6 30       	cpi	r30, 0x06	; 6
 7c0:	08 f0       	brcs	.+2      	; 0x7c4 <__EEPROM_REGION_LENGTH__+0x3c4>
 7c2:	bc cd       	rjmp	.-1160   	; 0x33c <main+0xbe>
 7c4:	81 e0       	ldi	r24, 0x01	; 1
 7c6:	8e 0f       	add	r24, r30
 7c8:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <typedPassword_counter>
 7cc:	f0 e0       	ldi	r31, 0x00	; 0
 7ce:	e0 50       	subi	r30, 0x00	; 0
 7d0:	ff 4f       	sbci	r31, 0xFF	; 255
 7d2:	10 83       	st	Z, r17
 7d4:	e8 2f       	mov	r30, r24
 7d6:	f0 e0       	ldi	r31, 0x00	; 0
 7d8:	e0 50       	subi	r30, 0x00	; 0
 7da:	ff 4f       	sbci	r31, 0xFF	; 255
 7dc:	10 82       	st	Z, r1
 7de:	8a e2       	ldi	r24, 0x2A	; 42
 7e0:	90 e0       	ldi	r25, 0x00	; 0
 7e2:	9d 8b       	std	Y+21, r25	; 0x15
 7e4:	8c 8b       	std	Y+20, r24	; 0x14
 7e6:	be 01       	movw	r22, r28
 7e8:	6c 5e       	subi	r22, 0xEC	; 236
 7ea:	7f 4f       	sbci	r23, 0xFF	; 255
 7ec:	ce 01       	movw	r24, r28
 7ee:	01 96       	adiw	r24, 0x01	; 1
 7f0:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 7f4:	a3 cd       	rjmp	.-1210   	; 0x33c <main+0xbe>
 7f6:	14 34       	cpi	r17, 0x44	; 68
 7f8:	79 f5       	brne	.+94     	; 0x858 <__DATA_REGION_LENGTH__+0x58>
 7fa:	20 e0       	ldi	r18, 0x00	; 0
 7fc:	31 e0       	ldi	r19, 0x01	; 1
 7fe:	40 e8       	ldi	r20, 0x80	; 128
 800:	6c 2d       	mov	r22, r12
 802:	7d 2d       	mov	r23, r13
 804:	8e 2d       	mov	r24, r14
 806:	0e 94 39 08 	call	0x1072	; 0x1072 <strcmp>
 80a:	89 2b       	or	r24, r25
 80c:	71 f0       	breq	.+28     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 80e:	0e 94 17 08 	call	0x102e	; 0x102e <alarm_start>
 812:	0e 94 de 09 	call	0x13bc	; 0x13bc <reset_typed_password>
 816:	29 81       	ldd	r18, Y+1	; 0x01
 818:	3a 81       	ldd	r19, Y+2	; 0x02
 81a:	4b 81       	ldd	r20, Y+3	; 0x03
 81c:	5c 81       	ldd	r21, Y+4	; 0x04
 81e:	6d 81       	ldd	r22, Y+5	; 0x05
 820:	7e 81       	ldd	r23, Y+6	; 0x06
 822:	8f 81       	ldd	r24, Y+7	; 0x07
 824:	0e 94 1d 07 	call	0xe3a	; 0xe3a <state_alarma_UI>
 828:	89 cd       	rjmp	.-1262   	; 0x33c <main+0xbe>
 82a:	0e 94 79 09 	call	0x12f2	; 0x12f2 <millis_now>
 82e:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <alarm_until>
 832:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <alarm_until+0x1>
 836:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <alarm_until+0x2>
 83a:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <alarm_until+0x3>
 83e:	0e 94 de 09 	call	0x13bc	; 0x13bc <reset_typed_password>
 842:	29 81       	ldd	r18, Y+1	; 0x01
 844:	3a 81       	ldd	r19, Y+2	; 0x02
 846:	4b 81       	ldd	r20, Y+3	; 0x03
 848:	5c 81       	ldd	r21, Y+4	; 0x04
 84a:	6d 81       	ldd	r22, Y+5	; 0x05
 84c:	7e 81       	ldd	r23, Y+6	; 0x06
 84e:	8f 81       	ldd	r24, Y+7	; 0x07
 850:	0e 94 e5 05 	call	0xbca	; 0xbca <state_menu_UI>
 854:	00 e0       	ldi	r16, 0x00	; 0
 856:	72 cd       	rjmp	.-1308   	; 0x33c <main+0xbe>
 858:	13 34       	cpi	r17, 0x43	; 67
 85a:	39 f5       	brne	.+78     	; 0x8aa <__DATA_REGION_LENGTH__+0xaa>
 85c:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <typedPassword_counter>
 860:	88 23       	and	r24, r24
 862:	09 f4       	brne	.+2      	; 0x866 <__DATA_REGION_LENGTH__+0x66>
 864:	6b cd       	rjmp	.-1322   	; 0x33c <main+0xbe>
 866:	20 e2       	ldi	r18, 0x20	; 32
 868:	30 e0       	ldi	r19, 0x00	; 0
 86a:	3d 8b       	std	Y+21, r19	; 0x15
 86c:	2c 8b       	std	Y+20, r18	; 0x14
 86e:	4f ef       	ldi	r20, 0xFF	; 255
 870:	48 0f       	add	r20, r24
 872:	40 93 2c 01 	sts	0x012C, r20	; 0x80012c <typedPassword_counter>
 876:	61 e0       	ldi	r22, 0x01	; 1
 878:	ce 01       	movw	r24, r28
 87a:	01 96       	adiw	r24, 0x01	; 1
 87c:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 880:	be 01       	movw	r22, r28
 882:	6c 5e       	subi	r22, 0xEC	; 236
 884:	7f 4f       	sbci	r23, 0xFF	; 255
 886:	ce 01       	movw	r24, r28
 888:	01 96       	adiw	r24, 0x01	; 1
 88a:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 88e:	40 91 2c 01 	lds	r20, 0x012C	; 0x80012c <typedPassword_counter>
 892:	61 e0       	ldi	r22, 0x01	; 1
 894:	ce 01       	movw	r24, r28
 896:	01 96       	adiw	r24, 0x01	; 1
 898:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 89c:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <typedPassword_counter>
 8a0:	f0 e0       	ldi	r31, 0x00	; 0
 8a2:	e0 50       	subi	r30, 0x00	; 0
 8a4:	ff 4f       	sbci	r31, 0xFF	; 255
 8a6:	10 82       	st	Z, r1
 8a8:	49 cd       	rjmp	.-1390   	; 0x33c <main+0xbe>
 8aa:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <typedPassword_counter>
 8ae:	e6 30       	cpi	r30, 0x06	; 6
 8b0:	08 f0       	brcs	.+2      	; 0x8b4 <__DATA_REGION_LENGTH__+0xb4>
 8b2:	44 cd       	rjmp	.-1400   	; 0x33c <main+0xbe>
 8b4:	81 e0       	ldi	r24, 0x01	; 1
 8b6:	8e 0f       	add	r24, r30
 8b8:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <typedPassword_counter>
 8bc:	f0 e0       	ldi	r31, 0x00	; 0
 8be:	e0 50       	subi	r30, 0x00	; 0
 8c0:	ff 4f       	sbci	r31, 0xFF	; 255
 8c2:	10 83       	st	Z, r17
 8c4:	e8 2f       	mov	r30, r24
 8c6:	f0 e0       	ldi	r31, 0x00	; 0
 8c8:	e0 50       	subi	r30, 0x00	; 0
 8ca:	ff 4f       	sbci	r31, 0xFF	; 255
 8cc:	10 82       	st	Z, r1
 8ce:	8a e2       	ldi	r24, 0x2A	; 42
 8d0:	90 e0       	ldi	r25, 0x00	; 0
 8d2:	9d 8b       	std	Y+21, r25	; 0x15
 8d4:	8c 8b       	std	Y+20, r24	; 0x14
 8d6:	be 01       	movw	r22, r28
 8d8:	6c 5e       	subi	r22, 0xEC	; 236
 8da:	7f 4f       	sbci	r23, 0xFF	; 255
 8dc:	ce 01       	movw	r24, r28
 8de:	01 96       	adiw	r24, 0x01	; 1
 8e0:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 8e4:	2b cd       	rjmp	.-1450   	; 0x33c <main+0xbe>
 8e6:	14 34       	cpi	r17, 0x44	; 68
 8e8:	09 f0       	breq	.+2      	; 0x8ec <__DATA_REGION_LENGTH__+0xec>
 8ea:	28 cd       	rjmp	.-1456   	; 0x33c <main+0xbe>
 8ec:	ce 01       	movw	r24, r28
 8ee:	01 96       	adiw	r24, 0x01	; 1
 8f0:	0e 94 26 09 	call	0x124c	; 0x124c <lq_clear>
 8f4:	24 e6       	ldi	r18, 0x64	; 100
 8f6:	32 e0       	ldi	r19, 0x02	; 2
 8f8:	40 e0       	ldi	r20, 0x00	; 0
 8fa:	89 e0       	ldi	r24, 0x09	; 9
 8fc:	f9 01       	movw	r30, r18
 8fe:	de 01       	movw	r26, r28
 900:	54 96       	adiw	r26, 0x14	; 20
 902:	74 2f       	mov	r23, r20
 904:	0e 94 6c 09 	call	0x12d8	; 0x12d8 <__movmemx_qi>
 908:	40 e0       	ldi	r20, 0x00	; 0
 90a:	60 e0       	ldi	r22, 0x00	; 0
 90c:	ce 01       	movw	r24, r28
 90e:	01 96       	adiw	r24, 0x01	; 1
 910:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 914:	be 01       	movw	r22, r28
 916:	6c 5e       	subi	r22, 0xEC	; 236
 918:	7f 4f       	sbci	r23, 0xFF	; 255
 91a:	ce 01       	movw	r24, r28
 91c:	01 96       	adiw	r24, 0x01	; 1
 91e:	0e 94 11 09 	call	0x1222	; 0x1222 <lq_print>
 922:	40 e0       	ldi	r20, 0x00	; 0
 924:	61 e0       	ldi	r22, 0x01	; 1
 926:	ce 01       	movw	r24, r28
 928:	01 96       	adiw	r24, 0x01	; 1
 92a:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <lq_setCursor>
 92e:	0e 94 c0 09 	call	0x1380	; 0x1380 <led_red_on>
 932:	8f ef       	ldi	r24, 0xFF	; 255
 934:	99 e6       	ldi	r25, 0x69	; 105
 936:	28 e1       	ldi	r18, 0x18	; 24
 938:	81 50       	subi	r24, 0x01	; 1
 93a:	90 40       	sbci	r25, 0x00	; 0
 93c:	20 40       	sbci	r18, 0x00	; 0
 93e:	e1 f7       	brne	.-8      	; 0x938 <__stack+0x39>
 940:	00 c0       	rjmp	.+0      	; 0x942 <__stack+0x43>
 942:	00 00       	nop
 944:	29 81       	ldd	r18, Y+1	; 0x01
 946:	3a 81       	ldd	r19, Y+2	; 0x02
 948:	4b 81       	ldd	r20, Y+3	; 0x03
 94a:	5c 81       	ldd	r21, Y+4	; 0x04
 94c:	6d 81       	ldd	r22, Y+5	; 0x05
 94e:	7e 81       	ldd	r23, Y+6	; 0x06
 950:	8f 81       	ldd	r24, Y+7	; 0x07
 952:	0e 94 e5 05 	call	0xbca	; 0xbca <state_menu_UI>
 956:	00 e0       	ldi	r16, 0x00	; 0
 958:	f1 cc       	rjmp	.-1566   	; 0x33c <main+0xbe>

Disassembly of section .text.libgcc:

000012d8 <__movmemx_qi>:
    12d8:	99 27       	eor	r25, r25

000012da <__movmemx_hi>:
    12da:	77 fd       	sbrc	r23, 7
    12dc:	05 c0       	rjmp	.+10     	; 0x12e8 <__movmemx_hi+0xe>
    12de:	05 90       	lpm	r0, Z+
    12e0:	0d 92       	st	X+, r0
    12e2:	01 97       	sbiw	r24, 0x01	; 1
    12e4:	e1 f7       	brne	.-8      	; 0x12de <__movmemx_hi+0x4>
    12e6:	08 95       	ret
    12e8:	01 90       	ld	r0, Z+
    12ea:	0d 92       	st	X+, r0
    12ec:	01 97       	sbiw	r24, 0x01	; 1
    12ee:	e1 f7       	brne	.-8      	; 0x12e8 <__movmemx_hi+0xe>
    12f0:	08 95       	ret

Disassembly of section .text.__dummy_fini:

000013e8 <_fini>:
    13e8:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000013ea <__funcs_on_exit>:
    13ea:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000013ec <__simulator_exit>:
    13ec:	08 95       	ret

Disassembly of section .text.exit:

00001308 <exit>:
    1308:	ec 01       	movw	r28, r24
    130a:	0e 94 f5 09 	call	0x13ea	; 0x13ea <__funcs_on_exit>
    130e:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <_fini>
    1312:	ce 01       	movw	r24, r28
    1314:	0e 94 f6 09 	call	0x13ec	; 0x13ec <__simulator_exit>
    1318:	ce 01       	movw	r24, r28
    131a:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <_Exit>

Disassembly of section .text.strcmp:

00001072 <strcmp>:
    1072:	cf 92       	push	r12
    1074:	df 92       	push	r13
    1076:	ef 92       	push	r14
    1078:	6b 01       	movw	r12, r22
    107a:	e8 2e       	mov	r14, r24
    107c:	f6 01       	movw	r30, r12
    107e:	84 91       	lpm	r24, Z
    1080:	e7 fc       	sbrc	r14, 7
    1082:	80 81       	ld	r24, Z
    1084:	f9 01       	movw	r30, r18
    1086:	54 91       	lpm	r21, Z
    1088:	47 fd       	sbrc	r20, 7
    108a:	50 81       	ld	r21, Z
    108c:	85 13       	cpse	r24, r21
    108e:	0b c0       	rjmp	.+22     	; 0x10a6 <strcmp+0x34>
    1090:	88 23       	and	r24, r24
    1092:	41 f0       	breq	.+16     	; 0x10a4 <strcmp+0x32>
    1094:	8f ef       	ldi	r24, 0xFF	; 255
    1096:	c8 1a       	sub	r12, r24
    1098:	d8 0a       	sbc	r13, r24
    109a:	e8 0a       	sbc	r14, r24
    109c:	2f 5f       	subi	r18, 0xFF	; 255
    109e:	3f 4f       	sbci	r19, 0xFF	; 255
    10a0:	4f 4f       	sbci	r20, 0xFF	; 255
    10a2:	ec cf       	rjmp	.-40     	; 0x107c <strcmp+0xa>
    10a4:	58 2f       	mov	r21, r24
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	85 1b       	sub	r24, r21
    10aa:	91 09       	sbc	r25, r1
    10ac:	ef 90       	pop	r14
    10ae:	df 90       	pop	r13
    10b0:	cf 90       	pop	r12
    10b2:	08 95       	ret

Disassembly of section .text.strlen:

000011f6 <strlen>:
    11f6:	cf 92       	push	r12
    11f8:	df 92       	push	r13
    11fa:	ef 92       	push	r14
    11fc:	6b 01       	movw	r12, r22
    11fe:	e8 2e       	mov	r14, r24
    1200:	a8 2f       	mov	r26, r24
    1202:	cb 01       	movw	r24, r22
    1204:	fc 01       	movw	r30, r24
    1206:	24 91       	lpm	r18, Z
    1208:	a7 fd       	sbrc	r26, 7
    120a:	20 81       	ld	r18, Z
    120c:	22 23       	and	r18, r18
    120e:	19 f0       	breq	.+6      	; 0x1216 <strlen+0x20>
    1210:	01 96       	adiw	r24, 0x01	; 1
    1212:	a1 1d       	adc	r26, r1
    1214:	f7 cf       	rjmp	.-18     	; 0x1204 <strlen+0xe>
    1216:	8c 19       	sub	r24, r12
    1218:	9d 09       	sbc	r25, r13
    121a:	ef 90       	pop	r14
    121c:	df 90       	pop	r13
    121e:	cf 90       	pop	r12
    1220:	08 95       	ret

Disassembly of section .text.strncpy:

00000f08 <strncpy>:
 f08:	cf 92       	push	r12
 f0a:	df 92       	push	r13
 f0c:	ef 92       	push	r14
 f0e:	6a 01       	movw	r12, r20
 f10:	e6 2e       	mov	r14, r22
 f12:	ac 01       	movw	r20, r24
 f14:	21 15       	cp	r18, r1
 f16:	31 05       	cpc	r19, r1
 f18:	c9 f0       	breq	.+50     	; 0xf4c <strncpy+0x44>
 f1a:	21 50       	subi	r18, 0x01	; 1
 f1c:	31 09       	sbc	r19, r1
 f1e:	4f 5f       	subi	r20, 0xFF	; 255
 f20:	5f 4f       	sbci	r21, 0xFF	; 255
 f22:	f6 01       	movw	r30, r12
 f24:	64 91       	lpm	r22, Z
 f26:	e7 fc       	sbrc	r14, 7
 f28:	60 81       	ld	r22, Z
 f2a:	fa 01       	movw	r30, r20
 f2c:	31 97       	sbiw	r30, 0x01	; 1
 f2e:	60 83       	st	Z, r22
 f30:	7f ef       	ldi	r23, 0xFF	; 255
 f32:	c7 1a       	sub	r12, r23
 f34:	d7 0a       	sbc	r13, r23
 f36:	e7 0a       	sbc	r14, r23
 f38:	61 11       	cpse	r22, r1
 f3a:	ec cf       	rjmp	.-40     	; 0xf14 <strncpy+0xc>
 f3c:	fa 01       	movw	r30, r20
 f3e:	24 0f       	add	r18, r20
 f40:	35 1f       	adc	r19, r21
 f42:	2e 17       	cp	r18, r30
 f44:	3f 07       	cpc	r19, r31
 f46:	11 f0       	breq	.+4      	; 0xf4c <strncpy+0x44>
 f48:	11 92       	st	Z+, r1
 f4a:	fb cf       	rjmp	.-10     	; 0xf42 <strncpy+0x3a>
 f4c:	ef 90       	pop	r14
 f4e:	df 90       	pop	r13
 f50:	cf 90       	pop	r12
 f52:	08 95       	ret

Disassembly of section .text._Exit:

000013e4 <_Exit>:
    13e4:	0e 94 6b 00 	call	0xd6	; 0xd6 <_exit>
