
4 Cerradura.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002ee  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000002ee  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  0000031d  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000178  00000000  00000000  0000032b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001d90  00000000  00000000  000004a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008c2  00000000  00000000  00002233  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b60  00000000  00000000  00002af5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000400  00000000  00000000  00003658  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000260  00000000  00000000  00003a58  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000011f3  00000000  00000000  00003cb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000168  00000000  00000000  00004eab  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  0000024c  0000024c  000002e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00005014  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.millis_now 00000016  0000020c  0000020c  000002a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.keypad_scan 000000be  000000c2  000000c2  00000156  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.timer0_init 00000014  00000238  00000238  000002cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.main    00000042  000001ca  000001ca  0000025e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_16 0000004a  00000180  00000180  00000214  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .bss.prevKey.2444 00000001  00800108  00800108  000002ee  2**0
                  ALLOC
 20 .bss.millis_counter 00000004  00800100  00800100  000002ee  2**0
                  ALLOC
 21 .bss.buzzer_off_at 00000002  00800104  00800104  000002ee  2**0
                  ALLOC
 22 .bss.buzzer_on_at 00000002  00800106  00800106  000002ee  2**0
                  ALLOC
 23 .text.__dummy_fini 00000002  00000254  00000254  000002e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.__dummy_funcs_on_exit 00000002  00000256  00000256  000002ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.__dummy_simulator_exit 00000002  00000258  00000258  000002ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.exit    00000016  00000222  00000222  000002b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text._Exit   00000004  00000250  00000250  000002e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 37 00 	jmp	0x6e	; 0x6e <__ctors_end>
   4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
   8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
   c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  10:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  14:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  18:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  1c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  20:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  24:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  28:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  2c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  30:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  34:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  38:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  3c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  40:	0c 94 c0 00 	jmp	0x180	; 0x180 <__vector_16>
  44:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  48:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  4c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  50:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  54:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  58:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  5c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  60:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
  64:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 09       	sbc	r16, r1
  6c:	80 00       	.word	0x0080	; ????

0000006e <__ctors_end>:
  6e:	11 24       	eor	r1, r1
  70:	1f be       	out	0x3f, r1	; 63
  72:	cf ef       	ldi	r28, 0xFF	; 255
  74:	d8 e0       	ldi	r29, 0x08	; 8
  76:	de bf       	out	0x3e, r29	; 62
  78:	cd bf       	out	0x3d, r28	; 61

0000007a <__do_copy_data>:
  7a:	e8 e6       	ldi	r30, 0x68	; 104
  7c:	f0 e0       	ldi	r31, 0x00	; 0
  7e:	40 e0       	ldi	r20, 0x00	; 0
  80:	17 c0       	rjmp	.+46     	; 0xb0 <__do_clear_bss+0x8>
  82:	b5 91       	lpm	r27, Z+
  84:	a5 91       	lpm	r26, Z+
  86:	35 91       	lpm	r19, Z+
  88:	25 91       	lpm	r18, Z+
  8a:	05 91       	lpm	r16, Z+
  8c:	07 fd       	sbrc	r16, 7
  8e:	0c c0       	rjmp	.+24     	; 0xa8 <__do_clear_bss>
  90:	95 91       	lpm	r25, Z+
  92:	85 91       	lpm	r24, Z+
  94:	ef 01       	movw	r28, r30
  96:	f9 2f       	mov	r31, r25
  98:	e8 2f       	mov	r30, r24
  9a:	05 90       	lpm	r0, Z+
  9c:	0d 92       	st	X+, r0
  9e:	a2 17       	cp	r26, r18
  a0:	b3 07       	cpc	r27, r19
  a2:	d9 f7       	brne	.-10     	; 0x9a <__do_copy_data+0x20>
  a4:	fe 01       	movw	r30, r28
  a6:	04 c0       	rjmp	.+8      	; 0xb0 <__do_clear_bss+0x8>

000000a8 <__do_clear_bss>:
  a8:	1d 92       	st	X+, r1
  aa:	a2 17       	cp	r26, r18
  ac:	b3 07       	cpc	r27, r19
  ae:	e1 f7       	brne	.-8      	; 0xa8 <__do_clear_bss>
  b0:	ed 36       	cpi	r30, 0x6D	; 109
  b2:	f4 07       	cpc	r31, r20
  b4:	31 f7       	brne	.-52     	; 0x82 <__do_copy_data+0x8>
  b6:	0e 94 e5 00 	call	0x1ca	; 0x1ca <main>
  ba:	0c 94 11 01 	jmp	0x222	; 0x222 <exit>

000000be <_exit>:
  be:	f8 94       	cli

000000c0 <__stop_program>:
  c0:	ff cf       	rjmp	.-2      	; 0xc0 <__stop_program>

Disassembly of section .text:

0000024c <__bad_interrupt>:
 24c:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.millis_now:

0000020c <millis_now>:



uint32_t millis_now(void) {
	uint32_t m;
	cli();     // disable interrupts
 20c:	f8 94       	cli
	m = millis_counter;
 20e:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 212:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 216:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 21a:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
	sei();     // re-enable
 21e:	78 94       	sei
	return m;
}
 220:	08 95       	ret

Disassembly of section .text.keypad_scan:

000000c2 <keypad_scan>:
	lq_sendCommand(&device, LCD_ENTRYMODESET | device.DisplayMode);
	
	lq_returnHome(&device);

	return device;
};
  c2:	cf 93       	push	r28
  c4:	df 93       	push	r29
  c6:	d0 e0       	ldi	r29, 0x00	; 0
  c8:	50 c0       	rjmp	.+160    	; 0x16a <keypad_scan+0xa8>
  ca:	8b b1       	in	r24, 0x0b	; 11
  cc:	4d 2f       	mov	r20, r29
  ce:	50 e0       	ldi	r21, 0x00	; 0
  d0:	ba 01       	movw	r22, r20
  d2:	6c 5f       	subi	r22, 0xFC	; 252
  d4:	7f 4f       	sbci	r23, 0xFF	; 255
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	30 e0       	ldi	r19, 0x00	; 0
  da:	02 c0       	rjmp	.+4      	; 0xe0 <keypad_scan+0x1e>
  dc:	22 0f       	add	r18, r18
  de:	33 1f       	adc	r19, r19
  e0:	6a 95       	dec	r22
  e2:	e2 f7       	brpl	.-8      	; 0xdc <keypad_scan+0x1a>
  e4:	80 6f       	ori	r24, 0xF0	; 240
  e6:	20 95       	com	r18
  e8:	28 23       	and	r18, r24
  ea:	2b b9       	out	0x0b, r18	; 11
  ec:	8a e1       	ldi	r24, 0x1A	; 26
  ee:	8a 95       	dec	r24
  f0:	f1 f7       	brne	.-4      	; 0xee <keypad_scan+0x2c>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <keypad_scan+0x32>
  f4:	99 b1       	in	r25, 0x09	; 9
  f6:	9f 70       	andi	r25, 0x0F	; 15
  f8:	c0 e0       	ldi	r28, 0x00	; 0
  fa:	34 c0       	rjmp	.+104    	; 0x164 <keypad_scan+0xa2>
  fc:	6c 2f       	mov	r22, r28
  fe:	70 e0       	ldi	r23, 0x00	; 0
 100:	29 2f       	mov	r18, r25
 102:	30 e0       	ldi	r19, 0x00	; 0
 104:	0c 2e       	mov	r0, r28
 106:	02 c0       	rjmp	.+4      	; 0x10c <keypad_scan+0x4a>
 108:	35 95       	asr	r19
 10a:	27 95       	ror	r18
 10c:	0a 94       	dec	r0
 10e:	e2 f7       	brpl	.-8      	; 0x108 <keypad_scan+0x46>
 110:	20 fd       	sbrc	r18, 0
 112:	27 c0       	rjmp	.+78     	; 0x162 <keypad_scan+0xa0>
 114:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <prevKey.2444>
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	44 0f       	add	r20, r20
 11c:	55 1f       	adc	r21, r21
 11e:	44 0f       	add	r20, r20
 120:	55 1f       	adc	r21, r21
 122:	64 0f       	add	r22, r20
 124:	75 1f       	adc	r23, r21
 126:	6f 5f       	subi	r22, 0xFF	; 255
 128:	7f 4f       	sbci	r23, 0xFF	; 255
 12a:	86 17       	cp	r24, r22
 12c:	97 07       	cpc	r25, r23
 12e:	21 f1       	breq	.+72     	; 0x178 <keypad_scan+0xb6>
 130:	85 b1       	in	r24, 0x05	; 5
 132:	80 62       	ori	r24, 0x20	; 32
 134:	85 b9       	out	0x05, r24	; 5
 136:	0e 94 06 01 	call	0x20c	; 0x20c <millis_now>
 13a:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <buzzer_on_at+0x1>
 13e:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <buzzer_on_at>
 142:	0e 94 06 01 	call	0x20c	; 0x20c <millis_now>
 146:	62 5e       	subi	r22, 0xE2	; 226
 148:	7f 4f       	sbci	r23, 0xFF	; 255
 14a:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <buzzer_off_at+0x1>
 14e:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <buzzer_off_at>
 152:	8d 2f       	mov	r24, r29
 154:	88 0f       	add	r24, r24
 156:	88 0f       	add	r24, r24
 158:	8c 0f       	add	r24, r28
 15a:	8f 5f       	subi	r24, 0xFF	; 255
 15c:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <prevKey.2444>
 160:	0c c0       	rjmp	.+24     	; 0x17a <keypad_scan+0xb8>
 162:	cf 5f       	subi	r28, 0xFF	; 255
 164:	c4 30       	cpi	r28, 0x04	; 4
 166:	50 f2       	brcs	.-108    	; 0xfc <keypad_scan+0x3a>
 168:	df 5f       	subi	r29, 0xFF	; 255
 16a:	d4 30       	cpi	r29, 0x04	; 4
 16c:	08 f4       	brcc	.+2      	; 0x170 <keypad_scan+0xae>
 16e:	ad cf       	rjmp	.-166    	; 0xca <keypad_scan+0x8>
 170:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <prevKey.2444>
 174:	80 e0       	ldi	r24, 0x00	; 0
 176:	01 c0       	rjmp	.+2      	; 0x17a <keypad_scan+0xb8>
 178:	80 e0       	ldi	r24, 0x00	; 0
 17a:	df 91       	pop	r29
 17c:	cf 91       	pop	r28
 17e:	08 95       	ret

Disassembly of section .text.timer0_init:

00000238 <timer0_init>:


void timer0_init(void){
	TCCR0A = 0x00;
 238:	14 bc       	out	0x24, r1	; 36
	TCCR0B |= 0b011;
 23a:	85 b5       	in	r24, 0x25	; 37
 23c:	83 60       	ori	r24, 0x03	; 3
 23e:	85 bd       	out	0x25, r24	; 37
	TIMSK0 |= (1<<TOIE0);
 240:	ee e6       	ldi	r30, 0x6E	; 110
 242:	f0 e0       	ldi	r31, 0x00	; 0
 244:	80 81       	ld	r24, Z
 246:	81 60       	ori	r24, 0x01	; 1
 248:	80 83       	st	Z, r24
 24a:	08 95       	ret

Disassembly of section .text.main:

000001ca <main>:
 1ca:	80 ef       	ldi	r24, 0xF0	; 240
 1cc:	8a b9       	out	0x0a, r24	; 10
 1ce:	8f e0       	ldi	r24, 0x0F	; 15
 1d0:	8b b9       	out	0x0b, r24	; 11
 1d2:	0e 94 1c 01 	call	0x238	; 0x238 <timer0_init>
 1d6:	84 b1       	in	r24, 0x04	; 4
 1d8:	80 62       	ori	r24, 0x20	; 32
 1da:	84 b9       	out	0x04, r24	; 4
 1dc:	85 b1       	in	r24, 0x05	; 5
 1de:	8f 7d       	andi	r24, 0xDF	; 223
 1e0:	85 b9       	out	0x05, r24	; 5
 1e2:	78 94       	sei
 1e4:	0e 94 06 01 	call	0x20c	; 0x20c <millis_now>
 1e8:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <buzzer_off_at>
 1ec:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <buzzer_off_at+0x1>
 1f0:	89 01       	movw	r16, r18
 1f2:	20 e0       	ldi	r18, 0x00	; 0
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	06 17       	cp	r16, r22
 1f8:	17 07       	cpc	r17, r23
 1fa:	28 07       	cpc	r18, r24
 1fc:	39 07       	cpc	r19, r25
 1fe:	18 f4       	brcc	.+6      	; 0x206 <main+0x3c>
 200:	85 b1       	in	r24, 0x05	; 5
 202:	8f 7d       	andi	r24, 0xDF	; 223
 204:	85 b9       	out	0x05, r24	; 5
 206:	0e 94 61 00 	call	0xc2	; 0xc2 <__data_load_end>
 20a:	ec cf       	rjmp	.-40     	; 0x1e4 <main+0x1a>

Disassembly of section .text.__vector_16:

00000180 <__vector_16>:
 180:	1f 92       	push	r1
 182:	0f 92       	push	r0
 184:	0f b6       	in	r0, 0x3f	; 63
 186:	0f 92       	push	r0
 188:	11 24       	eor	r1, r1
 18a:	8f 93       	push	r24
 18c:	9f 93       	push	r25
 18e:	af 93       	push	r26
 190:	bf 93       	push	r27
 192:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 196:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 19a:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 19e:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 1a2:	01 96       	adiw	r24, 0x01	; 1
 1a4:	a1 1d       	adc	r26, r1
 1a6:	b1 1d       	adc	r27, r1
 1a8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 1ac:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1b0:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 1b4:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 1b8:	bf 91       	pop	r27
 1ba:	af 91       	pop	r26
 1bc:	9f 91       	pop	r25
 1be:	8f 91       	pop	r24
 1c0:	0f 90       	pop	r0
 1c2:	0f be       	out	0x3f, r0	; 63
 1c4:	0f 90       	pop	r0
 1c6:	1f 90       	pop	r1
 1c8:	18 95       	reti

Disassembly of section .text.__dummy_fini:

00000254 <_fini>:
 254:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000256 <__funcs_on_exit>:
 256:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000258 <__simulator_exit>:
 258:	08 95       	ret

Disassembly of section .text.exit:

00000222 <exit>:
 222:	ec 01       	movw	r28, r24
 224:	0e 94 2b 01 	call	0x256	; 0x256 <__funcs_on_exit>
 228:	0e 94 2a 01 	call	0x254	; 0x254 <_fini>
 22c:	ce 01       	movw	r24, r28
 22e:	0e 94 2c 01 	call	0x258	; 0x258 <__simulator_exit>
 232:	ce 01       	movw	r24, r28
 234:	0e 94 28 01 	call	0x250	; 0x250 <_Exit>

Disassembly of section .text._Exit:

00000250 <_Exit>:
 250:	0e 94 5f 00 	call	0xbe	; 0xbe <_exit>
