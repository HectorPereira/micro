
4 Cerradura.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000a47  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000ce  00000000  00000000  000000d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  00000a47  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000001c  00000000  00000000  00000a76  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000178  00000000  00000000  00000a92  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000022f2  00000000  00000000  00000c0a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000092e  00000000  00000000  00002efc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000cab  00000000  00000000  0000382a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000040c  00000000  00000000  000044d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000260  00000000  00000000  000048e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000012d4  00000000  00000000  00004b44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000168  00000000  00000000  00005e18  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000964  00000964  00000a38  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00005f80  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .progmemx.data 0000013e  000000ce  000000ce  000001a2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 15 .text.i2c_master_start 00000058  000006b2  000006b2  00000786  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.i2c_master_write 00000024  00000854  00000854  00000928  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.i2c_master_stop 00000008  00000954  00000954  00000a28  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.i2c_master_sendByte 00000022  00000878  00000878  0000094c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.lq_transmitI2C 0000000e  00000938  00000938  00000a0c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.lq_turnOnBacklight 0000000e  00000946  00000946  00000a1a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.lq_writeDevicePulse 00000036  000007cc  000007cc  000008a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.lq_writeDevice4Bits 0000001e  0000089a  0000089a  0000096e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.lq_writeDeviceByte 0000003a  00000792  00000792  00000866  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.lq_print 0000002a  00000802  00000802  000008d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.lq_sendCommand 00000008  0000095c  0000095c  00000a30  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.lq_setCursor 0000003e  00000754  00000754  00000828  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.lq_clear 00000028  0000082c  0000082c  00000900  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.lq_returnHome 00000014  000008fe  000008fe  000009d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.lq_turnOnDisplay 00000012  00000926  00000926  000009fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.lq_init 0000011c  000004c4  000004c4  00000598  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.millis_now 00000016  000008d2  000008d2  000009a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.keypad_scan 000000d2  000005e0  000005e0  000006b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.timer0_init 00000014  00000912  00000912  000009e6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.main    000002a8  0000021c  0000021c  000002f0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.__vector_16 0000004a  0000070a  0000070a  000007de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .bss.prevKey.2480 00000001  00800118  00800118  00000a47  2**0
                  ALLOC
 37 .progmemx.data.keypad 00000010  0000020c  0000020c  000002e0  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 38 .bss.millis_counter 00000004  00800100  00800100  00000a47  2**0
                  ALLOC
 39 .data.keypad_enable 00000001  00800119  00000972  00000a46  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 40 .bss.keypad_on_at 00000004  00800104  00800104  00000a47  2**0
                  ALLOC
 41 .bss.led_toggle_enable 00000001  0080011a  0080011a  00000a47  2**0
                  ALLOC
 42 .bss.led_state 00000001  0080011b  0080011b  00000a47  2**0
                  ALLOC
 43 .bss.led_off_at 00000004  00800108  00800108  00000a47  2**0
                  ALLOC
 44 .bss.led_on_at 00000004  0080010c  0080010c  00000a47  2**0
                  ALLOC
 45 .bss.buzzer_off_at 00000004  00800110  00800110  00000a47  2**0
                  ALLOC
 46 .bss.buzzer_on_at 00000004  00800114  00800114  00000a47  2**0
                  ALLOC
 47 .text.libgcc  0000001a  000008b8  000008b8  0000098c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.__dummy_fini 00000002  0000096c  0000096c  00000a40  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.__dummy_funcs_on_exit 00000002  0000096e  0000096e  00000a42  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.__dummy_simulator_exit 00000002  00000970  00000970  00000a44  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.exit    00000016  000008e8  000008e8  000009bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text._Exit   00000004  00000968  00000968  00000a3c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3d 00 	jmp	0x7a	; 0x7a <__ctors_end>
   4:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
   8:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
   c:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  10:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  14:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  18:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  1c:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  20:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  24:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  28:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  2c:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  30:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  34:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  38:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  3c:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  40:	0c 94 85 03 	jmp	0x70a	; 0x70a <__vector_16>
  44:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  48:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  4c:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  50:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  54:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  58:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  5c:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  60:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>
  64:	0c 94 b2 04 	jmp	0x964	; 0x964 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 19       	sub	r16, r1
  6c:	80 01       	movw	r16, r0
  6e:	19 01       	movw	r2, r18
  70:	1a 00       	.word	0x001a	; ????
  72:	09 72       	andi	r16, 0x29	; 41
  74:	01 1a       	sub	r0, r17
  76:	01 1c       	adc	r0, r1
  78:	80 00       	.word	0x0080	; ????

0000007a <__ctors_end>:
  7a:	11 24       	eor	r1, r1
  7c:	1f be       	out	0x3f, r1	; 63
  7e:	cf ef       	ldi	r28, 0xFF	; 255
  80:	d8 e0       	ldi	r29, 0x08	; 8
  82:	de bf       	out	0x3e, r29	; 62
  84:	cd bf       	out	0x3d, r28	; 61

00000086 <__do_copy_data>:
  86:	e8 e6       	ldi	r30, 0x68	; 104
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	40 e0       	ldi	r20, 0x00	; 0
  8c:	17 c0       	rjmp	.+46     	; 0xbc <__do_clear_bss+0x8>
  8e:	b5 91       	lpm	r27, Z+
  90:	a5 91       	lpm	r26, Z+
  92:	35 91       	lpm	r19, Z+
  94:	25 91       	lpm	r18, Z+
  96:	05 91       	lpm	r16, Z+
  98:	07 fd       	sbrc	r16, 7
  9a:	0c c0       	rjmp	.+24     	; 0xb4 <__do_clear_bss>
  9c:	95 91       	lpm	r25, Z+
  9e:	85 91       	lpm	r24, Z+
  a0:	ef 01       	movw	r28, r30
  a2:	f9 2f       	mov	r31, r25
  a4:	e8 2f       	mov	r30, r24
  a6:	05 90       	lpm	r0, Z+
  a8:	0d 92       	st	X+, r0
  aa:	a2 17       	cp	r26, r18
  ac:	b3 07       	cpc	r27, r19
  ae:	d9 f7       	brne	.-10     	; 0xa6 <__do_copy_data+0x20>
  b0:	fe 01       	movw	r30, r28
  b2:	04 c0       	rjmp	.+8      	; 0xbc <__do_clear_bss+0x8>

000000b4 <__do_clear_bss>:
  b4:	1d 92       	st	X+, r1
  b6:	a2 17       	cp	r26, r18
  b8:	b3 07       	cpc	r27, r19
  ba:	e1 f7       	brne	.-8      	; 0xb4 <__do_clear_bss>
  bc:	e9 37       	cpi	r30, 0x79	; 121
  be:	f4 07       	cpc	r31, r20
  c0:	31 f7       	brne	.-52     	; 0x8e <__do_copy_data+0x8>
  c2:	0e 94 0e 01 	call	0x21c	; 0x21c <main>
  c6:	0c 94 74 04 	jmp	0x8e8	; 0x8e8 <exit>

000000ca <_exit>:
  ca:	f8 94       	cli

000000cc <__stop_program>:
  cc:	ff cf       	rjmp	.-2      	; 0xcc <__stop_program>

Disassembly of section .text:

00000964 <__bad_interrupt>:
 964:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.i2c_master_start:

000006b2 <i2c_master_start>:
	// wait for end of transmission
	while( !(TWCR & (1<<TWINT)) );

	// return received data from TWDR
	return TWDR;
}
 6b2:	ec eb       	ldi	r30, 0xBC	; 188
 6b4:	f0 e0       	ldi	r31, 0x00	; 0
 6b6:	10 82       	st	Z, r1
 6b8:	94 ea       	ldi	r25, 0xA4	; 164
 6ba:	90 83       	st	Z, r25
 6bc:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 6c0:	99 23       	and	r25, r25
 6c2:	e4 f7       	brge	.-8      	; 0x6bc <i2c_master_start+0xa>
 6c4:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 6c8:	98 7f       	andi	r25, 0xF8	; 248
 6ca:	98 30       	cpi	r25, 0x08	; 8
 6cc:	11 f0       	breq	.+4      	; 0x6d2 <i2c_master_start+0x20>
 6ce:	90 31       	cpi	r25, 0x10	; 16
 6d0:	b1 f4       	brne	.+44     	; 0x6fe <i2c_master_start+0x4c>
 6d2:	90 e0       	ldi	r25, 0x00	; 0
 6d4:	88 0f       	add	r24, r24
 6d6:	99 1f       	adc	r25, r25
 6d8:	86 2b       	or	r24, r22
 6da:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 6de:	84 e8       	ldi	r24, 0x84	; 132
 6e0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 6e4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 6e8:	88 23       	and	r24, r24
 6ea:	e4 f7       	brge	.-8      	; 0x6e4 <i2c_master_start+0x32>
 6ec:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 6f0:	88 7f       	andi	r24, 0xF8	; 248
 6f2:	88 31       	cpi	r24, 0x18	; 24
 6f4:	31 f0       	breq	.+12     	; 0x702 <i2c_master_start+0x50>
 6f6:	80 34       	cpi	r24, 0x40	; 64
 6f8:	31 f4       	brne	.+12     	; 0x706 <i2c_master_start+0x54>
 6fa:	80 e0       	ldi	r24, 0x00	; 0
 6fc:	08 95       	ret
 6fe:	8a e0       	ldi	r24, 0x0A	; 10
 700:	08 95       	ret
 702:	80 e0       	ldi	r24, 0x00	; 0
 704:	08 95       	ret
 706:	84 e1       	ldi	r24, 0x14	; 20
 708:	08 95       	ret

Disassembly of section .text.i2c_master_write:

00000854 <i2c_master_write>:
 854:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 858:	84 e8       	ldi	r24, 0x84	; 132
 85a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 85e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 862:	88 23       	and	r24, r24
 864:	e4 f7       	brge	.-8      	; 0x85e <i2c_master_write+0xa>
 866:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 86a:	88 7f       	andi	r24, 0xF8	; 248
 86c:	88 32       	cpi	r24, 0x28	; 40
 86e:	11 f0       	breq	.+4      	; 0x874 <i2c_master_write+0x20>
 870:	85 e1       	ldi	r24, 0x15	; 21
 872:	08 95       	ret
 874:	80 e0       	ldi	r24, 0x00	; 0
 876:	08 95       	ret

Disassembly of section .text.i2c_master_stop:

00000954 <i2c_master_stop>:
	return I2C_STATUS_SUCCESS;
}

void i2c_master_stop(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
 954:	84 e9       	ldi	r24, 0x94	; 148
 956:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 95a:	08 95       	ret

Disassembly of section .text.i2c_master_sendByte:

00000878 <i2c_master_sendByte>:
	// wait for end of transmission
	while( !(TWCR & (1<<TWINT)) );

	// return received data from TWDR
	return TWDR;
}
 878:	cf 93       	push	r28
 87a:	c6 2f       	mov	r28, r22
 87c:	60 e0       	ldi	r22, 0x00	; 0
 87e:	0e 94 59 03 	call	0x6b2	; 0x6b2 <i2c_master_start>
 882:	81 11       	cpse	r24, r1
 884:	08 c0       	rjmp	.+16     	; 0x896 <i2c_master_sendByte+0x1e>
 886:	8c 2f       	mov	r24, r28
 888:	0e 94 2a 04 	call	0x854	; 0x854 <i2c_master_write>
 88c:	81 11       	cpse	r24, r1
 88e:	03 c0       	rjmp	.+6      	; 0x896 <i2c_master_sendByte+0x1e>
 890:	0e 94 aa 04 	call	0x954	; 0x954 <i2c_master_stop>
 894:	80 e0       	ldi	r24, 0x00	; 0
 896:	cf 91       	pop	r28
 898:	08 95       	ret

Disassembly of section .text.lq_transmitI2C:

00000938 <lq_transmitI2C>:
 938:	fc 01       	movw	r30, r24
 93a:	23 81       	ldd	r18, Z+3	; 0x03
 93c:	62 2b       	or	r22, r18
 93e:	80 81       	ld	r24, Z
 940:	0e 94 3c 04 	call	0x878	; 0x878 <i2c_master_sendByte>
 944:	08 95       	ret

Disassembly of section .text.lq_turnOnBacklight:

00000946 <lq_turnOnBacklight>:
 946:	28 e0       	ldi	r18, 0x08	; 8
 948:	fc 01       	movw	r30, r24
 94a:	23 83       	std	Z+3, r18	; 0x03
 94c:	60 e0       	ldi	r22, 0x00	; 0
 94e:	0e 94 9c 04 	call	0x938	; 0x938 <lq_transmitI2C>
 952:	08 95       	ret

Disassembly of section .text.lq_writeDevicePulse:

000007cc <lq_writeDevicePulse>:
 7cc:	0f 93       	push	r16
 7ce:	1f 93       	push	r17
 7d0:	cf 93       	push	r28
 7d2:	8c 01       	movw	r16, r24
 7d4:	c6 2f       	mov	r28, r22
 7d6:	64 60       	ori	r22, 0x04	; 4
 7d8:	0e 94 9c 04 	call	0x938	; 0x938 <lq_transmitI2C>
 7dc:	8a e0       	ldi	r24, 0x0A	; 10
 7de:	8a 95       	dec	r24
 7e0:	f1 f7       	brne	.-4      	; 0x7de <lq_writeDevicePulse+0x12>
 7e2:	00 c0       	rjmp	.+0      	; 0x7e4 <lq_writeDevicePulse+0x18>
 7e4:	6c 2f       	mov	r22, r28
 7e6:	6b 7f       	andi	r22, 0xFB	; 251
 7e8:	c8 01       	movw	r24, r16
 7ea:	0e 94 9c 04 	call	0x938	; 0x938 <lq_transmitI2C>
 7ee:	87 ec       	ldi	r24, 0xC7	; 199
 7f0:	90 e0       	ldi	r25, 0x00	; 0
 7f2:	01 97       	sbiw	r24, 0x01	; 1
 7f4:	f1 f7       	brne	.-4      	; 0x7f2 <lq_writeDevicePulse+0x26>
 7f6:	00 c0       	rjmp	.+0      	; 0x7f8 <lq_writeDevicePulse+0x2c>
 7f8:	00 00       	nop
 7fa:	cf 91       	pop	r28
 7fc:	1f 91       	pop	r17
 7fe:	0f 91       	pop	r16
 800:	08 95       	ret

Disassembly of section .text.lq_writeDevice4Bits:

0000089a <lq_writeDevice4Bits>:
 89a:	1f 93       	push	r17
 89c:	cf 93       	push	r28
 89e:	df 93       	push	r29
 8a0:	ec 01       	movw	r28, r24
 8a2:	16 2f       	mov	r17, r22
 8a4:	0e 94 9c 04 	call	0x938	; 0x938 <lq_transmitI2C>
 8a8:	61 2f       	mov	r22, r17
 8aa:	ce 01       	movw	r24, r28
 8ac:	0e 94 e6 03 	call	0x7cc	; 0x7cc <lq_writeDevicePulse>
 8b0:	df 91       	pop	r29
 8b2:	cf 91       	pop	r28
 8b4:	1f 91       	pop	r17
 8b6:	08 95       	ret

Disassembly of section .text.lq_writeDeviceByte:

00000792 <lq_writeDeviceByte>:
 792:	ff 92       	push	r15
 794:	0f 93       	push	r16
 796:	1f 93       	push	r17
 798:	cf 93       	push	r28
 79a:	df 93       	push	r29
 79c:	8c 01       	movw	r16, r24
 79e:	f4 2e       	mov	r15, r20
 7a0:	86 2f       	mov	r24, r22
 7a2:	80 7f       	andi	r24, 0xF0	; 240
 7a4:	90 e1       	ldi	r25, 0x10	; 16
 7a6:	69 9f       	mul	r22, r25
 7a8:	e0 01       	movw	r28, r0
 7aa:	11 24       	eor	r1, r1
 7ac:	68 2f       	mov	r22, r24
 7ae:	64 2b       	or	r22, r20
 7b0:	c8 01       	movw	r24, r16
 7b2:	0e 94 4d 04 	call	0x89a	; 0x89a <lq_writeDevice4Bits>
 7b6:	6c 2f       	mov	r22, r28
 7b8:	6f 29       	or	r22, r15
 7ba:	c8 01       	movw	r24, r16
 7bc:	0e 94 4d 04 	call	0x89a	; 0x89a <lq_writeDevice4Bits>
 7c0:	df 91       	pop	r29
 7c2:	cf 91       	pop	r28
 7c4:	1f 91       	pop	r17
 7c6:	0f 91       	pop	r16
 7c8:	ff 90       	pop	r15
 7ca:	08 95       	ret

Disassembly of section .text.lq_print:

00000802 <lq_print>:
 802:	0f 93       	push	r16
 804:	1f 93       	push	r17
 806:	cf 93       	push	r28
 808:	df 93       	push	r29
 80a:	8c 01       	movw	r16, r24
 80c:	eb 01       	movw	r28, r22
 80e:	68 81       	ld	r22, Y
 810:	06 c0       	rjmp	.+12     	; 0x81e <lq_print+0x1c>
 812:	41 e0       	ldi	r20, 0x01	; 1
 814:	c8 01       	movw	r24, r16
 816:	0e 94 c9 03 	call	0x792	; 0x792 <lq_writeDeviceByte>
 81a:	21 96       	adiw	r28, 0x01	; 1
 81c:	68 81       	ld	r22, Y
 81e:	61 11       	cpse	r22, r1
 820:	f8 cf       	rjmp	.-16     	; 0x812 <lq_print+0x10>
 822:	df 91       	pop	r29
 824:	cf 91       	pop	r28
 826:	1f 91       	pop	r17
 828:	0f 91       	pop	r16
 82a:	08 95       	ret

Disassembly of section .text.lq_sendCommand:

0000095c <lq_sendCommand>:
}


void lq_sendCommand(LiquidCrystalDevice_t* device, uint8_t command)
{
	lq_writeDeviceByte(device, command, 0);
 95c:	40 e0       	ldi	r20, 0x00	; 0
 95e:	0e 94 c9 03 	call	0x792	; 0x792 <lq_writeDeviceByte>
 962:	08 95       	ret

Disassembly of section .text.lq_setCursor:

00000754 <lq_setCursor>:
 754:	cf 93       	push	r28
 756:	df 93       	push	r29
 758:	00 d0       	rcall	.+0      	; 0x75a <lq_setCursor+0x6>
 75a:	00 d0       	rcall	.+0      	; 0x75c <lq_setCursor+0x8>
 75c:	cd b7       	in	r28, 0x3d	; 61
 75e:	de b7       	in	r29, 0x3e	; 62
 760:	19 82       	std	Y+1, r1	; 0x01
 762:	20 e4       	ldi	r18, 0x40	; 64
 764:	2a 83       	std	Y+2, r18	; 0x02
 766:	24 e1       	ldi	r18, 0x14	; 20
 768:	2b 83       	std	Y+3, r18	; 0x03
 76a:	24 e5       	ldi	r18, 0x54	; 84
 76c:	2c 83       	std	Y+4, r18	; 0x04
 76e:	e1 e0       	ldi	r30, 0x01	; 1
 770:	f0 e0       	ldi	r31, 0x00	; 0
 772:	ec 0f       	add	r30, r28
 774:	fd 1f       	adc	r31, r29
 776:	e6 0f       	add	r30, r22
 778:	f1 1d       	adc	r31, r1
 77a:	60 81       	ld	r22, Z
 77c:	64 0f       	add	r22, r20
 77e:	60 68       	ori	r22, 0x80	; 128
 780:	0e 94 ae 04 	call	0x95c	; 0x95c <lq_sendCommand>
 784:	0f 90       	pop	r0
 786:	0f 90       	pop	r0
 788:	0f 90       	pop	r0
 78a:	0f 90       	pop	r0
 78c:	df 91       	pop	r29
 78e:	cf 91       	pop	r28
 790:	08 95       	ret

Disassembly of section .text.lq_clear:

0000082c <lq_clear>:
 82c:	cf 93       	push	r28
 82e:	df 93       	push	r29
 830:	ec 01       	movw	r28, r24
 832:	61 e0       	ldi	r22, 0x01	; 1
 834:	0e 94 ae 04 	call	0x95c	; 0x95c <lq_sendCommand>
 838:	8f e3       	ldi	r24, 0x3F	; 63
 83a:	9f e1       	ldi	r25, 0x1F	; 31
 83c:	01 97       	sbiw	r24, 0x01	; 1
 83e:	f1 f7       	brne	.-4      	; 0x83c <lq_clear+0x10>
 840:	00 c0       	rjmp	.+0      	; 0x842 <lq_clear+0x16>
 842:	00 00       	nop
 844:	40 e0       	ldi	r20, 0x00	; 0
 846:	60 e0       	ldi	r22, 0x00	; 0
 848:	ce 01       	movw	r24, r28
 84a:	0e 94 aa 03 	call	0x754	; 0x754 <lq_setCursor>
 84e:	df 91       	pop	r29
 850:	cf 91       	pop	r28
 852:	08 95       	ret

Disassembly of section .text.lq_returnHome:

000008fe <lq_returnHome>:
 8fe:	62 e0       	ldi	r22, 0x02	; 2
 900:	0e 94 ae 04 	call	0x95c	; 0x95c <lq_sendCommand>
 904:	8f e3       	ldi	r24, 0x3F	; 63
 906:	9f e1       	ldi	r25, 0x1F	; 31
 908:	01 97       	sbiw	r24, 0x01	; 1
 90a:	f1 f7       	brne	.-4      	; 0x908 <__stack+0x9>
 90c:	00 c0       	rjmp	.+0      	; 0x90e <__stack+0xf>
 90e:	00 00       	nop
 910:	08 95       	ret

Disassembly of section .text.lq_turnOnDisplay:

00000926 <lq_turnOnDisplay>:
 926:	fc 01       	movw	r30, r24
 928:	65 81       	ldd	r22, Z+5	; 0x05
 92a:	26 2f       	mov	r18, r22
 92c:	24 60       	ori	r18, 0x04	; 4
 92e:	25 83       	std	Z+5, r18	; 0x05
 930:	6c 60       	ori	r22, 0x0C	; 12
 932:	0e 94 ae 04 	call	0x95c	; 0x95c <lq_sendCommand>
 936:	08 95       	ret

Disassembly of section .text.lq_init:

000004c4 <lq_init>:
 4c4:	cf 93       	push	r28
 4c6:	df 93       	push	r29
 4c8:	cd b7       	in	r28, 0x3d	; 61
 4ca:	de b7       	in	r29, 0x3e	; 62
 4cc:	2e 97       	sbiw	r28, 0x0e	; 14
 4ce:	0f b6       	in	r0, 0x3f	; 63
 4d0:	f8 94       	cli
 4d2:	de bf       	out	0x3e, r29	; 62
 4d4:	0f be       	out	0x3f, r0	; 63
 4d6:	cd bf       	out	0x3d, r28	; 61
 4d8:	88 87       	std	Y+8, r24	; 0x08
 4da:	69 87       	std	Y+9, r22	; 0x09
 4dc:	4a 87       	std	Y+10, r20	; 0x0a
 4de:	1b 86       	std	Y+11, r1	; 0x0b
 4e0:	2c 87       	std	Y+12, r18	; 0x0c
 4e2:	84 e0       	ldi	r24, 0x04	; 4
 4e4:	8d 87       	std	Y+13, r24	; 0x0d
 4e6:	82 e0       	ldi	r24, 0x02	; 2
 4e8:	8e 87       	std	Y+14, r24	; 0x0e
 4ea:	42 30       	cpi	r20, 0x02	; 2
 4ec:	18 f0       	brcs	.+6      	; 0x4f4 <lq_init+0x30>
 4ee:	82 2f       	mov	r24, r18
 4f0:	88 60       	ori	r24, 0x08	; 8
 4f2:	8c 87       	std	Y+12, r24	; 0x0c
 4f4:	22 23       	and	r18, r18
 4f6:	29 f0       	breq	.+10     	; 0x502 <lq_init+0x3e>
 4f8:	41 30       	cpi	r20, 0x01	; 1
 4fa:	19 f4       	brne	.+6      	; 0x502 <lq_init+0x3e>
 4fc:	8c 85       	ldd	r24, Y+12	; 0x0c
 4fe:	84 60       	ori	r24, 0x04	; 4
 500:	8c 87       	std	Y+12, r24	; 0x0c
 502:	2f ef       	ldi	r18, 0xFF	; 255
 504:	81 ee       	ldi	r24, 0xE1	; 225
 506:	94 e0       	ldi	r25, 0x04	; 4
 508:	21 50       	subi	r18, 0x01	; 1
 50a:	80 40       	sbci	r24, 0x00	; 0
 50c:	90 40       	sbci	r25, 0x00	; 0
 50e:	e1 f7       	brne	.-8      	; 0x508 <lq_init+0x44>
 510:	00 c0       	rjmp	.+0      	; 0x512 <lq_init+0x4e>
 512:	00 00       	nop
 514:	60 e0       	ldi	r22, 0x00	; 0
 516:	ce 01       	movw	r24, r28
 518:	08 96       	adiw	r24, 0x08	; 8
 51a:	0e 94 9c 04 	call	0x938	; 0x938 <lq_transmitI2C>
 51e:	2f ef       	ldi	r18, 0xFF	; 255
 520:	83 ed       	ldi	r24, 0xD3	; 211
 522:	90 e3       	ldi	r25, 0x30	; 48
 524:	21 50       	subi	r18, 0x01	; 1
 526:	80 40       	sbci	r24, 0x00	; 0
 528:	90 40       	sbci	r25, 0x00	; 0
 52a:	e1 f7       	brne	.-8      	; 0x524 <lq_init+0x60>
 52c:	00 c0       	rjmp	.+0      	; 0x52e <lq_init+0x6a>
 52e:	00 00       	nop
 530:	60 e3       	ldi	r22, 0x30	; 48
 532:	ce 01       	movw	r24, r28
 534:	08 96       	adiw	r24, 0x08	; 8
 536:	0e 94 9c 04 	call	0x938	; 0x938 <lq_transmitI2C>
 53a:	8f e4       	ldi	r24, 0x4F	; 79
 53c:	96 e4       	ldi	r25, 0x46	; 70
 53e:	01 97       	sbiw	r24, 0x01	; 1
 540:	f1 f7       	brne	.-4      	; 0x53e <lq_init+0x7a>
 542:	00 c0       	rjmp	.+0      	; 0x544 <lq_init+0x80>
 544:	00 00       	nop
 546:	60 e3       	ldi	r22, 0x30	; 48
 548:	ce 01       	movw	r24, r28
 54a:	08 96       	adiw	r24, 0x08	; 8
 54c:	0e 94 4d 04 	call	0x89a	; 0x89a <lq_writeDevice4Bits>
 550:	8f e4       	ldi	r24, 0x4F	; 79
 552:	96 e4       	ldi	r25, 0x46	; 70
 554:	01 97       	sbiw	r24, 0x01	; 1
 556:	f1 f7       	brne	.-4      	; 0x554 <lq_init+0x90>
 558:	00 c0       	rjmp	.+0      	; 0x55a <lq_init+0x96>
 55a:	00 00       	nop
 55c:	60 e3       	ldi	r22, 0x30	; 48
 55e:	ce 01       	movw	r24, r28
 560:	08 96       	adiw	r24, 0x08	; 8
 562:	0e 94 4d 04 	call	0x89a	; 0x89a <lq_writeDevice4Bits>
 566:	87 e5       	ldi	r24, 0x57	; 87
 568:	92 e0       	ldi	r25, 0x02	; 2
 56a:	01 97       	sbiw	r24, 0x01	; 1
 56c:	f1 f7       	brne	.-4      	; 0x56a <lq_init+0xa6>
 56e:	00 c0       	rjmp	.+0      	; 0x570 <lq_init+0xac>
 570:	00 00       	nop
 572:	60 e2       	ldi	r22, 0x20	; 32
 574:	ce 01       	movw	r24, r28
 576:	08 96       	adiw	r24, 0x08	; 8
 578:	0e 94 4d 04 	call	0x89a	; 0x89a <lq_writeDevice4Bits>
 57c:	6c 85       	ldd	r22, Y+12	; 0x0c
 57e:	60 62       	ori	r22, 0x20	; 32
 580:	ce 01       	movw	r24, r28
 582:	08 96       	adiw	r24, 0x08	; 8
 584:	0e 94 ae 04 	call	0x95c	; 0x95c <lq_sendCommand>
 588:	ce 01       	movw	r24, r28
 58a:	08 96       	adiw	r24, 0x08	; 8
 58c:	0e 94 93 04 	call	0x926	; 0x926 <lq_turnOnDisplay>
 590:	ce 01       	movw	r24, r28
 592:	08 96       	adiw	r24, 0x08	; 8
 594:	0e 94 16 04 	call	0x82c	; 0x82c <lq_clear>
 598:	6e 85       	ldd	r22, Y+14	; 0x0e
 59a:	64 60       	ori	r22, 0x04	; 4
 59c:	ce 01       	movw	r24, r28
 59e:	08 96       	adiw	r24, 0x08	; 8
 5a0:	0e 94 ae 04 	call	0x95c	; 0x95c <lq_sendCommand>
 5a4:	ce 01       	movw	r24, r28
 5a6:	08 96       	adiw	r24, 0x08	; 8
 5a8:	0e 94 7f 04 	call	0x8fe	; 0x8fe <lq_returnHome>
 5ac:	87 e0       	ldi	r24, 0x07	; 7
 5ae:	fe 01       	movw	r30, r28
 5b0:	38 96       	adiw	r30, 0x08	; 8
 5b2:	de 01       	movw	r26, r28
 5b4:	11 96       	adiw	r26, 0x01	; 1
 5b6:	01 90       	ld	r0, Z+
 5b8:	0d 92       	st	X+, r0
 5ba:	8a 95       	dec	r24
 5bc:	e1 f7       	brne	.-8      	; 0x5b6 <lq_init+0xf2>
 5be:	29 81       	ldd	r18, Y+1	; 0x01
 5c0:	3a 81       	ldd	r19, Y+2	; 0x02
 5c2:	4b 81       	ldd	r20, Y+3	; 0x03
 5c4:	5c 81       	ldd	r21, Y+4	; 0x04
 5c6:	6d 81       	ldd	r22, Y+5	; 0x05
 5c8:	7e 81       	ldd	r23, Y+6	; 0x06
 5ca:	8f 81       	ldd	r24, Y+7	; 0x07
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	2e 96       	adiw	r28, 0x0e	; 14
 5d0:	0f b6       	in	r0, 0x3f	; 63
 5d2:	f8 94       	cli
 5d4:	de bf       	out	0x3e, r29	; 62
 5d6:	0f be       	out	0x3f, r0	; 63
 5d8:	cd bf       	out	0x3d, r28	; 61
 5da:	df 91       	pop	r29
 5dc:	cf 91       	pop	r28
 5de:	08 95       	ret

Disassembly of section .text.millis_now:

000008d2 <millis_now>:
 8d2:	f8 94       	cli
 8d4:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 8d8:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 8dc:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 8e0:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 8e4:	78 94       	sei
 8e6:	08 95       	ret

Disassembly of section .text.keypad_scan:

000005e0 <keypad_scan>:
 5e0:	cf 93       	push	r28
 5e2:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <keypad_enable>
 5e6:	88 23       	and	r24, r24
 5e8:	09 f4       	brne	.+2      	; 0x5ec <keypad_scan+0xc>
 5ea:	5d c0       	rjmp	.+186    	; 0x6a6 <keypad_scan+0xc6>
 5ec:	60 e0       	ldi	r22, 0x00	; 0
 5ee:	54 c0       	rjmp	.+168    	; 0x698 <keypad_scan+0xb8>
 5f0:	2b b1       	in	r18, 0x0b	; 11
 5f2:	e6 2f       	mov	r30, r22
 5f4:	f0 e0       	ldi	r31, 0x00	; 0
 5f6:	af 01       	movw	r20, r30
 5f8:	4c 5f       	subi	r20, 0xFC	; 252
 5fa:	5f 4f       	sbci	r21, 0xFF	; 255
 5fc:	81 e0       	ldi	r24, 0x01	; 1
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	02 c0       	rjmp	.+4      	; 0x606 <keypad_scan+0x26>
 602:	88 0f       	add	r24, r24
 604:	99 1f       	adc	r25, r25
 606:	4a 95       	dec	r20
 608:	e2 f7       	brpl	.-8      	; 0x602 <keypad_scan+0x22>
 60a:	92 2f       	mov	r25, r18
 60c:	90 6f       	ori	r25, 0xF0	; 240
 60e:	80 95       	com	r24
 610:	89 23       	and	r24, r25
 612:	8b b9       	out	0x0b, r24	; 11
 614:	8a e1       	ldi	r24, 0x1A	; 26
 616:	8a 95       	dec	r24
 618:	f1 f7       	brne	.-4      	; 0x616 <keypad_scan+0x36>
 61a:	00 c0       	rjmp	.+0      	; 0x61c <keypad_scan+0x3c>
 61c:	99 b1       	in	r25, 0x09	; 9
 61e:	9f 70       	andi	r25, 0x0F	; 15
 620:	80 e0       	ldi	r24, 0x00	; 0
 622:	37 c0       	rjmp	.+110    	; 0x692 <keypad_scan+0xb2>
 624:	48 2f       	mov	r20, r24
 626:	50 e0       	ldi	r21, 0x00	; 0
 628:	29 2f       	mov	r18, r25
 62a:	30 e0       	ldi	r19, 0x00	; 0
 62c:	08 2e       	mov	r0, r24
 62e:	02 c0       	rjmp	.+4      	; 0x634 <keypad_scan+0x54>
 630:	35 95       	asr	r19
 632:	27 95       	ror	r18
 634:	0a 94       	dec	r0
 636:	e2 f7       	brpl	.-8      	; 0x630 <keypad_scan+0x50>
 638:	20 fd       	sbrc	r18, 0
 63a:	2a c0       	rjmp	.+84     	; 0x690 <keypad_scan+0xb0>
 63c:	cf 01       	movw	r24, r30
 63e:	88 0f       	add	r24, r24
 640:	99 1f       	adc	r25, r25
 642:	88 0f       	add	r24, r24
 644:	99 1f       	adc	r25, r25
 646:	84 0f       	add	r24, r20
 648:	95 1f       	adc	r25, r21
 64a:	09 2e       	mov	r0, r25
 64c:	00 0c       	add	r0, r0
 64e:	aa 0b       	sbc	r26, r26
 650:	84 5f       	subi	r24, 0xF4	; 244
 652:	9d 4f       	sbci	r25, 0xFD	; 253
 654:	af 4f       	sbci	r26, 0xFF	; 255
 656:	fc 01       	movw	r30, r24
 658:	c4 91       	lpm	r28, Z
 65a:	a7 fd       	sbrc	r26, 7
 65c:	c0 81       	ld	r28, Z
 65e:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <prevKey.2480>
 662:	c8 17       	cp	r28, r24
 664:	11 f1       	breq	.+68     	; 0x6aa <keypad_scan+0xca>
 666:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <keypad_enable>
 66a:	0e 94 69 04 	call	0x8d2	; 0x8d2 <millis_now>
 66e:	dc 01       	movw	r26, r24
 670:	cb 01       	movw	r24, r22
 672:	8c 59       	subi	r24, 0x9C	; 156
 674:	9f 4f       	sbci	r25, 0xFF	; 255
 676:	af 4f       	sbci	r26, 0xFF	; 255
 678:	bf 4f       	sbci	r27, 0xFF	; 255
 67a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <keypad_on_at>
 67e:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <keypad_on_at+0x1>
 682:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <keypad_on_at+0x2>
 686:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <keypad_on_at+0x3>
 68a:	c0 93 18 01 	sts	0x0118, r28	; 0x800118 <prevKey.2480>
 68e:	0e c0       	rjmp	.+28     	; 0x6ac <keypad_scan+0xcc>
 690:	8f 5f       	subi	r24, 0xFF	; 255
 692:	84 30       	cpi	r24, 0x04	; 4
 694:	38 f2       	brcs	.-114    	; 0x624 <keypad_scan+0x44>
 696:	6f 5f       	subi	r22, 0xFF	; 255
 698:	64 30       	cpi	r22, 0x04	; 4
 69a:	08 f4       	brcc	.+2      	; 0x69e <keypad_scan+0xbe>
 69c:	a9 cf       	rjmp	.-174    	; 0x5f0 <keypad_scan+0x10>
 69e:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <prevKey.2480>
 6a2:	c0 e0       	ldi	r28, 0x00	; 0
 6a4:	03 c0       	rjmp	.+6      	; 0x6ac <keypad_scan+0xcc>
 6a6:	c0 e0       	ldi	r28, 0x00	; 0
 6a8:	01 c0       	rjmp	.+2      	; 0x6ac <keypad_scan+0xcc>
 6aa:	c0 e0       	ldi	r28, 0x00	; 0
 6ac:	8c 2f       	mov	r24, r28
 6ae:	cf 91       	pop	r28
 6b0:	08 95       	ret

Disassembly of section .text.timer0_init:

00000912 <timer0_init>:
 912:	14 bc       	out	0x24, r1	; 36
 914:	85 b5       	in	r24, 0x25	; 37
 916:	83 60       	ori	r24, 0x03	; 3
 918:	85 bd       	out	0x25, r24	; 37
 91a:	ee e6       	ldi	r30, 0x6E	; 110
 91c:	f0 e0       	ldi	r31, 0x00	; 0
 91e:	80 81       	ld	r24, Z
 920:	81 60       	ori	r24, 0x01	; 1
 922:	80 83       	st	Z, r24
 924:	08 95       	ret

Disassembly of section .text.main:

0000021c <main>:
 21c:	cf 93       	push	r28
 21e:	df 93       	push	r29
 220:	cd b7       	in	r28, 0x3d	; 61
 222:	de b7       	in	r29, 0x3e	; 62
 224:	c6 54       	subi	r28, 0x46	; 70
 226:	d1 09       	sbc	r29, r1
 228:	0f b6       	in	r0, 0x3f	; 63
 22a:	f8 94       	cli
 22c:	de bf       	out	0x3e, r29	; 62
 22e:	0f be       	out	0x3f, r0	; 63
 230:	cd bf       	out	0x3d, r28	; 61
 232:	80 ef       	ldi	r24, 0xF0	; 240
 234:	8a b9       	out	0x0a, r24	; 10
 236:	8f e0       	ldi	r24, 0x0F	; 15
 238:	8b b9       	out	0x0b, r24	; 11
 23a:	0e 94 89 04 	call	0x912	; 0x912 <timer0_init>
 23e:	84 b1       	in	r24, 0x04	; 4
 240:	80 62       	ori	r24, 0x20	; 32
 242:	84 b9       	out	0x04, r24	; 4
 244:	85 b1       	in	r24, 0x05	; 5
 246:	8f 7d       	andi	r24, 0xDF	; 223
 248:	85 b9       	out	0x05, r24	; 5
 24a:	84 b1       	in	r24, 0x04	; 4
 24c:	83 60       	ori	r24, 0x03	; 3
 24e:	84 b9       	out	0x04, r24	; 4
 250:	85 b1       	in	r24, 0x05	; 5
 252:	81 60       	ori	r24, 0x01	; 1
 254:	85 b9       	out	0x05, r24	; 5
 256:	85 b1       	in	r24, 0x05	; 5
 258:	8d 7f       	andi	r24, 0xFD	; 253
 25a:	85 b9       	out	0x05, r24	; 5
 25c:	78 94       	sei
 25e:	20 e0       	ldi	r18, 0x00	; 0
 260:	42 e0       	ldi	r20, 0x02	; 2
 262:	60 e1       	ldi	r22, 0x10	; 16
 264:	87 e2       	ldi	r24, 0x27	; 39
 266:	0e 94 62 02 	call	0x4c4	; 0x4c4 <lq_init>
 26a:	29 83       	std	Y+1, r18	; 0x01
 26c:	3a 83       	std	Y+2, r19	; 0x02
 26e:	4b 83       	std	Y+3, r20	; 0x03
 270:	5c 83       	std	Y+4, r21	; 0x04
 272:	6d 83       	std	Y+5, r22	; 0x05
 274:	7e 83       	std	Y+6, r23	; 0x06
 276:	8f 83       	std	Y+7, r24	; 0x07
 278:	ce 01       	movw	r24, r28
 27a:	01 96       	adiw	r24, 0x01	; 1
 27c:	0e 94 a3 04 	call	0x946	; 0x946 <lq_turnOnBacklight>
 280:	2e eb       	ldi	r18, 0xBE	; 190
 282:	31 e0       	ldi	r19, 0x01	; 1
 284:	40 e0       	ldi	r20, 0x00	; 0
 286:	8c e0       	ldi	r24, 0x0C	; 12
 288:	f9 01       	movw	r30, r18
 28a:	de 01       	movw	r26, r28
 28c:	18 96       	adiw	r26, 0x08	; 8
 28e:	74 2f       	mov	r23, r20
 290:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__movmemx_qi>
 294:	be 01       	movw	r22, r28
 296:	68 5f       	subi	r22, 0xF8	; 248
 298:	7f 4f       	sbci	r23, 0xFF	; 255
 29a:	ce 01       	movw	r24, r28
 29c:	01 96       	adiw	r24, 0x01	; 1
 29e:	0e 94 01 04 	call	0x802	; 0x802 <lq_print>
 2a2:	2f ef       	ldi	r18, 0xFF	; 255
 2a4:	89 e6       	ldi	r24, 0x69	; 105
 2a6:	98 e1       	ldi	r25, 0x18	; 24
 2a8:	21 50       	subi	r18, 0x01	; 1
 2aa:	80 40       	sbci	r24, 0x00	; 0
 2ac:	90 40       	sbci	r25, 0x00	; 0
 2ae:	e1 f7       	brne	.-8      	; 0x2a8 <main+0x8c>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <main+0x96>
 2b2:	00 00       	nop
 2b4:	ce 01       	movw	r24, r28
 2b6:	01 96       	adiw	r24, 0x01	; 1
 2b8:	0e 94 16 04 	call	0x82c	; 0x82c <lq_clear>
 2bc:	2a ec       	ldi	r18, 0xCA	; 202
 2be:	31 e0       	ldi	r19, 0x01	; 1
 2c0:	40 e0       	ldi	r20, 0x00	; 0
 2c2:	81 e1       	ldi	r24, 0x11	; 17
 2c4:	f9 01       	movw	r30, r18
 2c6:	de 01       	movw	r26, r28
 2c8:	54 96       	adiw	r26, 0x14	; 20
 2ca:	74 2f       	mov	r23, r20
 2cc:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__movmemx_qi>
 2d0:	2b ed       	ldi	r18, 0xDB	; 219
 2d2:	31 e0       	ldi	r19, 0x01	; 1
 2d4:	40 e0       	ldi	r20, 0x00	; 0
 2d6:	81 e1       	ldi	r24, 0x11	; 17
 2d8:	f9 01       	movw	r30, r18
 2da:	de 01       	movw	r26, r28
 2dc:	95 96       	adiw	r26, 0x25	; 37
 2de:	74 2f       	mov	r23, r20
 2e0:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__movmemx_qi>
 2e4:	be 01       	movw	r22, r28
 2e6:	6c 5e       	subi	r22, 0xEC	; 236
 2e8:	7f 4f       	sbci	r23, 0xFF	; 255
 2ea:	ce 01       	movw	r24, r28
 2ec:	01 96       	adiw	r24, 0x01	; 1
 2ee:	0e 94 01 04 	call	0x802	; 0x802 <lq_print>
 2f2:	40 e0       	ldi	r20, 0x00	; 0
 2f4:	61 e0       	ldi	r22, 0x01	; 1
 2f6:	ce 01       	movw	r24, r28
 2f8:	01 96       	adiw	r24, 0x01	; 1
 2fa:	0e 94 aa 03 	call	0x754	; 0x754 <lq_setCursor>
 2fe:	be 01       	movw	r22, r28
 300:	6b 5d       	subi	r22, 0xDB	; 219
 302:	7f 4f       	sbci	r23, 0xFF	; 255
 304:	ce 01       	movw	r24, r28
 306:	01 96       	adiw	r24, 0x01	; 1
 308:	0e 94 01 04 	call	0x802	; 0x802 <lq_print>
 30c:	00 e0       	ldi	r16, 0x00	; 0
 30e:	0e 94 69 04 	call	0x8d2	; 0x8d2 <millis_now>
 312:	c0 90 10 01 	lds	r12, 0x0110	; 0x800110 <buzzer_off_at>
 316:	d0 90 11 01 	lds	r13, 0x0111	; 0x800111 <buzzer_off_at+0x1>
 31a:	e0 90 12 01 	lds	r14, 0x0112	; 0x800112 <buzzer_off_at+0x2>
 31e:	f0 90 13 01 	lds	r15, 0x0113	; 0x800113 <buzzer_off_at+0x3>
 322:	c6 16       	cp	r12, r22
 324:	d7 06       	cpc	r13, r23
 326:	e8 06       	cpc	r14, r24
 328:	f9 06       	cpc	r15, r25
 32a:	18 f4       	brcc	.+6      	; 0x332 <main+0x116>
 32c:	85 b1       	in	r24, 0x05	; 5
 32e:	8f 7d       	andi	r24, 0xDF	; 223
 330:	85 b9       	out	0x05, r24	; 5
 332:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <led_toggle_enable>
 336:	88 23       	and	r24, r24
 338:	49 f1       	breq	.+82     	; 0x38c <main+0x170>
 33a:	0e 94 69 04 	call	0x8d2	; 0x8d2 <millis_now>
 33e:	c0 90 08 01 	lds	r12, 0x0108	; 0x800108 <led_off_at>
 342:	d0 90 09 01 	lds	r13, 0x0109	; 0x800109 <led_off_at+0x1>
 346:	e0 90 0a 01 	lds	r14, 0x010A	; 0x80010a <led_off_at+0x2>
 34a:	f0 90 0b 01 	lds	r15, 0x010B	; 0x80010b <led_off_at+0x3>
 34e:	c6 16       	cp	r12, r22
 350:	d7 06       	cpc	r13, r23
 352:	e8 06       	cpc	r14, r24
 354:	f9 06       	cpc	r15, r25
 356:	d0 f4       	brcc	.+52     	; 0x38c <main+0x170>
 358:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <led_state>
 35c:	81 11       	cpse	r24, r1
 35e:	0a c0       	rjmp	.+20     	; 0x374 <main+0x158>
 360:	85 b1       	in	r24, 0x05	; 5
 362:	8e 7f       	andi	r24, 0xFE	; 254
 364:	85 b9       	out	0x05, r24	; 5
 366:	85 b1       	in	r24, 0x05	; 5
 368:	82 60       	ori	r24, 0x02	; 2
 36a:	85 b9       	out	0x05, r24	; 5
 36c:	81 e0       	ldi	r24, 0x01	; 1
 36e:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <led_state>
 372:	0a c0       	rjmp	.+20     	; 0x388 <main+0x16c>
 374:	81 30       	cpi	r24, 0x01	; 1
 376:	41 f4       	brne	.+16     	; 0x388 <main+0x16c>
 378:	85 b1       	in	r24, 0x05	; 5
 37a:	8d 7f       	andi	r24, 0xFD	; 253
 37c:	85 b9       	out	0x05, r24	; 5
 37e:	85 b1       	in	r24, 0x05	; 5
 380:	81 60       	ori	r24, 0x01	; 1
 382:	85 b9       	out	0x05, r24	; 5
 384:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <led_state>
 388:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <led_toggle_enable>
 38c:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <keypad_enable>
 390:	81 11       	cpse	r24, r1
 392:	12 c0       	rjmp	.+36     	; 0x3b8 <main+0x19c>
 394:	0e 94 69 04 	call	0x8d2	; 0x8d2 <millis_now>
 398:	c0 90 04 01 	lds	r12, 0x0104	; 0x800104 <keypad_on_at>
 39c:	d0 90 05 01 	lds	r13, 0x0105	; 0x800105 <keypad_on_at+0x1>
 3a0:	e0 90 06 01 	lds	r14, 0x0106	; 0x800106 <keypad_on_at+0x2>
 3a4:	f0 90 07 01 	lds	r15, 0x0107	; 0x800107 <keypad_on_at+0x3>
 3a8:	c6 16       	cp	r12, r22
 3aa:	d7 06       	cpc	r13, r23
 3ac:	e8 06       	cpc	r14, r24
 3ae:	f9 06       	cpc	r15, r25
 3b0:	18 f4       	brcc	.+6      	; 0x3b8 <main+0x19c>
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <keypad_enable>
 3b8:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <keypad_scan>
 3bc:	18 2f       	mov	r17, r24
 3be:	88 23       	and	r24, r24
 3c0:	09 f4       	brne	.+2      	; 0x3c4 <main+0x1a8>
 3c2:	a5 cf       	rjmp	.-182    	; 0x30e <main+0xf2>
 3c4:	85 b1       	in	r24, 0x05	; 5
 3c6:	80 62       	ori	r24, 0x20	; 32
 3c8:	85 b9       	out	0x05, r24	; 5
 3ca:	0e 94 69 04 	call	0x8d2	; 0x8d2 <millis_now>
 3ce:	60 93 14 01 	sts	0x0114, r22	; 0x800114 <buzzer_on_at>
 3d2:	70 93 15 01 	sts	0x0115, r23	; 0x800115 <buzzer_on_at+0x1>
 3d6:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <buzzer_on_at+0x2>
 3da:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <buzzer_on_at+0x3>
 3de:	0e 94 69 04 	call	0x8d2	; 0x8d2 <millis_now>
 3e2:	dc 01       	movw	r26, r24
 3e4:	cb 01       	movw	r24, r22
 3e6:	44 96       	adiw	r24, 0x14	; 20
 3e8:	a1 1d       	adc	r26, r1
 3ea:	b1 1d       	adc	r27, r1
 3ec:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <buzzer_off_at>
 3f0:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <buzzer_off_at+0x1>
 3f4:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <buzzer_off_at+0x2>
 3f8:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <buzzer_off_at+0x3>
 3fc:	0e 94 69 04 	call	0x8d2	; 0x8d2 <millis_now>
 400:	60 93 0c 01 	sts	0x010C, r22	; 0x80010c <led_on_at>
 404:	70 93 0d 01 	sts	0x010D, r23	; 0x80010d <led_on_at+0x1>
 408:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <led_on_at+0x2>
 40c:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <led_on_at+0x3>
 410:	dc 01       	movw	r26, r24
 412:	cb 01       	movw	r24, r22
 414:	88 53       	subi	r24, 0x38	; 56
 416:	9f 4f       	sbci	r25, 0xFF	; 255
 418:	af 4f       	sbci	r26, 0xFF	; 255
 41a:	bf 4f       	sbci	r27, 0xFF	; 255
 41c:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <led_off_at>
 420:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <led_off_at+0x1>
 424:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <led_off_at+0x2>
 428:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <led_off_at+0x3>
 42c:	91 e0       	ldi	r25, 0x01	; 1
 42e:	90 93 1a 01 	sts	0x011A, r25	; 0x80011a <led_toggle_enable>
 432:	85 b1       	in	r24, 0x05	; 5
 434:	8e 7f       	andi	r24, 0xFE	; 254
 436:	85 b9       	out	0x05, r24	; 5
 438:	85 b1       	in	r24, 0x05	; 5
 43a:	82 60       	ori	r24, 0x02	; 2
 43c:	85 b9       	out	0x05, r24	; 5
 43e:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <led_state>
 442:	01 11       	cpse	r16, r1
 444:	64 cf       	rjmp	.-312    	; 0x30e <main+0xf2>
 446:	11 34       	cpi	r17, 0x41	; 65
 448:	e9 f4       	brne	.+58     	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
 44a:	ce 01       	movw	r24, r28
 44c:	01 96       	adiw	r24, 0x01	; 1
 44e:	0e 94 16 04 	call	0x82c	; 0x82c <lq_clear>
 452:	2c ee       	ldi	r18, 0xEC	; 236
 454:	31 e0       	ldi	r19, 0x01	; 1
 456:	40 e0       	ldi	r20, 0x00	; 0
 458:	81 e1       	ldi	r24, 0x11	; 17
 45a:	f9 01       	movw	r30, r18
 45c:	de 01       	movw	r26, r28
 45e:	d6 96       	adiw	r26, 0x36	; 54
 460:	74 2f       	mov	r23, r20
 462:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__movmemx_qi>
 466:	40 e0       	ldi	r20, 0x00	; 0
 468:	60 e0       	ldi	r22, 0x00	; 0
 46a:	ce 01       	movw	r24, r28
 46c:	01 96       	adiw	r24, 0x01	; 1
 46e:	0e 94 aa 03 	call	0x754	; 0x754 <lq_setCursor>
 472:	be 01       	movw	r22, r28
 474:	6a 5c       	subi	r22, 0xCA	; 202
 476:	7f 4f       	sbci	r23, 0xFF	; 255
 478:	ce 01       	movw	r24, r28
 47a:	01 96       	adiw	r24, 0x01	; 1
 47c:	0e 94 01 04 	call	0x802	; 0x802 <lq_print>
 480:	01 e0       	ldi	r16, 0x01	; 1
 482:	45 cf       	rjmp	.-374    	; 0x30e <main+0xf2>
 484:	12 34       	cpi	r17, 0x42	; 66
 486:	09 f0       	breq	.+2      	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
 488:	42 cf       	rjmp	.-380    	; 0x30e <main+0xf2>
 48a:	ce 01       	movw	r24, r28
 48c:	01 96       	adiw	r24, 0x01	; 1
 48e:	0e 94 16 04 	call	0x82c	; 0x82c <lq_clear>
 492:	2d ef       	ldi	r18, 0xFD	; 253
 494:	31 e0       	ldi	r19, 0x01	; 1
 496:	40 e0       	ldi	r20, 0x00	; 0
 498:	8f e0       	ldi	r24, 0x0F	; 15
 49a:	f9 01       	movw	r30, r18
 49c:	de 01       	movw	r26, r28
 49e:	d6 96       	adiw	r26, 0x36	; 54
 4a0:	74 2f       	mov	r23, r20
 4a2:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__movmemx_qi>
 4a6:	40 e0       	ldi	r20, 0x00	; 0
 4a8:	60 e0       	ldi	r22, 0x00	; 0
 4aa:	ce 01       	movw	r24, r28
 4ac:	01 96       	adiw	r24, 0x01	; 1
 4ae:	0e 94 aa 03 	call	0x754	; 0x754 <lq_setCursor>
 4b2:	be 01       	movw	r22, r28
 4b4:	6a 5c       	subi	r22, 0xCA	; 202
 4b6:	7f 4f       	sbci	r23, 0xFF	; 255
 4b8:	ce 01       	movw	r24, r28
 4ba:	01 96       	adiw	r24, 0x01	; 1
 4bc:	0e 94 01 04 	call	0x802	; 0x802 <lq_print>
 4c0:	02 e0       	ldi	r16, 0x02	; 2
 4c2:	25 cf       	rjmp	.-438    	; 0x30e <main+0xf2>

Disassembly of section .text.__vector_16:

0000070a <__vector_16>:
 70a:	1f 92       	push	r1
 70c:	0f 92       	push	r0
 70e:	0f b6       	in	r0, 0x3f	; 63
 710:	0f 92       	push	r0
 712:	11 24       	eor	r1, r1
 714:	8f 93       	push	r24
 716:	9f 93       	push	r25
 718:	af 93       	push	r26
 71a:	bf 93       	push	r27
 71c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 720:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 724:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 728:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 72c:	01 96       	adiw	r24, 0x01	; 1
 72e:	a1 1d       	adc	r26, r1
 730:	b1 1d       	adc	r27, r1
 732:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 736:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 73a:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 73e:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 742:	bf 91       	pop	r27
 744:	af 91       	pop	r26
 746:	9f 91       	pop	r25
 748:	8f 91       	pop	r24
 74a:	0f 90       	pop	r0
 74c:	0f be       	out	0x3f, r0	; 63
 74e:	0f 90       	pop	r0
 750:	1f 90       	pop	r1
 752:	18 95       	reti

Disassembly of section .text.libgcc:

000008b8 <__movmemx_qi>:
 8b8:	99 27       	eor	r25, r25

000008ba <__movmemx_hi>:
 8ba:	77 fd       	sbrc	r23, 7
 8bc:	05 c0       	rjmp	.+10     	; 0x8c8 <__movmemx_hi+0xe>
 8be:	05 90       	lpm	r0, Z+
 8c0:	0d 92       	st	X+, r0
 8c2:	01 97       	sbiw	r24, 0x01	; 1
 8c4:	e1 f7       	brne	.-8      	; 0x8be <__movmemx_hi+0x4>
 8c6:	08 95       	ret
 8c8:	01 90       	ld	r0, Z+
 8ca:	0d 92       	st	X+, r0
 8cc:	01 97       	sbiw	r24, 0x01	; 1
 8ce:	e1 f7       	brne	.-8      	; 0x8c8 <__movmemx_hi+0xe>
 8d0:	08 95       	ret

Disassembly of section .text.__dummy_fini:

0000096c <_fini>:
 96c:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

0000096e <__funcs_on_exit>:
 96e:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000970 <__simulator_exit>:
 970:	08 95       	ret

Disassembly of section .text.exit:

000008e8 <exit>:
 8e8:	ec 01       	movw	r28, r24
 8ea:	0e 94 b7 04 	call	0x96e	; 0x96e <__funcs_on_exit>
 8ee:	0e 94 b6 04 	call	0x96c	; 0x96c <_fini>
 8f2:	ce 01       	movw	r24, r28
 8f4:	0e 94 b8 04 	call	0x970	; 0x970 <__simulator_exit>
 8f8:	ce 01       	movw	r24, r28
 8fa:	0e 94 b4 04 	call	0x968	; 0x968 <_Exit>

Disassembly of section .text._Exit:

00000968 <_Exit>:
 968:	0e 94 65 00 	call	0xca	; 0xca <_exit>
