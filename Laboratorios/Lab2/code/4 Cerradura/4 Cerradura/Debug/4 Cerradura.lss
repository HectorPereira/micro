
4 Cerradura.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000012d3  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c2  00000000  00000000  000000d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .eeprom       00000005  00810000  00810000  000012ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      0000002f  00000000  00000000  000012d3  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 00000054  00000000  00000000  00001302  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000208  00000000  00000000  00001358  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003290  00000000  00000000  00001560  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000097b  00000000  00000000  000047f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014d3  00000000  00000000  0000516b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004c4  00000000  00000000  00006640  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000286  00000000  00000000  00006b04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001927  00000000  00000000  00006d8a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000198  00000000  00000000  000086b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  000011ec  000011ec  000012c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000884c  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .progmemx.data 00000153  000000c2  000000c2  00000196  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 16 .text.i2c_master_start 00000058  00000cc8  00000cc8  00000d9c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.i2c_master_write 00000024  00001030  00001030  00001104  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.i2c_master_stop 00000008  000011dc  000011dc  000012b0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.i2c_master_sendByte 00000022  0000109c  0000109c  00001170  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.lq_transmitI2C 0000000e  000011a8  000011a8  0000127c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.lq_turnOnBacklight 0000000e  000011b6  000011b6  0000128a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.lq_writeDevicePulse 00000036  00000f42  00000f42  00001016  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.lq_writeDevice4Bits 0000001e  000010de  000010de  000011b2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.lq_writeDeviceByte 0000003a  00000f08  00000f08  00000fdc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.lq_print 0000002a  00000fde  00000fde  000010b2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.lq_sendCommand 00000008  000011e4  000011e4  000012b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.lq_setCursor 0000003e  00000e4e  00000e4e  00000f22  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.lq_clear 00000028  00001008  00001008  000010dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.lq_returnHome 00000014  0000115c  0000115c  00001230  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.lq_turnOnDisplay 00000012  00001184  00001184  00001258  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.lq_init 0000011c  00000ae6  00000ae6  00000bba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.millis_now 00000016  00001130  00001130  00001204  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.buzzer_init 0000000e  000011c4  000011c4  00001298  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.buzzer_beep 0000003e  00000e8c  00000e8c  00000f60  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.buzzer_task 0000003e  00000eca  00000eca  00000f9e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.leds_init 00000014  00001170  00001170  00001244  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.leds_set_abierto 00000020  000010be  000010be  00001192  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.alarm_start 00000034  00000f78  00000f78  0000104c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.alarm_task 000000c6  00000c02  00000c02  00000cd6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.timer0_init_millis 00000012  00001196  00001196  0000126a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.read_keypad 0000013c  000009aa  000009aa  00000a7e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.keypad_init 0000001a  000010fc  000010fc  000011d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.guardar_password_eeprom 0000004c  00000d74  00000d74  00000e48  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.main    00000784  00000226  00000226  000002fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.__vector_14 0000004a  00000dc0  00000dc0  00000e94  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .bss.last_key.2456 00000001  00800116  00800116  000012ce  2**0
                  ALLOC
 47 .bss.stable_key.2457 00000001  00800117  00800117  000012ce  2**0
                  ALLOC
 48 .bss.last_change_time.2458 00000004  0080010a  0080010a  000012ce  2**0
                  ALLOC
 49 .bss.millis   00000004  0080010e  0080010e  000012ce  2**0
                  ALLOC
 50 .progmemx.data.keypad 00000010  00000215  00000215  000002e9  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 51 .bss.buzzer_off_at 00000004  00800112  00800112  000012ce  2**0
                  ALLOC
 52 .bss.buzzer_on 00000001  00800118  00800118  000012ce  2**0
                  ALLOC
 53 .bss.alarm    0000000a  00800100  00800100  000012ce  2**0
                  ALLOC
 54 .text.libgcc  0000001a  00001116  00001116  000011ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.__dummy_fini 00000002  000011f4  000011f4  000012c8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.__dummy_funcs_on_exit 00000002  000011f6  000011f6  000012ca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .text.__dummy_simulator_exit 00000002  000011f8  000011f8  000012cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .text.exit    00000016  00001146  00001146  0000121a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.memcpy  00000032  00000fac  00000fac  00001080  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.memcmp  00000054  00000d20  00000d20  00000df4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text._Exit   00000004  000011f0  000011f0  000012c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.avrlibc 00000024  00001054  00001054  00001128  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.avrlibc 00000044  00000e0a  00000e0a  00000ede  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.avrlibc 00000024  00001078  00001078  0000114c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .text.libgcc  0000000a  000011d2  000011d2  000012a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 37 00 	jmp	0x6e	; 0x6e <__ctors_end>
   4:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
   8:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
   c:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  10:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  14:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  18:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  1c:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  20:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  24:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  28:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  2c:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  30:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  34:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  38:	0c 94 e0 06 	jmp	0xdc0	; 0xdc0 <__vector_14>
  3c:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  40:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  44:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  48:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  4c:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  50:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  54:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  58:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  5c:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  60:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>
  64:	0c 94 f6 08 	jmp	0x11ec	; 0x11ec <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 19       	sub	r16, r1
  6c:	80 00       	.word	0x0080	; ????

0000006e <__ctors_end>:
  6e:	11 24       	eor	r1, r1
  70:	1f be       	out	0x3f, r1	; 63
  72:	cf ef       	ldi	r28, 0xFF	; 255
  74:	d8 e0       	ldi	r29, 0x08	; 8
  76:	de bf       	out	0x3e, r29	; 62
  78:	cd bf       	out	0x3d, r28	; 61

0000007a <__do_copy_data>:
  7a:	e8 e6       	ldi	r30, 0x68	; 104
  7c:	f0 e0       	ldi	r31, 0x00	; 0
  7e:	40 e0       	ldi	r20, 0x00	; 0
  80:	17 c0       	rjmp	.+46     	; 0xb0 <__do_clear_bss+0x8>
  82:	b5 91       	lpm	r27, Z+
  84:	a5 91       	lpm	r26, Z+
  86:	35 91       	lpm	r19, Z+
  88:	25 91       	lpm	r18, Z+
  8a:	05 91       	lpm	r16, Z+
  8c:	07 fd       	sbrc	r16, 7
  8e:	0c c0       	rjmp	.+24     	; 0xa8 <__do_clear_bss>
  90:	95 91       	lpm	r25, Z+
  92:	85 91       	lpm	r24, Z+
  94:	ef 01       	movw	r28, r30
  96:	f9 2f       	mov	r31, r25
  98:	e8 2f       	mov	r30, r24
  9a:	05 90       	lpm	r0, Z+
  9c:	0d 92       	st	X+, r0
  9e:	a2 17       	cp	r26, r18
  a0:	b3 07       	cpc	r27, r19
  a2:	d9 f7       	brne	.-10     	; 0x9a <__do_copy_data+0x20>
  a4:	fe 01       	movw	r30, r28
  a6:	04 c0       	rjmp	.+8      	; 0xb0 <__do_clear_bss+0x8>

000000a8 <__do_clear_bss>:
  a8:	1d 92       	st	X+, r1
  aa:	a2 17       	cp	r26, r18
  ac:	b3 07       	cpc	r27, r19
  ae:	e1 f7       	brne	.-8      	; 0xa8 <__do_clear_bss>
  b0:	ed 36       	cpi	r30, 0x6D	; 109
  b2:	f4 07       	cpc	r31, r20
  b4:	31 f7       	brne	.-52     	; 0x82 <__do_copy_data+0x8>
  b6:	0e 94 13 01 	call	0x226	; 0x226 <main>
  ba:	0c 94 a3 08 	jmp	0x1146	; 0x1146 <exit>

000000be <_exit>:
  be:	f8 94       	cli

000000c0 <__stop_program>:
  c0:	ff cf       	rjmp	.-2      	; 0xc0 <__stop_program>

Disassembly of section .text:

000011ec <__bad_interrupt>:
    11ec:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.i2c_master_start:

00000cc8 <i2c_master_start>:
	// wait for end of transmission
	while( !(TWCR & (1<<TWINT)) );

	// return received data from TWDR
	return TWDR;
}
 cc8:	ec eb       	ldi	r30, 0xBC	; 188
 cca:	f0 e0       	ldi	r31, 0x00	; 0
 ccc:	10 82       	st	Z, r1
 cce:	94 ea       	ldi	r25, 0xA4	; 164
 cd0:	90 83       	st	Z, r25
 cd2:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 cd6:	99 23       	and	r25, r25
 cd8:	e4 f7       	brge	.-8      	; 0xcd2 <i2c_master_start+0xa>
 cda:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 cde:	98 7f       	andi	r25, 0xF8	; 248
 ce0:	98 30       	cpi	r25, 0x08	; 8
 ce2:	11 f0       	breq	.+4      	; 0xce8 <i2c_master_start+0x20>
 ce4:	90 31       	cpi	r25, 0x10	; 16
 ce6:	b1 f4       	brne	.+44     	; 0xd14 <i2c_master_start+0x4c>
 ce8:	90 e0       	ldi	r25, 0x00	; 0
 cea:	88 0f       	add	r24, r24
 cec:	99 1f       	adc	r25, r25
 cee:	86 2b       	or	r24, r22
 cf0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 cf4:	84 e8       	ldi	r24, 0x84	; 132
 cf6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 cfa:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 cfe:	88 23       	and	r24, r24
 d00:	e4 f7       	brge	.-8      	; 0xcfa <i2c_master_start+0x32>
 d02:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 d06:	88 7f       	andi	r24, 0xF8	; 248
 d08:	88 31       	cpi	r24, 0x18	; 24
 d0a:	31 f0       	breq	.+12     	; 0xd18 <i2c_master_start+0x50>
 d0c:	80 34       	cpi	r24, 0x40	; 64
 d0e:	31 f4       	brne	.+12     	; 0xd1c <i2c_master_start+0x54>
 d10:	80 e0       	ldi	r24, 0x00	; 0
 d12:	08 95       	ret
 d14:	8a e0       	ldi	r24, 0x0A	; 10
 d16:	08 95       	ret
 d18:	80 e0       	ldi	r24, 0x00	; 0
 d1a:	08 95       	ret
 d1c:	84 e1       	ldi	r24, 0x14	; 20
 d1e:	08 95       	ret

Disassembly of section .text.i2c_master_write:

00001030 <i2c_master_write>:
    1030:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    1034:	84 e8       	ldi	r24, 0x84	; 132
    1036:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    103a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    103e:	88 23       	and	r24, r24
    1040:	e4 f7       	brge	.-8      	; 0x103a <i2c_master_write+0xa>
    1042:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    1046:	88 7f       	andi	r24, 0xF8	; 248
    1048:	88 32       	cpi	r24, 0x28	; 40
    104a:	11 f0       	breq	.+4      	; 0x1050 <i2c_master_write+0x20>
    104c:	85 e1       	ldi	r24, 0x15	; 21
    104e:	08 95       	ret
    1050:	80 e0       	ldi	r24, 0x00	; 0
    1052:	08 95       	ret

Disassembly of section .text.i2c_master_stop:

000011dc <i2c_master_stop>:
	return I2C_STATUS_SUCCESS;
}

void i2c_master_stop(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
    11dc:	84 e9       	ldi	r24, 0x94	; 148
    11de:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    11e2:	08 95       	ret

Disassembly of section .text.i2c_master_sendByte:

0000109c <i2c_master_sendByte>:
	// wait for end of transmission
	while( !(TWCR & (1<<TWINT)) );

	// return received data from TWDR
	return TWDR;
}
    109c:	cf 93       	push	r28
    109e:	c6 2f       	mov	r28, r22
    10a0:	60 e0       	ldi	r22, 0x00	; 0
    10a2:	0e 94 64 06 	call	0xcc8	; 0xcc8 <i2c_master_start>
    10a6:	81 11       	cpse	r24, r1
    10a8:	08 c0       	rjmp	.+16     	; 0x10ba <i2c_master_sendByte+0x1e>
    10aa:	8c 2f       	mov	r24, r28
    10ac:	0e 94 18 08 	call	0x1030	; 0x1030 <i2c_master_write>
    10b0:	81 11       	cpse	r24, r1
    10b2:	03 c0       	rjmp	.+6      	; 0x10ba <i2c_master_sendByte+0x1e>
    10b4:	0e 94 ee 08 	call	0x11dc	; 0x11dc <i2c_master_stop>
    10b8:	80 e0       	ldi	r24, 0x00	; 0
    10ba:	cf 91       	pop	r28
    10bc:	08 95       	ret

Disassembly of section .text.lq_transmitI2C:

000011a8 <lq_transmitI2C>:
    11a8:	fc 01       	movw	r30, r24
    11aa:	23 81       	ldd	r18, Z+3	; 0x03
    11ac:	62 2b       	or	r22, r18
    11ae:	80 81       	ld	r24, Z
    11b0:	0e 94 4e 08 	call	0x109c	; 0x109c <i2c_master_sendByte>
    11b4:	08 95       	ret

Disassembly of section .text.lq_turnOnBacklight:

000011b6 <lq_turnOnBacklight>:
    11b6:	28 e0       	ldi	r18, 0x08	; 8
    11b8:	fc 01       	movw	r30, r24
    11ba:	23 83       	std	Z+3, r18	; 0x03
    11bc:	60 e0       	ldi	r22, 0x00	; 0
    11be:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <lq_transmitI2C>
    11c2:	08 95       	ret

Disassembly of section .text.lq_writeDevicePulse:

00000f42 <lq_writeDevicePulse>:
 f42:	0f 93       	push	r16
 f44:	1f 93       	push	r17
 f46:	cf 93       	push	r28
 f48:	8c 01       	movw	r16, r24
 f4a:	c6 2f       	mov	r28, r22
 f4c:	64 60       	ori	r22, 0x04	; 4
 f4e:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <lq_transmitI2C>
 f52:	8a e0       	ldi	r24, 0x0A	; 10
 f54:	8a 95       	dec	r24
 f56:	f1 f7       	brne	.-4      	; 0xf54 <lq_writeDevicePulse+0x12>
 f58:	00 c0       	rjmp	.+0      	; 0xf5a <lq_writeDevicePulse+0x18>
 f5a:	6c 2f       	mov	r22, r28
 f5c:	6b 7f       	andi	r22, 0xFB	; 251
 f5e:	c8 01       	movw	r24, r16
 f60:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <lq_transmitI2C>
 f64:	87 ec       	ldi	r24, 0xC7	; 199
 f66:	90 e0       	ldi	r25, 0x00	; 0
 f68:	01 97       	sbiw	r24, 0x01	; 1
 f6a:	f1 f7       	brne	.-4      	; 0xf68 <lq_writeDevicePulse+0x26>
 f6c:	00 c0       	rjmp	.+0      	; 0xf6e <lq_writeDevicePulse+0x2c>
 f6e:	00 00       	nop
 f70:	cf 91       	pop	r28
 f72:	1f 91       	pop	r17
 f74:	0f 91       	pop	r16
 f76:	08 95       	ret

Disassembly of section .text.lq_writeDevice4Bits:

000010de <lq_writeDevice4Bits>:
    10de:	1f 93       	push	r17
    10e0:	cf 93       	push	r28
    10e2:	df 93       	push	r29
    10e4:	ec 01       	movw	r28, r24
    10e6:	16 2f       	mov	r17, r22
    10e8:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <lq_transmitI2C>
    10ec:	61 2f       	mov	r22, r17
    10ee:	ce 01       	movw	r24, r28
    10f0:	0e 94 a1 07 	call	0xf42	; 0xf42 <lq_writeDevicePulse>
    10f4:	df 91       	pop	r29
    10f6:	cf 91       	pop	r28
    10f8:	1f 91       	pop	r17
    10fa:	08 95       	ret

Disassembly of section .text.lq_writeDeviceByte:

00000f08 <lq_writeDeviceByte>:
 f08:	ff 92       	push	r15
 f0a:	0f 93       	push	r16
 f0c:	1f 93       	push	r17
 f0e:	cf 93       	push	r28
 f10:	df 93       	push	r29
 f12:	8c 01       	movw	r16, r24
 f14:	f4 2e       	mov	r15, r20
 f16:	86 2f       	mov	r24, r22
 f18:	80 7f       	andi	r24, 0xF0	; 240
 f1a:	90 e1       	ldi	r25, 0x10	; 16
 f1c:	69 9f       	mul	r22, r25
 f1e:	e0 01       	movw	r28, r0
 f20:	11 24       	eor	r1, r1
 f22:	68 2f       	mov	r22, r24
 f24:	64 2b       	or	r22, r20
 f26:	c8 01       	movw	r24, r16
 f28:	0e 94 6f 08 	call	0x10de	; 0x10de <lq_writeDevice4Bits>
 f2c:	6c 2f       	mov	r22, r28
 f2e:	6f 29       	or	r22, r15
 f30:	c8 01       	movw	r24, r16
 f32:	0e 94 6f 08 	call	0x10de	; 0x10de <lq_writeDevice4Bits>
 f36:	df 91       	pop	r29
 f38:	cf 91       	pop	r28
 f3a:	1f 91       	pop	r17
 f3c:	0f 91       	pop	r16
 f3e:	ff 90       	pop	r15
 f40:	08 95       	ret

Disassembly of section .text.lq_print:

00000fde <lq_print>:
     fde:	0f 93       	push	r16
     fe0:	1f 93       	push	r17
     fe2:	cf 93       	push	r28
     fe4:	df 93       	push	r29
     fe6:	8c 01       	movw	r16, r24
     fe8:	eb 01       	movw	r28, r22
     fea:	68 81       	ld	r22, Y
     fec:	06 c0       	rjmp	.+12     	; 0xffa <lq_print+0x1c>
     fee:	41 e0       	ldi	r20, 0x01	; 1
     ff0:	c8 01       	movw	r24, r16
     ff2:	0e 94 84 07 	call	0xf08	; 0xf08 <lq_writeDeviceByte>
     ff6:	21 96       	adiw	r28, 0x01	; 1
     ff8:	68 81       	ld	r22, Y
     ffa:	61 11       	cpse	r22, r1
     ffc:	f8 cf       	rjmp	.-16     	; 0xfee <lq_print+0x10>
     ffe:	df 91       	pop	r29
    1000:	cf 91       	pop	r28
    1002:	1f 91       	pop	r17
    1004:	0f 91       	pop	r16
    1006:	08 95       	ret

Disassembly of section .text.lq_sendCommand:

000011e4 <lq_sendCommand>:
}


void lq_sendCommand(LiquidCrystalDevice_t* device, uint8_t command)
{
	lq_writeDeviceByte(device, command, 0);
    11e4:	40 e0       	ldi	r20, 0x00	; 0
    11e6:	0e 94 84 07 	call	0xf08	; 0xf08 <lq_writeDeviceByte>
    11ea:	08 95       	ret

Disassembly of section .text.lq_setCursor:

00000e4e <lq_setCursor>:
 e4e:	cf 93       	push	r28
 e50:	df 93       	push	r29
 e52:	00 d0       	rcall	.+0      	; 0xe54 <lq_setCursor+0x6>
 e54:	00 d0       	rcall	.+0      	; 0xe56 <lq_setCursor+0x8>
 e56:	cd b7       	in	r28, 0x3d	; 61
 e58:	de b7       	in	r29, 0x3e	; 62
 e5a:	19 82       	std	Y+1, r1	; 0x01
 e5c:	20 e4       	ldi	r18, 0x40	; 64
 e5e:	2a 83       	std	Y+2, r18	; 0x02
 e60:	24 e1       	ldi	r18, 0x14	; 20
 e62:	2b 83       	std	Y+3, r18	; 0x03
 e64:	24 e5       	ldi	r18, 0x54	; 84
 e66:	2c 83       	std	Y+4, r18	; 0x04
 e68:	e1 e0       	ldi	r30, 0x01	; 1
 e6a:	f0 e0       	ldi	r31, 0x00	; 0
 e6c:	ec 0f       	add	r30, r28
 e6e:	fd 1f       	adc	r31, r29
 e70:	e6 0f       	add	r30, r22
 e72:	f1 1d       	adc	r31, r1
 e74:	60 81       	ld	r22, Z
 e76:	64 0f       	add	r22, r20
 e78:	60 68       	ori	r22, 0x80	; 128
 e7a:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <lq_sendCommand>
 e7e:	0f 90       	pop	r0
 e80:	0f 90       	pop	r0
 e82:	0f 90       	pop	r0
 e84:	0f 90       	pop	r0
 e86:	df 91       	pop	r29
 e88:	cf 91       	pop	r28
 e8a:	08 95       	ret

Disassembly of section .text.lq_clear:

00001008 <lq_clear>:
    1008:	cf 93       	push	r28
    100a:	df 93       	push	r29
    100c:	ec 01       	movw	r28, r24
    100e:	61 e0       	ldi	r22, 0x01	; 1
    1010:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <lq_sendCommand>
    1014:	8f e3       	ldi	r24, 0x3F	; 63
    1016:	9f e1       	ldi	r25, 0x1F	; 31
    1018:	01 97       	sbiw	r24, 0x01	; 1
    101a:	f1 f7       	brne	.-4      	; 0x1018 <lq_clear+0x10>
    101c:	00 c0       	rjmp	.+0      	; 0x101e <lq_clear+0x16>
    101e:	00 00       	nop
    1020:	40 e0       	ldi	r20, 0x00	; 0
    1022:	60 e0       	ldi	r22, 0x00	; 0
    1024:	ce 01       	movw	r24, r28
    1026:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
    102a:	df 91       	pop	r29
    102c:	cf 91       	pop	r28
    102e:	08 95       	ret

Disassembly of section .text.lq_returnHome:

0000115c <lq_returnHome>:
    115c:	62 e0       	ldi	r22, 0x02	; 2
    115e:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <lq_sendCommand>
    1162:	8f e3       	ldi	r24, 0x3F	; 63
    1164:	9f e1       	ldi	r25, 0x1F	; 31
    1166:	01 97       	sbiw	r24, 0x01	; 1
    1168:	f1 f7       	brne	.-4      	; 0x1166 <lq_returnHome+0xa>
    116a:	00 c0       	rjmp	.+0      	; 0x116c <lq_returnHome+0x10>
    116c:	00 00       	nop
    116e:	08 95       	ret

Disassembly of section .text.lq_turnOnDisplay:

00001184 <lq_turnOnDisplay>:
    1184:	fc 01       	movw	r30, r24
    1186:	65 81       	ldd	r22, Z+5	; 0x05
    1188:	26 2f       	mov	r18, r22
    118a:	24 60       	ori	r18, 0x04	; 4
    118c:	25 83       	std	Z+5, r18	; 0x05
    118e:	6c 60       	ori	r22, 0x0C	; 12
    1190:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <lq_sendCommand>
    1194:	08 95       	ret

Disassembly of section .text.lq_init:

00000ae6 <lq_init>:
 ae6:	cf 93       	push	r28
 ae8:	df 93       	push	r29
 aea:	cd b7       	in	r28, 0x3d	; 61
 aec:	de b7       	in	r29, 0x3e	; 62
 aee:	2e 97       	sbiw	r28, 0x0e	; 14
 af0:	0f b6       	in	r0, 0x3f	; 63
 af2:	f8 94       	cli
 af4:	de bf       	out	0x3e, r29	; 62
 af6:	0f be       	out	0x3f, r0	; 63
 af8:	cd bf       	out	0x3d, r28	; 61
 afa:	88 87       	std	Y+8, r24	; 0x08
 afc:	69 87       	std	Y+9, r22	; 0x09
 afe:	4a 87       	std	Y+10, r20	; 0x0a
 b00:	1b 86       	std	Y+11, r1	; 0x0b
 b02:	2c 87       	std	Y+12, r18	; 0x0c
 b04:	84 e0       	ldi	r24, 0x04	; 4
 b06:	8d 87       	std	Y+13, r24	; 0x0d
 b08:	82 e0       	ldi	r24, 0x02	; 2
 b0a:	8e 87       	std	Y+14, r24	; 0x0e
 b0c:	42 30       	cpi	r20, 0x02	; 2
 b0e:	18 f0       	brcs	.+6      	; 0xb16 <lq_init+0x30>
 b10:	82 2f       	mov	r24, r18
 b12:	88 60       	ori	r24, 0x08	; 8
 b14:	8c 87       	std	Y+12, r24	; 0x0c
 b16:	22 23       	and	r18, r18
 b18:	29 f0       	breq	.+10     	; 0xb24 <lq_init+0x3e>
 b1a:	41 30       	cpi	r20, 0x01	; 1
 b1c:	19 f4       	brne	.+6      	; 0xb24 <lq_init+0x3e>
 b1e:	8c 85       	ldd	r24, Y+12	; 0x0c
 b20:	84 60       	ori	r24, 0x04	; 4
 b22:	8c 87       	std	Y+12, r24	; 0x0c
 b24:	2f ef       	ldi	r18, 0xFF	; 255
 b26:	81 ee       	ldi	r24, 0xE1	; 225
 b28:	94 e0       	ldi	r25, 0x04	; 4
 b2a:	21 50       	subi	r18, 0x01	; 1
 b2c:	80 40       	sbci	r24, 0x00	; 0
 b2e:	90 40       	sbci	r25, 0x00	; 0
 b30:	e1 f7       	brne	.-8      	; 0xb2a <lq_init+0x44>
 b32:	00 c0       	rjmp	.+0      	; 0xb34 <lq_init+0x4e>
 b34:	00 00       	nop
 b36:	60 e0       	ldi	r22, 0x00	; 0
 b38:	ce 01       	movw	r24, r28
 b3a:	08 96       	adiw	r24, 0x08	; 8
 b3c:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <lq_transmitI2C>
 b40:	2f ef       	ldi	r18, 0xFF	; 255
 b42:	83 ed       	ldi	r24, 0xD3	; 211
 b44:	90 e3       	ldi	r25, 0x30	; 48
 b46:	21 50       	subi	r18, 0x01	; 1
 b48:	80 40       	sbci	r24, 0x00	; 0
 b4a:	90 40       	sbci	r25, 0x00	; 0
 b4c:	e1 f7       	brne	.-8      	; 0xb46 <lq_init+0x60>
 b4e:	00 c0       	rjmp	.+0      	; 0xb50 <lq_init+0x6a>
 b50:	00 00       	nop
 b52:	60 e3       	ldi	r22, 0x30	; 48
 b54:	ce 01       	movw	r24, r28
 b56:	08 96       	adiw	r24, 0x08	; 8
 b58:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <lq_transmitI2C>
 b5c:	8f e4       	ldi	r24, 0x4F	; 79
 b5e:	96 e4       	ldi	r25, 0x46	; 70
 b60:	01 97       	sbiw	r24, 0x01	; 1
 b62:	f1 f7       	brne	.-4      	; 0xb60 <lq_init+0x7a>
 b64:	00 c0       	rjmp	.+0      	; 0xb66 <lq_init+0x80>
 b66:	00 00       	nop
 b68:	60 e3       	ldi	r22, 0x30	; 48
 b6a:	ce 01       	movw	r24, r28
 b6c:	08 96       	adiw	r24, 0x08	; 8
 b6e:	0e 94 6f 08 	call	0x10de	; 0x10de <lq_writeDevice4Bits>
 b72:	8f e4       	ldi	r24, 0x4F	; 79
 b74:	96 e4       	ldi	r25, 0x46	; 70
 b76:	01 97       	sbiw	r24, 0x01	; 1
 b78:	f1 f7       	brne	.-4      	; 0xb76 <lq_init+0x90>
 b7a:	00 c0       	rjmp	.+0      	; 0xb7c <lq_init+0x96>
 b7c:	00 00       	nop
 b7e:	60 e3       	ldi	r22, 0x30	; 48
 b80:	ce 01       	movw	r24, r28
 b82:	08 96       	adiw	r24, 0x08	; 8
 b84:	0e 94 6f 08 	call	0x10de	; 0x10de <lq_writeDevice4Bits>
 b88:	87 e5       	ldi	r24, 0x57	; 87
 b8a:	92 e0       	ldi	r25, 0x02	; 2
 b8c:	01 97       	sbiw	r24, 0x01	; 1
 b8e:	f1 f7       	brne	.-4      	; 0xb8c <lq_init+0xa6>
 b90:	00 c0       	rjmp	.+0      	; 0xb92 <lq_init+0xac>
 b92:	00 00       	nop
 b94:	60 e2       	ldi	r22, 0x20	; 32
 b96:	ce 01       	movw	r24, r28
 b98:	08 96       	adiw	r24, 0x08	; 8
 b9a:	0e 94 6f 08 	call	0x10de	; 0x10de <lq_writeDevice4Bits>
 b9e:	6c 85       	ldd	r22, Y+12	; 0x0c
 ba0:	60 62       	ori	r22, 0x20	; 32
 ba2:	ce 01       	movw	r24, r28
 ba4:	08 96       	adiw	r24, 0x08	; 8
 ba6:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <lq_sendCommand>
 baa:	ce 01       	movw	r24, r28
 bac:	08 96       	adiw	r24, 0x08	; 8
 bae:	0e 94 c2 08 	call	0x1184	; 0x1184 <lq_turnOnDisplay>
 bb2:	ce 01       	movw	r24, r28
 bb4:	08 96       	adiw	r24, 0x08	; 8
 bb6:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 bba:	6e 85       	ldd	r22, Y+14	; 0x0e
 bbc:	64 60       	ori	r22, 0x04	; 4
 bbe:	ce 01       	movw	r24, r28
 bc0:	08 96       	adiw	r24, 0x08	; 8
 bc2:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <lq_sendCommand>
 bc6:	ce 01       	movw	r24, r28
 bc8:	08 96       	adiw	r24, 0x08	; 8
 bca:	0e 94 ae 08 	call	0x115c	; 0x115c <lq_returnHome>
 bce:	87 e0       	ldi	r24, 0x07	; 7
 bd0:	fe 01       	movw	r30, r28
 bd2:	38 96       	adiw	r30, 0x08	; 8
 bd4:	de 01       	movw	r26, r28
 bd6:	11 96       	adiw	r26, 0x01	; 1
 bd8:	01 90       	ld	r0, Z+
 bda:	0d 92       	st	X+, r0
 bdc:	8a 95       	dec	r24
 bde:	e1 f7       	brne	.-8      	; 0xbd8 <lq_init+0xf2>
 be0:	29 81       	ldd	r18, Y+1	; 0x01
 be2:	3a 81       	ldd	r19, Y+2	; 0x02
 be4:	4b 81       	ldd	r20, Y+3	; 0x03
 be6:	5c 81       	ldd	r21, Y+4	; 0x04
 be8:	6d 81       	ldd	r22, Y+5	; 0x05
 bea:	7e 81       	ldd	r23, Y+6	; 0x06
 bec:	8f 81       	ldd	r24, Y+7	; 0x07
 bee:	90 e0       	ldi	r25, 0x00	; 0
 bf0:	2e 96       	adiw	r28, 0x0e	; 14
 bf2:	0f b6       	in	r0, 0x3f	; 63
 bf4:	f8 94       	cli
 bf6:	de bf       	out	0x3e, r29	; 62
 bf8:	0f be       	out	0x3f, r0	; 63
 bfa:	cd bf       	out	0x3d, r28	; 61
 bfc:	df 91       	pop	r29
 bfe:	cf 91       	pop	r28
 c00:	08 95       	ret

Disassembly of section .text.millis_now:

00001130 <millis_now>:
    1130:	f8 94       	cli
    1132:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <millis>
    1136:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <millis+0x1>
    113a:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <millis+0x2>
    113e:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <millis+0x3>
    1142:	78 94       	sei
    1144:	08 95       	ret

Disassembly of section .text.buzzer_init:

000011c4 <buzzer_init>:
    11c4:	84 b1       	in	r24, 0x04	; 4
    11c6:	80 62       	ori	r24, 0x20	; 32
    11c8:	84 b9       	out	0x04, r24	; 4
    11ca:	85 b1       	in	r24, 0x05	; 5
    11cc:	8f 7d       	andi	r24, 0xDF	; 223
    11ce:	85 b9       	out	0x05, r24	; 5
    11d0:	08 95       	ret

Disassembly of section .text.buzzer_beep:

00000e8c <buzzer_beep>:
 e8c:	cf 92       	push	r12
 e8e:	df 92       	push	r13
 e90:	ef 92       	push	r14
 e92:	ff 92       	push	r15
 e94:	6b 01       	movw	r12, r22
 e96:	7c 01       	movw	r14, r24
 e98:	85 b1       	in	r24, 0x05	; 5
 e9a:	80 62       	ori	r24, 0x20	; 32
 e9c:	85 b9       	out	0x05, r24	; 5
 e9e:	81 e0       	ldi	r24, 0x01	; 1
 ea0:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <buzzer_on>
 ea4:	0e 94 98 08 	call	0x1130	; 0x1130 <millis_now>
 ea8:	c6 0e       	add	r12, r22
 eaa:	d7 1e       	adc	r13, r23
 eac:	e8 1e       	adc	r14, r24
 eae:	f9 1e       	adc	r15, r25
 eb0:	c0 92 12 01 	sts	0x0112, r12	; 0x800112 <buzzer_off_at>
 eb4:	d0 92 13 01 	sts	0x0113, r13	; 0x800113 <buzzer_off_at+0x1>
 eb8:	e0 92 14 01 	sts	0x0114, r14	; 0x800114 <buzzer_off_at+0x2>
 ebc:	f0 92 15 01 	sts	0x0115, r15	; 0x800115 <buzzer_off_at+0x3>
 ec0:	ff 90       	pop	r15
 ec2:	ef 90       	pop	r14
 ec4:	df 90       	pop	r13
 ec6:	cf 90       	pop	r12
 ec8:	08 95       	ret

Disassembly of section .text.buzzer_task:

00000eca <buzzer_task>:
 eca:	0f 93       	push	r16
 ecc:	1f 93       	push	r17
 ece:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <buzzer_on>
 ed2:	88 23       	and	r24, r24
 ed4:	b1 f0       	breq	.+44     	; 0xf02 <buzzer_task+0x38>
 ed6:	0e 94 98 08 	call	0x1130	; 0x1130 <millis_now>
 eda:	00 91 12 01 	lds	r16, 0x0112	; 0x800112 <buzzer_off_at>
 ede:	10 91 13 01 	lds	r17, 0x0113	; 0x800113 <buzzer_off_at+0x1>
 ee2:	20 91 14 01 	lds	r18, 0x0114	; 0x800114 <buzzer_off_at+0x2>
 ee6:	30 91 15 01 	lds	r19, 0x0115	; 0x800115 <buzzer_off_at+0x3>
 eea:	dc 01       	movw	r26, r24
 eec:	cb 01       	movw	r24, r22
 eee:	80 1b       	sub	r24, r16
 ef0:	91 0b       	sbc	r25, r17
 ef2:	a2 0b       	sbc	r26, r18
 ef4:	b3 0b       	sbc	r27, r19
 ef6:	2a f0       	brmi	.+10     	; 0xf02 <buzzer_task+0x38>
 ef8:	85 b1       	in	r24, 0x05	; 5
 efa:	8f 7d       	andi	r24, 0xDF	; 223
 efc:	85 b9       	out	0x05, r24	; 5
 efe:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <buzzer_on>
 f02:	1f 91       	pop	r17
 f04:	0f 91       	pop	r16
 f06:	08 95       	ret

Disassembly of section .text.leds_init:

00001170 <leds_init>:
    1170:	84 b1       	in	r24, 0x04	; 4
    1172:	83 60       	ori	r24, 0x03	; 3
    1174:	84 b9       	out	0x04, r24	; 4
    1176:	85 b1       	in	r24, 0x05	; 5
    1178:	81 60       	ori	r24, 0x01	; 1
    117a:	85 b9       	out	0x05, r24	; 5
    117c:	85 b1       	in	r24, 0x05	; 5
    117e:	8d 7f       	andi	r24, 0xFD	; 253
    1180:	85 b9       	out	0x05, r24	; 5
    1182:	08 95       	ret

Disassembly of section .text.leds_set_abierto:

000010be <leds_set_abierto>:
    10be:	88 23       	and	r24, r24
    10c0:	39 f0       	breq	.+14     	; 0x10d0 <leds_set_abierto+0x12>
    10c2:	85 b1       	in	r24, 0x05	; 5
    10c4:	8e 7f       	andi	r24, 0xFE	; 254
    10c6:	85 b9       	out	0x05, r24	; 5
    10c8:	85 b1       	in	r24, 0x05	; 5
    10ca:	82 60       	ori	r24, 0x02	; 2
    10cc:	85 b9       	out	0x05, r24	; 5
    10ce:	08 95       	ret
    10d0:	85 b1       	in	r24, 0x05	; 5
    10d2:	81 60       	ori	r24, 0x01	; 1
    10d4:	85 b9       	out	0x05, r24	; 5
    10d6:	85 b1       	in	r24, 0x05	; 5
    10d8:	8d 7f       	andi	r24, 0xFD	; 253
    10da:	85 b9       	out	0x05, r24	; 5
    10dc:	08 95       	ret

Disassembly of section .text.alarm_start:

00000f78 <alarm_start>:
 f78:	0f 93       	push	r16
 f7a:	1f 93       	push	r17
 f7c:	0e 94 98 08 	call	0x1130	; 0x1130 <millis_now>
 f80:	e0 e0       	ldi	r30, 0x00	; 0
 f82:	f1 e0       	ldi	r31, 0x01	; 1
 f84:	21 e0       	ldi	r18, 0x01	; 1
 f86:	20 83       	st	Z, r18
 f88:	11 82       	std	Z+1, r1	; 0x01
 f8a:	8b 01       	movw	r16, r22
 f8c:	9c 01       	movw	r18, r24
 f8e:	08 57       	subi	r16, 0x78	; 120
 f90:	1c 4e       	sbci	r17, 0xEC	; 236
 f92:	2f 4f       	sbci	r18, 0xFF	; 255
 f94:	3f 4f       	sbci	r19, 0xFF	; 255
 f96:	02 83       	std	Z+2, r16	; 0x02
 f98:	13 83       	std	Z+3, r17	; 0x03
 f9a:	24 83       	std	Z+4, r18	; 0x04
 f9c:	35 83       	std	Z+5, r19	; 0x05
 f9e:	66 83       	std	Z+6, r22	; 0x06
 fa0:	77 83       	std	Z+7, r23	; 0x07
 fa2:	80 87       	std	Z+8, r24	; 0x08
 fa4:	91 87       	std	Z+9, r25	; 0x09
 fa6:	1f 91       	pop	r17
 fa8:	0f 91       	pop	r16
 faa:	08 95       	ret

Disassembly of section .text.alarm_task:

00000c02 <alarm_task>:
 c02:	cf 92       	push	r12
 c04:	df 92       	push	r13
 c06:	ef 92       	push	r14
 c08:	ff 92       	push	r15
 c0a:	0f 93       	push	r16
 c0c:	1f 93       	push	r17
 c0e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 c12:	88 23       	and	r24, r24
 c14:	09 f4       	brne	.+2      	; 0xc18 <alarm_task+0x16>
 c16:	51 c0       	rjmp	.+162    	; 0xcba <alarm_task+0xb8>
 c18:	0e 94 98 08 	call	0x1130	; 0x1130 <millis_now>
 c1c:	00 91 02 01 	lds	r16, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 c20:	10 91 03 01 	lds	r17, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 c24:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
 c28:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__DATA_REGION_ORIGIN__+0x5>
 c2c:	6b 01       	movw	r12, r22
 c2e:	7c 01       	movw	r14, r24
 c30:	c0 1a       	sub	r12, r16
 c32:	d1 0a       	sbc	r13, r17
 c34:	e2 0a       	sbc	r14, r18
 c36:	f3 0a       	sbc	r15, r19
 c38:	4a f0       	brmi	.+18     	; 0xc4c <alarm_task+0x4a>
 c3a:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 c3e:	85 b1       	in	r24, 0x05	; 5
 c40:	8f 7d       	andi	r24, 0xDF	; 223
 c42:	85 b9       	out	0x05, r24	; 5
 c44:	80 e0       	ldi	r24, 0x00	; 0
 c46:	0e 94 5f 08 	call	0x10be	; 0x10be <leds_set_abierto>
 c4a:	37 c0       	rjmp	.+110    	; 0xcba <alarm_task+0xb8>
 c4c:	00 91 06 01 	lds	r16, 0x0106	; 0x800106 <__DATA_REGION_ORIGIN__+0x6>
 c50:	10 91 07 01 	lds	r17, 0x0107	; 0x800107 <__DATA_REGION_ORIGIN__+0x7>
 c54:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__DATA_REGION_ORIGIN__+0x8>
 c58:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__DATA_REGION_ORIGIN__+0x9>
 c5c:	6b 01       	movw	r12, r22
 c5e:	7c 01       	movw	r14, r24
 c60:	c0 1a       	sub	r12, r16
 c62:	d1 0a       	sbc	r13, r17
 c64:	e2 0a       	sbc	r14, r18
 c66:	f3 0a       	sbc	r15, r19
 c68:	42 f1       	brmi	.+80     	; 0xcba <alarm_task+0xb8>
 c6a:	dc 01       	movw	r26, r24
 c6c:	cb 01       	movw	r24, r22
 c6e:	88 53       	subi	r24, 0x38	; 56
 c70:	9f 4f       	sbci	r25, 0xFF	; 255
 c72:	af 4f       	sbci	r26, 0xFF	; 255
 c74:	bf 4f       	sbci	r27, 0xFF	; 255
 c76:	e0 e0       	ldi	r30, 0x00	; 0
 c78:	f1 e0       	ldi	r31, 0x01	; 1
 c7a:	86 83       	std	Z+6, r24	; 0x06
 c7c:	97 83       	std	Z+7, r25	; 0x07
 c7e:	a0 87       	std	Z+8, r26	; 0x08
 c80:	b1 87       	std	Z+9, r27	; 0x09
 c82:	81 81       	ldd	r24, Z+1	; 0x01
 c84:	88 23       	and	r24, r24
 c86:	39 f0       	breq	.+14     	; 0xc96 <alarm_task+0x94>
 c88:	85 b1       	in	r24, 0x05	; 5
 c8a:	81 60       	ori	r24, 0x01	; 1
 c8c:	85 b9       	out	0x05, r24	; 5
 c8e:	85 b1       	in	r24, 0x05	; 5
 c90:	8d 7f       	andi	r24, 0xFD	; 253
 c92:	85 b9       	out	0x05, r24	; 5
 c94:	06 c0       	rjmp	.+12     	; 0xca2 <alarm_task+0xa0>
 c96:	85 b1       	in	r24, 0x05	; 5
 c98:	8e 7f       	andi	r24, 0xFE	; 254
 c9a:	85 b9       	out	0x05, r24	; 5
 c9c:	85 b1       	in	r24, 0x05	; 5
 c9e:	82 60       	ori	r24, 0x02	; 2
 ca0:	85 b9       	out	0x05, r24	; 5
 ca2:	e0 e0       	ldi	r30, 0x00	; 0
 ca4:	f1 e0       	ldi	r31, 0x01	; 1
 ca6:	91 81       	ldd	r25, Z+1	; 0x01
 ca8:	81 e0       	ldi	r24, 0x01	; 1
 caa:	89 27       	eor	r24, r25
 cac:	81 83       	std	Z+1, r24	; 0x01
 cae:	64 e6       	ldi	r22, 0x64	; 100
 cb0:	70 e0       	ldi	r23, 0x00	; 0
 cb2:	80 e0       	ldi	r24, 0x00	; 0
 cb4:	90 e0       	ldi	r25, 0x00	; 0
 cb6:	0e 94 46 07 	call	0xe8c	; 0xe8c <buzzer_beep>
 cba:	1f 91       	pop	r17
 cbc:	0f 91       	pop	r16
 cbe:	ff 90       	pop	r15
 cc0:	ef 90       	pop	r14
 cc2:	df 90       	pop	r13
 cc4:	cf 90       	pop	r12
 cc6:	08 95       	ret

Disassembly of section .text.timer0_init_millis:

00001196 <timer0_init_millis>:
    1196:	82 e0       	ldi	r24, 0x02	; 2
    1198:	84 bd       	out	0x24, r24	; 36
    119a:	93 e0       	ldi	r25, 0x03	; 3
    119c:	95 bd       	out	0x25, r25	; 37
    119e:	99 ef       	ldi	r25, 0xF9	; 249
    11a0:	97 bd       	out	0x27, r25	; 39
    11a2:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
    11a6:	08 95       	ret

Disassembly of section .text.read_keypad:

000009aa <read_keypad>:
 9aa:	0f 93       	push	r16
 9ac:	1f 93       	push	r17
 9ae:	cf 93       	push	r28
 9b0:	60 e0       	ldi	r22, 0x00	; 0
 9b2:	60 c0       	rjmp	.+192    	; 0xa74 <read_keypad+0xca>
 9b4:	2b b1       	in	r18, 0x0b	; 11
 9b6:	e6 2f       	mov	r30, r22
 9b8:	f0 e0       	ldi	r31, 0x00	; 0
 9ba:	af 01       	movw	r20, r30
 9bc:	4c 5f       	subi	r20, 0xFC	; 252
 9be:	5f 4f       	sbci	r21, 0xFF	; 255
 9c0:	81 e0       	ldi	r24, 0x01	; 1
 9c2:	90 e0       	ldi	r25, 0x00	; 0
 9c4:	02 c0       	rjmp	.+4      	; 0x9ca <read_keypad+0x20>
 9c6:	88 0f       	add	r24, r24
 9c8:	99 1f       	adc	r25, r25
 9ca:	4a 95       	dec	r20
 9cc:	e2 f7       	brpl	.-8      	; 0x9c6 <read_keypad+0x1c>
 9ce:	92 2f       	mov	r25, r18
 9d0:	90 6f       	ori	r25, 0xF0	; 240
 9d2:	80 95       	com	r24
 9d4:	89 23       	and	r24, r25
 9d6:	8b b9       	out	0x0b, r24	; 11
 9d8:	8a e1       	ldi	r24, 0x1A	; 26
 9da:	8a 95       	dec	r24
 9dc:	f1 f7       	brne	.-4      	; 0x9da <read_keypad+0x30>
 9de:	00 c0       	rjmp	.+0      	; 0x9e0 <read_keypad+0x36>
 9e0:	99 b1       	in	r25, 0x09	; 9
 9e2:	9f 70       	andi	r25, 0x0F	; 15
 9e4:	80 e0       	ldi	r24, 0x00	; 0
 9e6:	42 c0       	rjmp	.+132    	; 0xa6c <read_keypad+0xc2>
 9e8:	48 2f       	mov	r20, r24
 9ea:	50 e0       	ldi	r21, 0x00	; 0
 9ec:	29 2f       	mov	r18, r25
 9ee:	30 e0       	ldi	r19, 0x00	; 0
 9f0:	08 2e       	mov	r0, r24
 9f2:	02 c0       	rjmp	.+4      	; 0x9f8 <read_keypad+0x4e>
 9f4:	35 95       	asr	r19
 9f6:	27 95       	ror	r18
 9f8:	0a 94       	dec	r0
 9fa:	e2 f7       	brpl	.-8      	; 0x9f4 <read_keypad+0x4a>
 9fc:	20 fd       	sbrc	r18, 0
 9fe:	35 c0       	rjmp	.+106    	; 0xa6a <read_keypad+0xc0>
 a00:	cf 01       	movw	r24, r30
 a02:	88 0f       	add	r24, r24
 a04:	99 1f       	adc	r25, r25
 a06:	88 0f       	add	r24, r24
 a08:	99 1f       	adc	r25, r25
 a0a:	84 0f       	add	r24, r20
 a0c:	95 1f       	adc	r25, r21
 a0e:	09 2e       	mov	r0, r25
 a10:	00 0c       	add	r0, r0
 a12:	aa 0b       	sbc	r26, r26
 a14:	8b 5e       	subi	r24, 0xEB	; 235
 a16:	9d 4f       	sbci	r25, 0xFD	; 253
 a18:	af 4f       	sbci	r26, 0xFF	; 255
 a1a:	fc 01       	movw	r30, r24
 a1c:	c4 91       	lpm	r28, Z
 a1e:	a7 fd       	sbrc	r26, 7
 a20:	c0 81       	ld	r28, Z
 a22:	40 91 0a 01 	lds	r20, 0x010A	; 0x80010a <last_change_time.2458>
 a26:	50 91 0b 01 	lds	r21, 0x010B	; 0x80010b <last_change_time.2458+0x1>
 a2a:	60 91 0c 01 	lds	r22, 0x010C	; 0x80010c <last_change_time.2458+0x2>
 a2e:	70 91 0d 01 	lds	r23, 0x010D	; 0x80010d <last_change_time.2458+0x3>
 a32:	80 e0       	ldi	r24, 0x00	; 0
 a34:	90 e0       	ldi	r25, 0x00	; 0
 a36:	dc 01       	movw	r26, r24
 a38:	84 1b       	sub	r24, r20
 a3a:	95 0b       	sbc	r25, r21
 a3c:	a6 0b       	sbc	r26, r22
 a3e:	b7 0b       	sbc	r27, r23
 a40:	4f 97       	sbiw	r24, 0x1f	; 31
 a42:	a1 05       	cpc	r26, r1
 a44:	b1 05       	cpc	r27, r1
 a46:	d0 f0       	brcs	.+52     	; 0xa7c <read_keypad+0xd2>
 a48:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <stable_key.2457>
 a4c:	c8 17       	cp	r28, r24
 a4e:	b1 f0       	breq	.+44     	; 0xa7c <read_keypad+0xd2>
 a50:	c0 93 17 01 	sts	0x0117, r28	; 0x800117 <stable_key.2457>
 a54:	cc 23       	and	r28, r28
 a56:	91 f0       	breq	.+36     	; 0xa7c <read_keypad+0xd2>
 a58:	6e e1       	ldi	r22, 0x1E	; 30
 a5a:	70 e0       	ldi	r23, 0x00	; 0
 a5c:	80 e0       	ldi	r24, 0x00	; 0
 a5e:	90 e0       	ldi	r25, 0x00	; 0
 a60:	0e 94 46 07 	call	0xe8c	; 0xe8c <buzzer_beep>
 a64:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <stable_key.2457>
 a68:	3a c0       	rjmp	.+116    	; 0xade <read_keypad+0x134>
 a6a:	8f 5f       	subi	r24, 0xFF	; 255
 a6c:	84 30       	cpi	r24, 0x04	; 4
 a6e:	08 f4       	brcc	.+2      	; 0xa72 <read_keypad+0xc8>
 a70:	bb cf       	rjmp	.-138    	; 0x9e8 <read_keypad+0x3e>
 a72:	6f 5f       	subi	r22, 0xFF	; 255
 a74:	64 30       	cpi	r22, 0x04	; 4
 a76:	08 f4       	brcc	.+2      	; 0xa7a <read_keypad+0xd0>
 a78:	9d cf       	rjmp	.-198    	; 0x9b4 <read_keypad+0xa>
 a7a:	c0 e0       	ldi	r28, 0x00	; 0
 a7c:	0e 94 98 08 	call	0x1130	; 0x1130 <millis_now>
 a80:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <last_key.2456>
 a84:	c2 17       	cp	r28, r18
 a86:	51 f0       	breq	.+20     	; 0xa9c <read_keypad+0xf2>
 a88:	c0 93 16 01 	sts	0x0116, r28	; 0x800116 <last_key.2456>
 a8c:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <last_change_time.2458>
 a90:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <last_change_time.2458+0x1>
 a94:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <last_change_time.2458+0x2>
 a98:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <last_change_time.2458+0x3>
 a9c:	00 91 0a 01 	lds	r16, 0x010A	; 0x80010a <last_change_time.2458>
 aa0:	10 91 0b 01 	lds	r17, 0x010B	; 0x80010b <last_change_time.2458+0x1>
 aa4:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <last_change_time.2458+0x2>
 aa8:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <last_change_time.2458+0x3>
 aac:	dc 01       	movw	r26, r24
 aae:	cb 01       	movw	r24, r22
 ab0:	80 1b       	sub	r24, r16
 ab2:	91 0b       	sbc	r25, r17
 ab4:	a2 0b       	sbc	r26, r18
 ab6:	b3 0b       	sbc	r27, r19
 ab8:	4f 97       	sbiw	r24, 0x1f	; 31
 aba:	a1 05       	cpc	r26, r1
 abc:	b1 05       	cpc	r27, r1
 abe:	50 f0       	brcs	.+20     	; 0xad4 <read_keypad+0x12a>
 ac0:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <stable_key.2457>
 ac4:	c8 17       	cp	r28, r24
 ac6:	41 f0       	breq	.+16     	; 0xad8 <read_keypad+0x12e>
 ac8:	c0 93 17 01 	sts	0x0117, r28	; 0x800117 <stable_key.2457>
 acc:	cc 23       	and	r28, r28
 ace:	31 f0       	breq	.+12     	; 0xadc <read_keypad+0x132>
 ad0:	8c 2f       	mov	r24, r28
 ad2:	05 c0       	rjmp	.+10     	; 0xade <read_keypad+0x134>
 ad4:	80 e0       	ldi	r24, 0x00	; 0
 ad6:	03 c0       	rjmp	.+6      	; 0xade <read_keypad+0x134>
 ad8:	80 e0       	ldi	r24, 0x00	; 0
 ada:	01 c0       	rjmp	.+2      	; 0xade <read_keypad+0x134>
 adc:	80 e0       	ldi	r24, 0x00	; 0
 ade:	cf 91       	pop	r28
 ae0:	1f 91       	pop	r17
 ae2:	0f 91       	pop	r16
 ae4:	08 95       	ret

Disassembly of section .text.keypad_init:

000010fc <keypad_init>:
    10fc:	8a b1       	in	r24, 0x0a	; 10
    10fe:	80 7f       	andi	r24, 0xF0	; 240
    1100:	8a b9       	out	0x0a, r24	; 10
    1102:	8b b1       	in	r24, 0x0b	; 11
    1104:	8f 60       	ori	r24, 0x0F	; 15
    1106:	8b b9       	out	0x0b, r24	; 11
    1108:	8a b1       	in	r24, 0x0a	; 10
    110a:	80 6f       	ori	r24, 0xF0	; 240
    110c:	8a b9       	out	0x0a, r24	; 10
    110e:	8b b1       	in	r24, 0x0b	; 11
    1110:	80 6f       	ori	r24, 0xF0	; 240
    1112:	8b b9       	out	0x0b, r24	; 11
    1114:	08 95       	ret

Disassembly of section .text.guardar_password_eeprom:

00000d74 <guardar_password_eeprom>:
 d74:	0f 93       	push	r16
 d76:	1f 93       	push	r17
 d78:	cf 93       	push	r28
 d7a:	df 93       	push	r29
 d7c:	00 d0       	rcall	.+0      	; 0xd7e <guardar_password_eeprom+0xa>
 d7e:	00 d0       	rcall	.+0      	; 0xd80 <guardar_password_eeprom+0xc>
 d80:	0f 92       	push	r0
 d82:	cd b7       	in	r28, 0x3d	; 61
 d84:	de b7       	in	r29, 0x3e	; 62
 d86:	ab 01       	movw	r20, r22
 d88:	68 2f       	mov	r22, r24
 d8a:	24 e0       	ldi	r18, 0x04	; 4
 d8c:	30 e0       	ldi	r19, 0x00	; 0
 d8e:	8e 01       	movw	r16, r28
 d90:	0f 5f       	subi	r16, 0xFF	; 255
 d92:	1f 4f       	sbci	r17, 0xFF	; 255
 d94:	c8 01       	movw	r24, r16
 d96:	0e 94 d6 07 	call	0xfac	; 0xfac <memcpy>
 d9a:	1d 82       	std	Y+5, r1	; 0x05
 d9c:	b8 01       	movw	r22, r16
 d9e:	80 e8       	ldi	r24, 0x80	; 128
 da0:	25 e0       	ldi	r18, 0x05	; 5
 da2:	30 e0       	ldi	r19, 0x00	; 0
 da4:	40 e0       	ldi	r20, 0x00	; 0
 da6:	50 e0       	ldi	r21, 0x00	; 0
 da8:	0e 94 05 07 	call	0xe0a	; 0xe0a <eeprom_update_block>
 dac:	0f 90       	pop	r0
 dae:	0f 90       	pop	r0
 db0:	0f 90       	pop	r0
 db2:	0f 90       	pop	r0
 db4:	0f 90       	pop	r0
 db6:	df 91       	pop	r29
 db8:	cf 91       	pop	r28
 dba:	1f 91       	pop	r17
 dbc:	0f 91       	pop	r16
 dbe:	08 95       	ret

Disassembly of section .text.main:

00000226 <main>:
 226:	cf 93       	push	r28
 228:	df 93       	push	r29
 22a:	cd b7       	in	r28, 0x3d	; 61
 22c:	de b7       	in	r29, 0x3e	; 62
 22e:	c7 54       	subi	r28, 0x47	; 71
 230:	d1 09       	sbc	r29, r1
 232:	0f b6       	in	r0, 0x3f	; 63
 234:	f8 94       	cli
 236:	de bf       	out	0x3e, r29	; 62
 238:	0f be       	out	0x3f, r0	; 63
 23a:	cd bf       	out	0x3d, r28	; 61
 23c:	0e 94 7e 08 	call	0x10fc	; 0x10fc <keypad_init>
 240:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <buzzer_init>
 244:	0e 94 cb 08 	call	0x1196	; 0x1196 <timer0_init_millis>
 248:	0e 94 b8 08 	call	0x1170	; 0x1170 <leds_init>
 24c:	80 e0       	ldi	r24, 0x00	; 0
 24e:	0e 94 5f 08 	call	0x10be	; 0x10be <leds_set_abierto>
 252:	78 94       	sei
 254:	20 e0       	ldi	r18, 0x00	; 0
 256:	42 e0       	ldi	r20, 0x02	; 2
 258:	60 e1       	ldi	r22, 0x10	; 16
 25a:	87 e2       	ldi	r24, 0x27	; 39
 25c:	0e 94 73 05 	call	0xae6	; 0xae6 <lq_init>
 260:	29 83       	std	Y+1, r18	; 0x01
 262:	3a 83       	std	Y+2, r19	; 0x02
 264:	4b 83       	std	Y+3, r20	; 0x03
 266:	5c 83       	std	Y+4, r21	; 0x04
 268:	6d 83       	std	Y+5, r22	; 0x05
 26a:	7e 83       	std	Y+6, r23	; 0x06
 26c:	8f 83       	std	Y+7, r24	; 0x07
 26e:	ce 01       	movw	r24, r28
 270:	01 96       	adiw	r24, 0x01	; 1
 272:	0e 94 db 08 	call	0x11b6	; 0x11b6 <lq_turnOnBacklight>
 276:	22 eb       	ldi	r18, 0xB2	; 178
 278:	31 e0       	ldi	r19, 0x01	; 1
 27a:	40 e0       	ldi	r20, 0x00	; 0
 27c:	8c e0       	ldi	r24, 0x0C	; 12
 27e:	f9 01       	movw	r30, r18
 280:	de 01       	movw	r26, r28
 282:	18 96       	adiw	r26, 0x08	; 8
 284:	74 2f       	mov	r23, r20
 286:	0e 94 8b 08 	call	0x1116	; 0x1116 <__movmemx_qi>
 28a:	be 01       	movw	r22, r28
 28c:	68 5f       	subi	r22, 0xF8	; 248
 28e:	7f 4f       	sbci	r23, 0xFF	; 255
 290:	ce 01       	movw	r24, r28
 292:	01 96       	adiw	r24, 0x01	; 1
 294:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 298:	2f ef       	ldi	r18, 0xFF	; 255
 29a:	83 ed       	ldi	r24, 0xD3	; 211
 29c:	90 e3       	ldi	r25, 0x30	; 48
 29e:	21 50       	subi	r18, 0x01	; 1
 2a0:	80 40       	sbci	r24, 0x00	; 0
 2a2:	90 40       	sbci	r25, 0x00	; 0
 2a4:	e1 f7       	brne	.-8      	; 0x29e <main+0x78>
 2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <main+0x82>
 2a8:	00 00       	nop
 2aa:	ce 01       	movw	r24, r28
 2ac:	01 96       	adiw	r24, 0x01	; 1
 2ae:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 2b2:	40 e0       	ldi	r20, 0x00	; 0
 2b4:	50 e0       	ldi	r21, 0x00	; 0
 2b6:	60 e8       	ldi	r22, 0x80	; 128
 2b8:	25 e0       	ldi	r18, 0x05	; 5
 2ba:	30 e0       	ldi	r19, 0x00	; 0
 2bc:	ce 01       	movw	r24, r28
 2be:	44 96       	adiw	r24, 0x14	; 20
 2c0:	0e 94 2a 08 	call	0x1054	; 0x1054 <eeprom_read_block>
 2c4:	2e eb       	ldi	r18, 0xBE	; 190
 2c6:	31 e0       	ldi	r19, 0x01	; 1
 2c8:	40 e0       	ldi	r20, 0x00	; 0
 2ca:	81 e1       	ldi	r24, 0x11	; 17
 2cc:	f9 01       	movw	r30, r18
 2ce:	de 01       	movw	r26, r28
 2d0:	59 96       	adiw	r26, 0x19	; 25
 2d2:	74 2f       	mov	r23, r20
 2d4:	0e 94 8b 08 	call	0x1116	; 0x1116 <__movmemx_qi>
 2d8:	2f ec       	ldi	r18, 0xCF	; 207
 2da:	31 e0       	ldi	r19, 0x01	; 1
 2dc:	40 e0       	ldi	r20, 0x00	; 0
 2de:	81 e1       	ldi	r24, 0x11	; 17
 2e0:	f9 01       	movw	r30, r18
 2e2:	de 01       	movw	r26, r28
 2e4:	9a 96       	adiw	r26, 0x2a	; 42
 2e6:	74 2f       	mov	r23, r20
 2e8:	0e 94 8b 08 	call	0x1116	; 0x1116 <__movmemx_qi>
 2ec:	be 01       	movw	r22, r28
 2ee:	67 5e       	subi	r22, 0xE7	; 231
 2f0:	7f 4f       	sbci	r23, 0xFF	; 255
 2f2:	ce 01       	movw	r24, r28
 2f4:	01 96       	adiw	r24, 0x01	; 1
 2f6:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 2fa:	40 e0       	ldi	r20, 0x00	; 0
 2fc:	61 e0       	ldi	r22, 0x01	; 1
 2fe:	ce 01       	movw	r24, r28
 300:	01 96       	adiw	r24, 0x01	; 1
 302:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 306:	be 01       	movw	r22, r28
 308:	66 5d       	subi	r22, 0xD6	; 214
 30a:	7f 4f       	sbci	r23, 0xFF	; 255
 30c:	ce 01       	movw	r24, r28
 30e:	01 96       	adiw	r24, 0x01	; 1
 310:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 314:	fe 01       	movw	r30, r28
 316:	fb 96       	adiw	r30, 0x3b	; 59
 318:	85 e0       	ldi	r24, 0x05	; 5
 31a:	df 01       	movw	r26, r30
 31c:	1d 92       	st	X+, r1
 31e:	8a 95       	dec	r24
 320:	e9 f7       	brne	.-6      	; 0x31c <main+0xf6>
 322:	f1 2c       	mov	r15, r1
 324:	10 e0       	ldi	r17, 0x00	; 0
 326:	e1 2c       	mov	r14, r1
 328:	0e 94 65 07 	call	0xeca	; 0xeca <buzzer_task>
 32c:	0e 94 01 06 	call	0xc02	; 0xc02 <alarm_task>
 330:	0e 94 d5 04 	call	0x9aa	; 0x9aa <read_keypad>
 334:	88 23       	and	r24, r24
 336:	c1 f3       	breq	.-16     	; 0x328 <main+0x102>
 338:	12 30       	cpi	r17, 0x02	; 2
 33a:	09 f4       	brne	.+2      	; 0x33e <main+0x118>
 33c:	80 c1       	rjmp	.+768    	; 0x63e <__EEPROM_REGION_LENGTH__+0x23e>
 33e:	30 f4       	brcc	.+12     	; 0x34c <main+0x126>
 340:	11 23       	and	r17, r17
 342:	69 f0       	breq	.+26     	; 0x35e <main+0x138>
 344:	11 30       	cpi	r17, 0x01	; 1
 346:	09 f4       	brne	.+2      	; 0x34a <main+0x124>
 348:	5b c0       	rjmp	.+182    	; 0x400 <__EEPROM_REGION_LENGTH__>
 34a:	ee cf       	rjmp	.-36     	; 0x328 <main+0x102>
 34c:	14 30       	cpi	r17, 0x04	; 4
 34e:	09 f4       	brne	.+2      	; 0x352 <main+0x12c>
 350:	2f c1       	rjmp	.+606    	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 352:	08 f4       	brcc	.+2      	; 0x356 <main+0x130>
 354:	51 c2       	rjmp	.+1186   	; 0x7f8 <__EEPROM_REGION_LENGTH__+0x3f8>
 356:	15 30       	cpi	r17, 0x05	; 5
 358:	09 f4       	brne	.+2      	; 0x35c <main+0x136>
 35a:	e1 c2       	rjmp	.+1474   	; 0x91e <__stack+0x1f>
 35c:	e5 cf       	rjmp	.-54     	; 0x328 <main+0x102>
 35e:	81 34       	cpi	r24, 0x41	; 65
 360:	31 f5       	brne	.+76     	; 0x3ae <main+0x188>
 362:	ce 01       	movw	r24, r28
 364:	01 96       	adiw	r24, 0x01	; 1
 366:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 36a:	20 ee       	ldi	r18, 0xE0	; 224
 36c:	31 e0       	ldi	r19, 0x01	; 1
 36e:	40 e0       	ldi	r20, 0x00	; 0
 370:	88 e0       	ldi	r24, 0x08	; 8
 372:	f9 01       	movw	r30, r18
 374:	de 01       	movw	r26, r28
 376:	a0 5c       	subi	r26, 0xC0	; 192
 378:	bf 4f       	sbci	r27, 0xFF	; 255
 37a:	74 2f       	mov	r23, r20
 37c:	0e 94 8b 08 	call	0x1116	; 0x1116 <__movmemx_qi>
 380:	40 e0       	ldi	r20, 0x00	; 0
 382:	60 e0       	ldi	r22, 0x00	; 0
 384:	ce 01       	movw	r24, r28
 386:	01 96       	adiw	r24, 0x01	; 1
 388:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 38c:	be 01       	movw	r22, r28
 38e:	60 5c       	subi	r22, 0xC0	; 192
 390:	7f 4f       	sbci	r23, 0xFF	; 255
 392:	ce 01       	movw	r24, r28
 394:	01 96       	adiw	r24, 0x01	; 1
 396:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 39a:	40 e0       	ldi	r20, 0x00	; 0
 39c:	61 e0       	ldi	r22, 0x01	; 1
 39e:	ce 01       	movw	r24, r28
 3a0:	01 96       	adiw	r24, 0x01	; 1
 3a2:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 3a6:	1b ae       	std	Y+59, r1	; 0x3b
 3a8:	f1 2c       	mov	r15, r1
 3aa:	11 e0       	ldi	r17, 0x01	; 1
 3ac:	bd cf       	rjmp	.-134    	; 0x328 <main+0x102>
 3ae:	82 34       	cpi	r24, 0x42	; 66
 3b0:	09 f0       	breq	.+2      	; 0x3b4 <main+0x18e>
 3b2:	ba cf       	rjmp	.-140    	; 0x328 <main+0x102>
 3b4:	ce 01       	movw	r24, r28
 3b6:	01 96       	adiw	r24, 0x01	; 1
 3b8:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 3bc:	28 ee       	ldi	r18, 0xE8	; 232
 3be:	31 e0       	ldi	r19, 0x01	; 1
 3c0:	40 e0       	ldi	r20, 0x00	; 0
 3c2:	88 e0       	ldi	r24, 0x08	; 8
 3c4:	f9 01       	movw	r30, r18
 3c6:	de 01       	movw	r26, r28
 3c8:	a0 5c       	subi	r26, 0xC0	; 192
 3ca:	bf 4f       	sbci	r27, 0xFF	; 255
 3cc:	74 2f       	mov	r23, r20
 3ce:	0e 94 8b 08 	call	0x1116	; 0x1116 <__movmemx_qi>
 3d2:	40 e0       	ldi	r20, 0x00	; 0
 3d4:	60 e0       	ldi	r22, 0x00	; 0
 3d6:	ce 01       	movw	r24, r28
 3d8:	01 96       	adiw	r24, 0x01	; 1
 3da:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 3de:	be 01       	movw	r22, r28
 3e0:	60 5c       	subi	r22, 0xC0	; 192
 3e2:	7f 4f       	sbci	r23, 0xFF	; 255
 3e4:	ce 01       	movw	r24, r28
 3e6:	01 96       	adiw	r24, 0x01	; 1
 3e8:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 3ec:	40 e0       	ldi	r20, 0x00	; 0
 3ee:	61 e0       	ldi	r22, 0x01	; 1
 3f0:	ce 01       	movw	r24, r28
 3f2:	01 96       	adiw	r24, 0x01	; 1
 3f4:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 3f8:	1b ae       	std	Y+59, r1	; 0x3b
 3fa:	f1 2c       	mov	r15, r1
 3fc:	12 e0       	ldi	r17, 0x02	; 2
 3fe:	94 cf       	rjmp	.-216    	; 0x328 <main+0x102>
 400:	83 32       	cpi	r24, 0x23	; 35
 402:	d1 f4       	brne	.+52     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 404:	ce 01       	movw	r24, r28
 406:	01 96       	adiw	r24, 0x01	; 1
 408:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 40c:	be 01       	movw	r22, r28
 40e:	67 5e       	subi	r22, 0xE7	; 231
 410:	7f 4f       	sbci	r23, 0xFF	; 255
 412:	ce 01       	movw	r24, r28
 414:	01 96       	adiw	r24, 0x01	; 1
 416:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 41a:	40 e0       	ldi	r20, 0x00	; 0
 41c:	61 e0       	ldi	r22, 0x01	; 1
 41e:	ce 01       	movw	r24, r28
 420:	01 96       	adiw	r24, 0x01	; 1
 422:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 426:	be 01       	movw	r22, r28
 428:	66 5d       	subi	r22, 0xD6	; 214
 42a:	7f 4f       	sbci	r23, 0xFF	; 255
 42c:	ce 01       	movw	r24, r28
 42e:	01 96       	adiw	r24, 0x01	; 1
 430:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 434:	10 e0       	ldi	r17, 0x00	; 0
 436:	78 cf       	rjmp	.-272    	; 0x328 <main+0x102>
 438:	b3 e0       	ldi	r27, 0x03	; 3
 43a:	bf 15       	cp	r27, r15
 43c:	f8 f0       	brcs	.+62     	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 43e:	01 e0       	ldi	r16, 0x01	; 1
 440:	0f 0d       	add	r16, r15
 442:	eb e3       	ldi	r30, 0x3B	; 59
 444:	f0 e0       	ldi	r31, 0x00	; 0
 446:	ec 0f       	add	r30, r28
 448:	fd 1f       	adc	r31, r29
 44a:	ef 0d       	add	r30, r15
 44c:	f1 1d       	adc	r31, r1
 44e:	80 83       	st	Z, r24
 450:	eb e3       	ldi	r30, 0x3B	; 59
 452:	f0 e0       	ldi	r31, 0x00	; 0
 454:	ec 0f       	add	r30, r28
 456:	fd 1f       	adc	r31, r29
 458:	e0 0f       	add	r30, r16
 45a:	f1 1d       	adc	r31, r1
 45c:	10 82       	st	Z, r1
 45e:	8a e2       	ldi	r24, 0x2A	; 42
 460:	21 96       	adiw	r28, 0x01	; 1
 462:	8f af       	std	Y+63, r24	; 0x3f
 464:	21 97       	sbiw	r28, 0x01	; 1
 466:	22 96       	adiw	r28, 0x02	; 2
 468:	1f ae       	std	Y+63, r1	; 0x3f
 46a:	22 97       	sbiw	r28, 0x02	; 2
 46c:	be 01       	movw	r22, r28
 46e:	60 5c       	subi	r22, 0xC0	; 192
 470:	7f 4f       	sbci	r23, 0xFF	; 255
 472:	ce 01       	movw	r24, r28
 474:	01 96       	adiw	r24, 0x01	; 1
 476:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 47a:	f0 2e       	mov	r15, r16
 47c:	24 e0       	ldi	r18, 0x04	; 4
 47e:	f2 12       	cpse	r15, r18
 480:	53 cf       	rjmp	.-346    	; 0x328 <main+0x102>
 482:	9e 01       	movw	r18, r28
 484:	2c 5e       	subi	r18, 0xEC	; 236
 486:	3f 4f       	sbci	r19, 0xFF	; 255
 488:	40 e8       	ldi	r20, 0x80	; 128
 48a:	be 01       	movw	r22, r28
 48c:	65 5c       	subi	r22, 0xC5	; 197
 48e:	7f 4f       	sbci	r23, 0xFF	; 255
 490:	80 e8       	ldi	r24, 0x80	; 128
 492:	04 e0       	ldi	r16, 0x04	; 4
 494:	10 e0       	ldi	r17, 0x00	; 0
 496:	0e 94 90 06 	call	0xd20	; 0xd20 <memcmp>
 49a:	89 2b       	or	r24, r25
 49c:	11 f5       	brne	.+68     	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
 49e:	ce 01       	movw	r24, r28
 4a0:	01 96       	adiw	r24, 0x01	; 1
 4a2:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 4a6:	20 ef       	ldi	r18, 0xF0	; 240
 4a8:	31 e0       	ldi	r19, 0x01	; 1
 4aa:	40 e0       	ldi	r20, 0x00	; 0
 4ac:	88 e0       	ldi	r24, 0x08	; 8
 4ae:	f9 01       	movw	r30, r18
 4b0:	de 01       	movw	r26, r28
 4b2:	a0 5c       	subi	r26, 0xC0	; 192
 4b4:	bf 4f       	sbci	r27, 0xFF	; 255
 4b6:	74 2f       	mov	r23, r20
 4b8:	0e 94 8b 08 	call	0x1116	; 0x1116 <__movmemx_qi>
 4bc:	40 e0       	ldi	r20, 0x00	; 0
 4be:	60 e0       	ldi	r22, 0x00	; 0
 4c0:	ce 01       	movw	r24, r28
 4c2:	01 96       	adiw	r24, 0x01	; 1
 4c4:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 4c8:	be 01       	movw	r22, r28
 4ca:	60 5c       	subi	r22, 0xC0	; 192
 4cc:	7f 4f       	sbci	r23, 0xFF	; 255
 4ce:	ce 01       	movw	r24, r28
 4d0:	01 96       	adiw	r24, 0x01	; 1
 4d2:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 4d6:	81 e0       	ldi	r24, 0x01	; 1
 4d8:	0e 94 5f 08 	call	0x10be	; 0x10be <leds_set_abierto>
 4dc:	14 e0       	ldi	r17, 0x04	; 4
 4de:	e1 2c       	mov	r14, r1
 4e0:	23 cf       	rjmp	.-442    	; 0x328 <main+0x102>
 4e2:	e3 94       	inc	r14
 4e4:	82 e0       	ldi	r24, 0x02	; 2
 4e6:	8e 15       	cp	r24, r14
 4e8:	10 f5       	brcc	.+68     	; 0x52e <__EEPROM_REGION_LENGTH__+0x12e>
 4ea:	ce 01       	movw	r24, r28
 4ec:	01 96       	adiw	r24, 0x01	; 1
 4ee:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 4f2:	28 ef       	ldi	r18, 0xF8	; 248
 4f4:	31 e0       	ldi	r19, 0x01	; 1
 4f6:	40 e0       	ldi	r20, 0x00	; 0
 4f8:	88 e0       	ldi	r24, 0x08	; 8
 4fa:	f9 01       	movw	r30, r18
 4fc:	de 01       	movw	r26, r28
 4fe:	a0 5c       	subi	r26, 0xC0	; 192
 500:	bf 4f       	sbci	r27, 0xFF	; 255
 502:	74 2f       	mov	r23, r20
 504:	0e 94 8b 08 	call	0x1116	; 0x1116 <__movmemx_qi>
 508:	40 e0       	ldi	r20, 0x00	; 0
 50a:	60 e0       	ldi	r22, 0x00	; 0
 50c:	ce 01       	movw	r24, r28
 50e:	01 96       	adiw	r24, 0x01	; 1
 510:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 514:	be 01       	movw	r22, r28
 516:	60 5c       	subi	r22, 0xC0	; 192
 518:	7f 4f       	sbci	r23, 0xFF	; 255
 51a:	ce 01       	movw	r24, r28
 51c:	01 96       	adiw	r24, 0x01	; 1
 51e:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 522:	0e 94 bc 07 	call	0xf78	; 0xf78 <alarm_start>
 526:	1b ae       	std	Y+59, r1	; 0x3b
 528:	f1 2c       	mov	r15, r1
 52a:	15 e0       	ldi	r17, 0x05	; 5
 52c:	fd ce       	rjmp	.-518    	; 0x328 <main+0x102>
 52e:	ce 01       	movw	r24, r28
 530:	01 96       	adiw	r24, 0x01	; 1
 532:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 536:	20 e0       	ldi	r18, 0x00	; 0
 538:	32 e0       	ldi	r19, 0x02	; 2
 53a:	40 e0       	ldi	r20, 0x00	; 0
 53c:	86 e0       	ldi	r24, 0x06	; 6
 53e:	f9 01       	movw	r30, r18
 540:	de 01       	movw	r26, r28
 542:	a0 5c       	subi	r26, 0xC0	; 192
 544:	bf 4f       	sbci	r27, 0xFF	; 255
 546:	74 2f       	mov	r23, r20
 548:	0e 94 8b 08 	call	0x1116	; 0x1116 <__movmemx_qi>
 54c:	40 e0       	ldi	r20, 0x00	; 0
 54e:	60 e0       	ldi	r22, 0x00	; 0
 550:	ce 01       	movw	r24, r28
 552:	01 96       	adiw	r24, 0x01	; 1
 554:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 558:	be 01       	movw	r22, r28
 55a:	60 5c       	subi	r22, 0xC0	; 192
 55c:	7f 4f       	sbci	r23, 0xFF	; 255
 55e:	ce 01       	movw	r24, r28
 560:	01 96       	adiw	r24, 0x01	; 1
 562:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 566:	9f ef       	ldi	r25, 0xFF	; 255
 568:	a3 ed       	ldi	r26, 0xD3	; 211
 56a:	b0 e3       	ldi	r27, 0x30	; 48
 56c:	91 50       	subi	r25, 0x01	; 1
 56e:	a0 40       	sbci	r26, 0x00	; 0
 570:	b0 40       	sbci	r27, 0x00	; 0
 572:	e1 f7       	brne	.-8      	; 0x56c <__EEPROM_REGION_LENGTH__+0x16c>
 574:	00 c0       	rjmp	.+0      	; 0x576 <__EEPROM_REGION_LENGTH__+0x176>
 576:	00 00       	nop
 578:	ce 01       	movw	r24, r28
 57a:	01 96       	adiw	r24, 0x01	; 1
 57c:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 580:	be 01       	movw	r22, r28
 582:	67 5e       	subi	r22, 0xE7	; 231
 584:	7f 4f       	sbci	r23, 0xFF	; 255
 586:	ce 01       	movw	r24, r28
 588:	01 96       	adiw	r24, 0x01	; 1
 58a:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 58e:	40 e0       	ldi	r20, 0x00	; 0
 590:	61 e0       	ldi	r22, 0x01	; 1
 592:	ce 01       	movw	r24, r28
 594:	01 96       	adiw	r24, 0x01	; 1
 596:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 59a:	be 01       	movw	r22, r28
 59c:	66 5d       	subi	r22, 0xD6	; 214
 59e:	7f 4f       	sbci	r23, 0xFF	; 255
 5a0:	ce 01       	movw	r24, r28
 5a2:	01 96       	adiw	r24, 0x01	; 1
 5a4:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 5a8:	1b ae       	std	Y+59, r1	; 0x3b
 5aa:	f1 2c       	mov	r15, r1
 5ac:	10 e0       	ldi	r17, 0x00	; 0
 5ae:	bc ce       	rjmp	.-648    	; 0x328 <main+0x102>
 5b0:	83 32       	cpi	r24, 0x23	; 35
 5b2:	09 f0       	breq	.+2      	; 0x5b6 <__EEPROM_REGION_LENGTH__+0x1b6>
 5b4:	b9 ce       	rjmp	.-654    	; 0x328 <main+0x102>
 5b6:	ce 01       	movw	r24, r28
 5b8:	01 96       	adiw	r24, 0x01	; 1
 5ba:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 5be:	26 e0       	ldi	r18, 0x06	; 6
 5c0:	32 e0       	ldi	r19, 0x02	; 2
 5c2:	40 e0       	ldi	r20, 0x00	; 0
 5c4:	88 e0       	ldi	r24, 0x08	; 8
 5c6:	f9 01       	movw	r30, r18
 5c8:	de 01       	movw	r26, r28
 5ca:	a0 5c       	subi	r26, 0xC0	; 192
 5cc:	bf 4f       	sbci	r27, 0xFF	; 255
 5ce:	74 2f       	mov	r23, r20
 5d0:	0e 94 8b 08 	call	0x1116	; 0x1116 <__movmemx_qi>
 5d4:	80 e0       	ldi	r24, 0x00	; 0
 5d6:	0e 94 5f 08 	call	0x10be	; 0x10be <leds_set_abierto>
 5da:	40 e0       	ldi	r20, 0x00	; 0
 5dc:	60 e0       	ldi	r22, 0x00	; 0
 5de:	ce 01       	movw	r24, r28
 5e0:	01 96       	adiw	r24, 0x01	; 1
 5e2:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 5e6:	be 01       	movw	r22, r28
 5e8:	60 5c       	subi	r22, 0xC0	; 192
 5ea:	7f 4f       	sbci	r23, 0xFF	; 255
 5ec:	ce 01       	movw	r24, r28
 5ee:	01 96       	adiw	r24, 0x01	; 1
 5f0:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 5f4:	2f ef       	ldi	r18, 0xFF	; 255
 5f6:	8d e2       	ldi	r24, 0x2D	; 45
 5f8:	92 e2       	ldi	r25, 0x22	; 34
 5fa:	21 50       	subi	r18, 0x01	; 1
 5fc:	80 40       	sbci	r24, 0x00	; 0
 5fe:	90 40       	sbci	r25, 0x00	; 0
 600:	e1 f7       	brne	.-8      	; 0x5fa <__EEPROM_REGION_LENGTH__+0x1fa>
 602:	00 c0       	rjmp	.+0      	; 0x604 <__EEPROM_REGION_LENGTH__+0x204>
 604:	00 00       	nop
 606:	ce 01       	movw	r24, r28
 608:	01 96       	adiw	r24, 0x01	; 1
 60a:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 60e:	be 01       	movw	r22, r28
 610:	67 5e       	subi	r22, 0xE7	; 231
 612:	7f 4f       	sbci	r23, 0xFF	; 255
 614:	ce 01       	movw	r24, r28
 616:	01 96       	adiw	r24, 0x01	; 1
 618:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 61c:	40 e0       	ldi	r20, 0x00	; 0
 61e:	61 e0       	ldi	r22, 0x01	; 1
 620:	ce 01       	movw	r24, r28
 622:	01 96       	adiw	r24, 0x01	; 1
 624:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 628:	be 01       	movw	r22, r28
 62a:	66 5d       	subi	r22, 0xD6	; 214
 62c:	7f 4f       	sbci	r23, 0xFF	; 255
 62e:	ce 01       	movw	r24, r28
 630:	01 96       	adiw	r24, 0x01	; 1
 632:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 636:	1b ae       	std	Y+59, r1	; 0x3b
 638:	f1 2c       	mov	r15, r1
 63a:	10 e0       	ldi	r17, 0x00	; 0
 63c:	75 ce       	rjmp	.-790    	; 0x328 <main+0x102>
 63e:	83 32       	cpi	r24, 0x23	; 35
 640:	d1 f4       	brne	.+52     	; 0x676 <__EEPROM_REGION_LENGTH__+0x276>
 642:	ce 01       	movw	r24, r28
 644:	01 96       	adiw	r24, 0x01	; 1
 646:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 64a:	be 01       	movw	r22, r28
 64c:	67 5e       	subi	r22, 0xE7	; 231
 64e:	7f 4f       	sbci	r23, 0xFF	; 255
 650:	ce 01       	movw	r24, r28
 652:	01 96       	adiw	r24, 0x01	; 1
 654:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 658:	40 e0       	ldi	r20, 0x00	; 0
 65a:	61 e0       	ldi	r22, 0x01	; 1
 65c:	ce 01       	movw	r24, r28
 65e:	01 96       	adiw	r24, 0x01	; 1
 660:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 664:	be 01       	movw	r22, r28
 666:	66 5d       	subi	r22, 0xD6	; 214
 668:	7f 4f       	sbci	r23, 0xFF	; 255
 66a:	ce 01       	movw	r24, r28
 66c:	01 96       	adiw	r24, 0x01	; 1
 66e:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 672:	10 e0       	ldi	r17, 0x00	; 0
 674:	59 ce       	rjmp	.-846    	; 0x328 <main+0x102>
 676:	a3 e0       	ldi	r26, 0x03	; 3
 678:	af 15       	cp	r26, r15
 67a:	f8 f0       	brcs	.+62     	; 0x6ba <__EEPROM_REGION_LENGTH__+0x2ba>
 67c:	01 e0       	ldi	r16, 0x01	; 1
 67e:	0f 0d       	add	r16, r15
 680:	eb e3       	ldi	r30, 0x3B	; 59
 682:	f0 e0       	ldi	r31, 0x00	; 0
 684:	ec 0f       	add	r30, r28
 686:	fd 1f       	adc	r31, r29
 688:	ef 0d       	add	r30, r15
 68a:	f1 1d       	adc	r31, r1
 68c:	80 83       	st	Z, r24
 68e:	eb e3       	ldi	r30, 0x3B	; 59
 690:	f0 e0       	ldi	r31, 0x00	; 0
 692:	ec 0f       	add	r30, r28
 694:	fd 1f       	adc	r31, r29
 696:	e0 0f       	add	r30, r16
 698:	f1 1d       	adc	r31, r1
 69a:	10 82       	st	Z, r1
 69c:	8a e2       	ldi	r24, 0x2A	; 42
 69e:	21 96       	adiw	r28, 0x01	; 1
 6a0:	8f af       	std	Y+63, r24	; 0x3f
 6a2:	21 97       	sbiw	r28, 0x01	; 1
 6a4:	22 96       	adiw	r28, 0x02	; 2
 6a6:	1f ae       	std	Y+63, r1	; 0x3f
 6a8:	22 97       	sbiw	r28, 0x02	; 2
 6aa:	be 01       	movw	r22, r28
 6ac:	60 5c       	subi	r22, 0xC0	; 192
 6ae:	7f 4f       	sbci	r23, 0xFF	; 255
 6b0:	ce 01       	movw	r24, r28
 6b2:	01 96       	adiw	r24, 0x01	; 1
 6b4:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 6b8:	f0 2e       	mov	r15, r16
 6ba:	b4 e0       	ldi	r27, 0x04	; 4
 6bc:	fb 12       	cpse	r15, r27
 6be:	34 ce       	rjmp	.-920    	; 0x328 <main+0x102>
 6c0:	9e 01       	movw	r18, r28
 6c2:	2c 5e       	subi	r18, 0xEC	; 236
 6c4:	3f 4f       	sbci	r19, 0xFF	; 255
 6c6:	40 e8       	ldi	r20, 0x80	; 128
 6c8:	be 01       	movw	r22, r28
 6ca:	65 5c       	subi	r22, 0xC5	; 197
 6cc:	7f 4f       	sbci	r23, 0xFF	; 255
 6ce:	80 e8       	ldi	r24, 0x80	; 128
 6d0:	04 e0       	ldi	r16, 0x04	; 4
 6d2:	10 e0       	ldi	r17, 0x00	; 0
 6d4:	0e 94 90 06 	call	0xd20	; 0xd20 <memcmp>
 6d8:	89 2b       	or	r24, r25
 6da:	39 f5       	brne	.+78     	; 0x72a <__EEPROM_REGION_LENGTH__+0x32a>
 6dc:	ce 01       	movw	r24, r28
 6de:	01 96       	adiw	r24, 0x01	; 1
 6e0:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 6e4:	2e e0       	ldi	r18, 0x0E	; 14
 6e6:	32 e0       	ldi	r19, 0x02	; 2
 6e8:	40 e0       	ldi	r20, 0x00	; 0
 6ea:	87 e0       	ldi	r24, 0x07	; 7
 6ec:	f9 01       	movw	r30, r18
 6ee:	de 01       	movw	r26, r28
 6f0:	a0 5c       	subi	r26, 0xC0	; 192
 6f2:	bf 4f       	sbci	r27, 0xFF	; 255
 6f4:	74 2f       	mov	r23, r20
 6f6:	0e 94 8b 08 	call	0x1116	; 0x1116 <__movmemx_qi>
 6fa:	40 e0       	ldi	r20, 0x00	; 0
 6fc:	60 e0       	ldi	r22, 0x00	; 0
 6fe:	ce 01       	movw	r24, r28
 700:	01 96       	adiw	r24, 0x01	; 1
 702:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 706:	be 01       	movw	r22, r28
 708:	60 5c       	subi	r22, 0xC0	; 192
 70a:	7f 4f       	sbci	r23, 0xFF	; 255
 70c:	ce 01       	movw	r24, r28
 70e:	01 96       	adiw	r24, 0x01	; 1
 710:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 714:	40 e0       	ldi	r20, 0x00	; 0
 716:	61 e0       	ldi	r22, 0x01	; 1
 718:	ce 01       	movw	r24, r28
 71a:	01 96       	adiw	r24, 0x01	; 1
 71c:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 720:	1b ae       	std	Y+59, r1	; 0x3b
 722:	f1 2c       	mov	r15, r1
 724:	13 e0       	ldi	r17, 0x03	; 3
 726:	e1 2c       	mov	r14, r1
 728:	ff cd       	rjmp	.-1026   	; 0x328 <main+0x102>
 72a:	e3 94       	inc	r14
 72c:	22 e0       	ldi	r18, 0x02	; 2
 72e:	2e 15       	cp	r18, r14
 730:	10 f5       	brcc	.+68     	; 0x776 <__EEPROM_REGION_LENGTH__+0x376>
 732:	ce 01       	movw	r24, r28
 734:	01 96       	adiw	r24, 0x01	; 1
 736:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 73a:	28 ef       	ldi	r18, 0xF8	; 248
 73c:	31 e0       	ldi	r19, 0x01	; 1
 73e:	40 e0       	ldi	r20, 0x00	; 0
 740:	88 e0       	ldi	r24, 0x08	; 8
 742:	f9 01       	movw	r30, r18
 744:	de 01       	movw	r26, r28
 746:	a0 5c       	subi	r26, 0xC0	; 192
 748:	bf 4f       	sbci	r27, 0xFF	; 255
 74a:	74 2f       	mov	r23, r20
 74c:	0e 94 8b 08 	call	0x1116	; 0x1116 <__movmemx_qi>
 750:	40 e0       	ldi	r20, 0x00	; 0
 752:	60 e0       	ldi	r22, 0x00	; 0
 754:	ce 01       	movw	r24, r28
 756:	01 96       	adiw	r24, 0x01	; 1
 758:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 75c:	be 01       	movw	r22, r28
 75e:	60 5c       	subi	r22, 0xC0	; 192
 760:	7f 4f       	sbci	r23, 0xFF	; 255
 762:	ce 01       	movw	r24, r28
 764:	01 96       	adiw	r24, 0x01	; 1
 766:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 76a:	0e 94 bc 07 	call	0xf78	; 0xf78 <alarm_start>
 76e:	1b ae       	std	Y+59, r1	; 0x3b
 770:	f1 2c       	mov	r15, r1
 772:	15 e0       	ldi	r17, 0x05	; 5
 774:	d9 cd       	rjmp	.-1102   	; 0x328 <main+0x102>
 776:	ce 01       	movw	r24, r28
 778:	01 96       	adiw	r24, 0x01	; 1
 77a:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 77e:	20 e0       	ldi	r18, 0x00	; 0
 780:	32 e0       	ldi	r19, 0x02	; 2
 782:	40 e0       	ldi	r20, 0x00	; 0
 784:	86 e0       	ldi	r24, 0x06	; 6
 786:	f9 01       	movw	r30, r18
 788:	de 01       	movw	r26, r28
 78a:	a0 5c       	subi	r26, 0xC0	; 192
 78c:	bf 4f       	sbci	r27, 0xFF	; 255
 78e:	74 2f       	mov	r23, r20
 790:	0e 94 8b 08 	call	0x1116	; 0x1116 <__movmemx_qi>
 794:	40 e0       	ldi	r20, 0x00	; 0
 796:	60 e0       	ldi	r22, 0x00	; 0
 798:	ce 01       	movw	r24, r28
 79a:	01 96       	adiw	r24, 0x01	; 1
 79c:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 7a0:	be 01       	movw	r22, r28
 7a2:	60 5c       	subi	r22, 0xC0	; 192
 7a4:	7f 4f       	sbci	r23, 0xFF	; 255
 7a6:	ce 01       	movw	r24, r28
 7a8:	01 96       	adiw	r24, 0x01	; 1
 7aa:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 7ae:	8f ef       	ldi	r24, 0xFF	; 255
 7b0:	93 ed       	ldi	r25, 0xD3	; 211
 7b2:	a0 e3       	ldi	r26, 0x30	; 48
 7b4:	81 50       	subi	r24, 0x01	; 1
 7b6:	90 40       	sbci	r25, 0x00	; 0
 7b8:	a0 40       	sbci	r26, 0x00	; 0
 7ba:	e1 f7       	brne	.-8      	; 0x7b4 <__EEPROM_REGION_LENGTH__+0x3b4>
 7bc:	00 c0       	rjmp	.+0      	; 0x7be <__EEPROM_REGION_LENGTH__+0x3be>
 7be:	00 00       	nop
 7c0:	ce 01       	movw	r24, r28
 7c2:	01 96       	adiw	r24, 0x01	; 1
 7c4:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 7c8:	be 01       	movw	r22, r28
 7ca:	67 5e       	subi	r22, 0xE7	; 231
 7cc:	7f 4f       	sbci	r23, 0xFF	; 255
 7ce:	ce 01       	movw	r24, r28
 7d0:	01 96       	adiw	r24, 0x01	; 1
 7d2:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 7d6:	40 e0       	ldi	r20, 0x00	; 0
 7d8:	61 e0       	ldi	r22, 0x01	; 1
 7da:	ce 01       	movw	r24, r28
 7dc:	01 96       	adiw	r24, 0x01	; 1
 7de:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 7e2:	be 01       	movw	r22, r28
 7e4:	66 5d       	subi	r22, 0xD6	; 214
 7e6:	7f 4f       	sbci	r23, 0xFF	; 255
 7e8:	ce 01       	movw	r24, r28
 7ea:	01 96       	adiw	r24, 0x01	; 1
 7ec:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 7f0:	1b ae       	std	Y+59, r1	; 0x3b
 7f2:	f1 2c       	mov	r15, r1
 7f4:	10 e0       	ldi	r17, 0x00	; 0
 7f6:	98 cd       	rjmp	.-1232   	; 0x328 <main+0x102>
 7f8:	83 32       	cpi	r24, 0x23	; 35
 7fa:	d1 f4       	brne	.+52     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
 7fc:	ce 01       	movw	r24, r28
 7fe:	01 96       	adiw	r24, 0x01	; 1
 800:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 804:	be 01       	movw	r22, r28
 806:	67 5e       	subi	r22, 0xE7	; 231
 808:	7f 4f       	sbci	r23, 0xFF	; 255
 80a:	ce 01       	movw	r24, r28
 80c:	01 96       	adiw	r24, 0x01	; 1
 80e:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 812:	40 e0       	ldi	r20, 0x00	; 0
 814:	61 e0       	ldi	r22, 0x01	; 1
 816:	ce 01       	movw	r24, r28
 818:	01 96       	adiw	r24, 0x01	; 1
 81a:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 81e:	be 01       	movw	r22, r28
 820:	66 5d       	subi	r22, 0xD6	; 214
 822:	7f 4f       	sbci	r23, 0xFF	; 255
 824:	ce 01       	movw	r24, r28
 826:	01 96       	adiw	r24, 0x01	; 1
 828:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 82c:	10 e0       	ldi	r17, 0x00	; 0
 82e:	7c cd       	rjmp	.-1288   	; 0x328 <main+0x102>
 830:	b3 e0       	ldi	r27, 0x03	; 3
 832:	bf 15       	cp	r27, r15
 834:	f8 f0       	brcs	.+62     	; 0x874 <__DATA_REGION_LENGTH__+0x74>
 836:	01 e0       	ldi	r16, 0x01	; 1
 838:	0f 0d       	add	r16, r15
 83a:	eb e3       	ldi	r30, 0x3B	; 59
 83c:	f0 e0       	ldi	r31, 0x00	; 0
 83e:	ec 0f       	add	r30, r28
 840:	fd 1f       	adc	r31, r29
 842:	ef 0d       	add	r30, r15
 844:	f1 1d       	adc	r31, r1
 846:	80 83       	st	Z, r24
 848:	eb e3       	ldi	r30, 0x3B	; 59
 84a:	f0 e0       	ldi	r31, 0x00	; 0
 84c:	ec 0f       	add	r30, r28
 84e:	fd 1f       	adc	r31, r29
 850:	e0 0f       	add	r30, r16
 852:	f1 1d       	adc	r31, r1
 854:	10 82       	st	Z, r1
 856:	8a e2       	ldi	r24, 0x2A	; 42
 858:	21 96       	adiw	r28, 0x01	; 1
 85a:	8f af       	std	Y+63, r24	; 0x3f
 85c:	21 97       	sbiw	r28, 0x01	; 1
 85e:	22 96       	adiw	r28, 0x02	; 2
 860:	1f ae       	std	Y+63, r1	; 0x3f
 862:	22 97       	sbiw	r28, 0x02	; 2
 864:	be 01       	movw	r22, r28
 866:	60 5c       	subi	r22, 0xC0	; 192
 868:	7f 4f       	sbci	r23, 0xFF	; 255
 86a:	ce 01       	movw	r24, r28
 86c:	01 96       	adiw	r24, 0x01	; 1
 86e:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 872:	f0 2e       	mov	r15, r16
 874:	24 e0       	ldi	r18, 0x04	; 4
 876:	f2 12       	cpse	r15, r18
 878:	57 cd       	rjmp	.-1362   	; 0x328 <main+0x102>
 87a:	3e 01       	movw	r6, r28
 87c:	8b e3       	ldi	r24, 0x3B	; 59
 87e:	68 0e       	add	r6, r24
 880:	71 1c       	adc	r7, r1
 882:	90 e8       	ldi	r25, 0x80	; 128
 884:	89 2e       	mov	r8, r25
 886:	88 2d       	mov	r24, r8
 888:	b3 01       	movw	r22, r6
 88a:	0e 94 ba 06 	call	0xd74	; 0xd74 <guardar_password_eeprom>
 88e:	24 e0       	ldi	r18, 0x04	; 4
 890:	30 e0       	ldi	r19, 0x00	; 0
 892:	68 2d       	mov	r22, r8
 894:	a3 01       	movw	r20, r6
 896:	ce 01       	movw	r24, r28
 898:	44 96       	adiw	r24, 0x14	; 20
 89a:	0e 94 d6 07 	call	0xfac	; 0xfac <memcpy>
 89e:	18 8e       	std	Y+24, r1	; 0x18
 8a0:	ce 01       	movw	r24, r28
 8a2:	01 96       	adiw	r24, 0x01	; 1
 8a4:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 8a8:	8f e4       	ldi	r24, 0x4F	; 79
 8aa:	9b e4       	ldi	r25, 0x4B	; 75
 8ac:	22 96       	adiw	r28, 0x02	; 2
 8ae:	9f af       	std	Y+63, r25	; 0x3f
 8b0:	8e af       	std	Y+62, r24	; 0x3e
 8b2:	22 97       	sbiw	r28, 0x02	; 2
 8b4:	23 96       	adiw	r28, 0x03	; 3
 8b6:	1f ae       	std	Y+63, r1	; 0x3f
 8b8:	23 97       	sbiw	r28, 0x03	; 3
 8ba:	40 e0       	ldi	r20, 0x00	; 0
 8bc:	60 e0       	ldi	r22, 0x00	; 0
 8be:	ce 01       	movw	r24, r28
 8c0:	01 96       	adiw	r24, 0x01	; 1
 8c2:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 8c6:	be 01       	movw	r22, r28
 8c8:	60 5c       	subi	r22, 0xC0	; 192
 8ca:	7f 4f       	sbci	r23, 0xFF	; 255
 8cc:	ce 01       	movw	r24, r28
 8ce:	01 96       	adiw	r24, 0x01	; 1
 8d0:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 8d4:	af ef       	ldi	r26, 0xFF	; 255
 8d6:	b3 ed       	ldi	r27, 0xD3	; 211
 8d8:	20 e3       	ldi	r18, 0x30	; 48
 8da:	a1 50       	subi	r26, 0x01	; 1
 8dc:	b0 40       	sbci	r27, 0x00	; 0
 8de:	20 40       	sbci	r18, 0x00	; 0
 8e0:	e1 f7       	brne	.-8      	; 0x8da <__DATA_REGION_LENGTH__+0xda>
 8e2:	00 c0       	rjmp	.+0      	; 0x8e4 <__DATA_REGION_LENGTH__+0xe4>
 8e4:	00 00       	nop
 8e6:	ce 01       	movw	r24, r28
 8e8:	01 96       	adiw	r24, 0x01	; 1
 8ea:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 8ee:	be 01       	movw	r22, r28
 8f0:	67 5e       	subi	r22, 0xE7	; 231
 8f2:	7f 4f       	sbci	r23, 0xFF	; 255
 8f4:	ce 01       	movw	r24, r28
 8f6:	01 96       	adiw	r24, 0x01	; 1
 8f8:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 8fc:	40 e0       	ldi	r20, 0x00	; 0
 8fe:	61 e0       	ldi	r22, 0x01	; 1
 900:	ce 01       	movw	r24, r28
 902:	01 96       	adiw	r24, 0x01	; 1
 904:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 908:	be 01       	movw	r22, r28
 90a:	66 5d       	subi	r22, 0xD6	; 214
 90c:	7f 4f       	sbci	r23, 0xFF	; 255
 90e:	ce 01       	movw	r24, r28
 910:	01 96       	adiw	r24, 0x01	; 1
 912:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 916:	1b ae       	std	Y+59, r1	; 0x3b
 918:	f1 2c       	mov	r15, r1
 91a:	10 e0       	ldi	r17, 0x00	; 0
 91c:	05 cd       	rjmp	.-1526   	; 0x328 <main+0x102>
 91e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 922:	81 11       	cpse	r24, r1
 924:	01 cd       	rjmp	.-1534   	; 0x328 <main+0x102>
 926:	ce 01       	movw	r24, r28
 928:	01 96       	adiw	r24, 0x01	; 1
 92a:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 92e:	26 e0       	ldi	r18, 0x06	; 6
 930:	32 e0       	ldi	r19, 0x02	; 2
 932:	40 e0       	ldi	r20, 0x00	; 0
 934:	88 e0       	ldi	r24, 0x08	; 8
 936:	f9 01       	movw	r30, r18
 938:	de 01       	movw	r26, r28
 93a:	a0 5c       	subi	r26, 0xC0	; 192
 93c:	bf 4f       	sbci	r27, 0xFF	; 255
 93e:	74 2f       	mov	r23, r20
 940:	0e 94 8b 08 	call	0x1116	; 0x1116 <__movmemx_qi>
 944:	40 e0       	ldi	r20, 0x00	; 0
 946:	60 e0       	ldi	r22, 0x00	; 0
 948:	ce 01       	movw	r24, r28
 94a:	01 96       	adiw	r24, 0x01	; 1
 94c:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 950:	be 01       	movw	r22, r28
 952:	60 5c       	subi	r22, 0xC0	; 192
 954:	7f 4f       	sbci	r23, 0xFF	; 255
 956:	ce 01       	movw	r24, r28
 958:	01 96       	adiw	r24, 0x01	; 1
 95a:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 95e:	8f ef       	ldi	r24, 0xFF	; 255
 960:	9d e2       	ldi	r25, 0x2D	; 45
 962:	a2 e2       	ldi	r26, 0x22	; 34
 964:	81 50       	subi	r24, 0x01	; 1
 966:	90 40       	sbci	r25, 0x00	; 0
 968:	a0 40       	sbci	r26, 0x00	; 0
 96a:	e1 f7       	brne	.-8      	; 0x964 <__stack+0x65>
 96c:	00 c0       	rjmp	.+0      	; 0x96e <__stack+0x6f>
 96e:	00 00       	nop
 970:	ce 01       	movw	r24, r28
 972:	01 96       	adiw	r24, 0x01	; 1
 974:	0e 94 04 08 	call	0x1008	; 0x1008 <lq_clear>
 978:	be 01       	movw	r22, r28
 97a:	67 5e       	subi	r22, 0xE7	; 231
 97c:	7f 4f       	sbci	r23, 0xFF	; 255
 97e:	ce 01       	movw	r24, r28
 980:	01 96       	adiw	r24, 0x01	; 1
 982:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 986:	40 e0       	ldi	r20, 0x00	; 0
 988:	61 e0       	ldi	r22, 0x01	; 1
 98a:	ce 01       	movw	r24, r28
 98c:	01 96       	adiw	r24, 0x01	; 1
 98e:	0e 94 27 07 	call	0xe4e	; 0xe4e <lq_setCursor>
 992:	be 01       	movw	r22, r28
 994:	66 5d       	subi	r22, 0xD6	; 214
 996:	7f 4f       	sbci	r23, 0xFF	; 255
 998:	ce 01       	movw	r24, r28
 99a:	01 96       	adiw	r24, 0x01	; 1
 99c:	0e 94 ef 07 	call	0xfde	; 0xfde <lq_print>
 9a0:	1b ae       	std	Y+59, r1	; 0x3b
 9a2:	f1 2c       	mov	r15, r1
 9a4:	10 e0       	ldi	r17, 0x00	; 0
 9a6:	e1 2c       	mov	r14, r1
 9a8:	bf cc       	rjmp	.-1666   	; 0x328 <main+0x102>

Disassembly of section .text.__vector_14:

00000dc0 <__vector_14>:
 dc0:	1f 92       	push	r1
 dc2:	0f 92       	push	r0
 dc4:	0f b6       	in	r0, 0x3f	; 63
 dc6:	0f 92       	push	r0
 dc8:	11 24       	eor	r1, r1
 dca:	8f 93       	push	r24
 dcc:	9f 93       	push	r25
 dce:	af 93       	push	r26
 dd0:	bf 93       	push	r27
 dd2:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <millis>
 dd6:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <millis+0x1>
 dda:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <millis+0x2>
 dde:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <millis+0x3>
 de2:	01 96       	adiw	r24, 0x01	; 1
 de4:	a1 1d       	adc	r26, r1
 de6:	b1 1d       	adc	r27, r1
 de8:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <millis>
 dec:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <millis+0x1>
 df0:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <millis+0x2>
 df4:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <millis+0x3>
 df8:	bf 91       	pop	r27
 dfa:	af 91       	pop	r26
 dfc:	9f 91       	pop	r25
 dfe:	8f 91       	pop	r24
 e00:	0f 90       	pop	r0
 e02:	0f be       	out	0x3f, r0	; 63
 e04:	0f 90       	pop	r0
 e06:	1f 90       	pop	r1
 e08:	18 95       	reti

Disassembly of section .text.libgcc:

00001116 <__movmemx_qi>:
    1116:	99 27       	eor	r25, r25

00001118 <__movmemx_hi>:
    1118:	77 fd       	sbrc	r23, 7
    111a:	05 c0       	rjmp	.+10     	; 0x1126 <__movmemx_hi+0xe>
    111c:	05 90       	lpm	r0, Z+
    111e:	0d 92       	st	X+, r0
    1120:	01 97       	sbiw	r24, 0x01	; 1
    1122:	e1 f7       	brne	.-8      	; 0x111c <__movmemx_hi+0x4>
    1124:	08 95       	ret
    1126:	01 90       	ld	r0, Z+
    1128:	0d 92       	st	X+, r0
    112a:	01 97       	sbiw	r24, 0x01	; 1
    112c:	e1 f7       	brne	.-8      	; 0x1126 <__movmemx_hi+0xe>
    112e:	08 95       	ret

Disassembly of section .text.__dummy_fini:

000011f4 <_fini>:
    11f4:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000011f6 <__funcs_on_exit>:
    11f6:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000011f8 <__simulator_exit>:
    11f8:	08 95       	ret

Disassembly of section .text.exit:

00001146 <exit>:
    1146:	ec 01       	movw	r28, r24
    1148:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <__funcs_on_exit>
    114c:	0e 94 fa 08 	call	0x11f4	; 0x11f4 <_fini>
    1150:	ce 01       	movw	r24, r28
    1152:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <__simulator_exit>
    1156:	ce 01       	movw	r24, r28
    1158:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <_Exit>

Disassembly of section .text.memcpy:

00000fac <memcpy>:
 fac:	cf 92       	push	r12
 fae:	df 92       	push	r13
 fb0:	ef 92       	push	r14
 fb2:	6a 01       	movw	r12, r20
 fb4:	e6 2e       	mov	r14, r22
 fb6:	dc 01       	movw	r26, r24
 fb8:	28 0f       	add	r18, r24
 fba:	39 1f       	adc	r19, r25
 fbc:	a2 17       	cp	r26, r18
 fbe:	b3 07       	cpc	r27, r19
 fc0:	51 f0       	breq	.+20     	; 0xfd6 <memcpy+0x2a>
 fc2:	f6 01       	movw	r30, r12
 fc4:	44 91       	lpm	r20, Z
 fc6:	e7 fc       	sbrc	r14, 7
 fc8:	40 81       	ld	r20, Z
 fca:	4d 93       	st	X+, r20
 fcc:	4f ef       	ldi	r20, 0xFF	; 255
 fce:	c4 1a       	sub	r12, r20
 fd0:	d4 0a       	sbc	r13, r20
 fd2:	e4 0a       	sbc	r14, r20
 fd4:	f3 cf       	rjmp	.-26     	; 0xfbc <memcpy+0x10>
 fd6:	ef 90       	pop	r14
 fd8:	df 90       	pop	r13
 fda:	cf 90       	pop	r12
 fdc:	08 95       	ret

Disassembly of section .text.memcmp:

00000d20 <memcmp>:
 d20:	cf 92       	push	r12
 d22:	df 92       	push	r13
 d24:	ef 92       	push	r14
 d26:	0f 93       	push	r16
 d28:	1f 93       	push	r17
 d2a:	6b 01       	movw	r12, r22
 d2c:	e8 2e       	mov	r14, r24
 d2e:	01 15       	cp	r16, r1
 d30:	11 05       	cpc	r17, r1
 d32:	a1 f0       	breq	.+40     	; 0xd5c <memcmp+0x3c>
 d34:	f6 01       	movw	r30, r12
 d36:	84 91       	lpm	r24, Z
 d38:	e7 fc       	sbrc	r14, 7
 d3a:	80 81       	ld	r24, Z
 d3c:	f9 01       	movw	r30, r18
 d3e:	54 91       	lpm	r21, Z
 d40:	47 fd       	sbrc	r20, 7
 d42:	50 81       	ld	r21, Z
 d44:	85 13       	cpse	r24, r21
 d46:	0d c0       	rjmp	.+26     	; 0xd62 <memcmp+0x42>
 d48:	01 50       	subi	r16, 0x01	; 1
 d4a:	11 09       	sbc	r17, r1
 d4c:	8f ef       	ldi	r24, 0xFF	; 255
 d4e:	c8 1a       	sub	r12, r24
 d50:	d8 0a       	sbc	r13, r24
 d52:	e8 0a       	sbc	r14, r24
 d54:	2f 5f       	subi	r18, 0xFF	; 255
 d56:	3f 4f       	sbci	r19, 0xFF	; 255
 d58:	4f 4f       	sbci	r20, 0xFF	; 255
 d5a:	e9 cf       	rjmp	.-46     	; 0xd2e <memcmp+0xe>
 d5c:	80 e0       	ldi	r24, 0x00	; 0
 d5e:	90 e0       	ldi	r25, 0x00	; 0
 d60:	03 c0       	rjmp	.+6      	; 0xd68 <memcmp+0x48>
 d62:	90 e0       	ldi	r25, 0x00	; 0
 d64:	85 1b       	sub	r24, r21
 d66:	91 09       	sbc	r25, r1
 d68:	1f 91       	pop	r17
 d6a:	0f 91       	pop	r16
 d6c:	ef 90       	pop	r14
 d6e:	df 90       	pop	r13
 d70:	cf 90       	pop	r12
 d72:	08 95       	ret

Disassembly of section .text._Exit:

000011f0 <_Exit>:
    11f0:	0e 94 5f 00 	call	0xbe	; 0xbe <_exit>

Disassembly of section .text.avrlibc:

00001054 <eeprom_read_block>:
    1054:	ba 01       	movw	r22, r20
    1056:	a9 01       	movw	r20, r18
    1058:	dc 01       	movw	r26, r24
    105a:	cb 01       	movw	r24, r22

0000105c <eeprom_read_blraw>:
    105c:	fc 01       	movw	r30, r24
    105e:	f9 99       	sbic	0x1f, 1	; 31
    1060:	fe cf       	rjmp	.-4      	; 0x105e <eeprom_read_blraw+0x2>
    1062:	06 c0       	rjmp	.+12     	; 0x1070 <eeprom_read_blraw+0x14>
    1064:	f2 bd       	out	0x22, r31	; 34
    1066:	e1 bd       	out	0x21, r30	; 33
    1068:	f8 9a       	sbi	0x1f, 0	; 31
    106a:	31 96       	adiw	r30, 0x01	; 1
    106c:	00 b4       	in	r0, 0x20	; 32
    106e:	0d 92       	st	X+, r0
    1070:	41 50       	subi	r20, 0x01	; 1
    1072:	50 40       	sbci	r21, 0x00	; 0
    1074:	b8 f7       	brcc	.-18     	; 0x1064 <eeprom_read_blraw+0x8>
    1076:	08 95       	ret

Disassembly of section .text.avrlibc:

00000e0a <eeprom_update_block>:
 e0a:	cf 92       	push	r12
 e0c:	df 92       	push	r13
 e0e:	ef 92       	push	r14
 e10:	21 50       	subi	r18, 0x01	; 1
 e12:	31 09       	sbc	r19, r1
 e14:	c0 f0       	brcs	.+48     	; 0xe46 <eeprom_update_block+0x3c>
 e16:	6b 01       	movw	r12, r22
 e18:	e8 2e       	mov	r14, r24
 e1a:	c2 0e       	add	r12, r18
 e1c:	d3 1e       	adc	r13, r19
 e1e:	e1 1c       	adc	r14, r1
 e20:	ca 01       	movw	r24, r20
 e22:	82 0f       	add	r24, r18
 e24:	93 1f       	adc	r25, r19
 e26:	42 2f       	mov	r20, r18
 e28:	73 2f       	mov	r23, r19
 e2a:	f6 01       	movw	r30, r12
 e2c:	5e 2d       	mov	r21, r14
 e2e:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <__xload_1>
 e32:	26 2f       	mov	r18, r22
 e34:	0e 94 3d 08 	call	0x107a	; 0x107a <eeprom_update_r18>
 e38:	31 e0       	ldi	r19, 0x01	; 1
 e3a:	c3 1a       	sub	r12, r19
 e3c:	d1 08       	sbc	r13, r1
 e3e:	e1 08       	sbc	r14, r1
 e40:	41 50       	subi	r20, 0x01	; 1
 e42:	70 40       	sbci	r23, 0x00	; 0
 e44:	90 f7       	brcc	.-28     	; 0xe2a <eeprom_update_block+0x20>
 e46:	ef 90       	pop	r14
 e48:	df 90       	pop	r13
 e4a:	cf 90       	pop	r12
 e4c:	08 95       	ret

Disassembly of section .text.avrlibc:

00001078 <eeprom_update_byte>:
    1078:	26 2f       	mov	r18, r22

0000107a <eeprom_update_r18>:
    107a:	f9 99       	sbic	0x1f, 1	; 31
    107c:	fe cf       	rjmp	.-4      	; 0x107a <eeprom_update_r18>
    107e:	92 bd       	out	0x22, r25	; 34
    1080:	81 bd       	out	0x21, r24	; 33
    1082:	f8 9a       	sbi	0x1f, 0	; 31
    1084:	01 97       	sbiw	r24, 0x01	; 1
    1086:	00 b4       	in	r0, 0x20	; 32
    1088:	02 16       	cp	r0, r18
    108a:	39 f0       	breq	.+14     	; 0x109a <eeprom_update_r18+0x20>
    108c:	1f ba       	out	0x1f, r1	; 31
    108e:	20 bd       	out	0x20, r18	; 32
    1090:	0f b6       	in	r0, 0x3f	; 63
    1092:	f8 94       	cli
    1094:	fa 9a       	sbi	0x1f, 2	; 31
    1096:	f9 9a       	sbi	0x1f, 1	; 31
    1098:	0f be       	out	0x3f, r0	; 63
    109a:	08 95       	ret

Disassembly of section .text.libgcc:

000011d2 <__xload_1>:
    11d2:	57 fd       	sbrc	r21, 7
    11d4:	60 81       	ld	r22, Z
    11d6:	57 ff       	sbrs	r21, 7
    11d8:	64 91       	lpm	r22, Z
    11da:	08 95       	ret
