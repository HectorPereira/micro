
4 Cerradura.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000091d  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c2  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .eeprom       00000005  00810000  00810000  00000918  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      0000002f  00000000  00000000  0000091d  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 0000002a  00000000  00000000  0000094c  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  00000978  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002299  00000000  00000000  00000b08  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ac  00000000  00000000  00002da1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cc2  00000000  00000000  0000364d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000040c  00000000  00000000  00004310  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000286  00000000  00000000  0000471c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000129b  00000000  00000000  000049a2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000160  00000000  00000000  00005c3d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  00000856  00000856  0000090a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00005da0  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .progmemx.data 0000011a  000000c2  000000c2  00000176  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 16 .text.i2c_master_start 00000058  00000544  00000544  000005f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.i2c_master_write 00000024  000006e6  000006e6  0000079a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.i2c_master_stop 00000008  00000846  00000846  000008fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.i2c_master_sendByte 00000022  0000072e  0000072e  000007e2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.lq_transmitI2C 0000000e  0000082a  0000082a  000008de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.lq_turnOnBacklight 0000000e  00000838  00000838  000008ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.lq_writeDevicePulse 00000036  0000065e  0000065e  00000712  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.lq_writeDevice4Bits 0000001e  00000750  00000750  00000804  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.lq_writeDeviceByte 0000003a  00000624  00000624  000006d8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.lq_print 0000002a  00000694  00000694  00000748  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.lq_sendCommand 00000008  0000084e  0000084e  00000902  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.lq_setCursor 0000003e  000005e6  000005e6  0000069a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.lq_clear 00000028  000006be  000006be  00000772  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.lq_returnHome 00000014  000007ce  000007ce  00000882  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.lq_turnOnDisplay 00000012  000007e2  000007e2  00000896  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.lq_turnOnCursor 00000012  000007f4  000007f4  000008a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.lq_turnOnBlink 00000012  00000806  00000806  000008ba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.lq_init 0000011c  00000336  00000336  000003ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.millis_now 00000016  000007a2  000007a2  00000856  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.timer0_init_millis 00000012  00000818  00000818  000008cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.read_keypad 000000f2  00000452  00000452  00000506  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.keypad_init 0000001a  0000076e  0000076e  00000822  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.main    0000014a  000001ec  000001ec  000002a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.__vector_14 0000004a  0000059c  0000059c  00000650  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .bss.stable_key.2433 00000001  00800108  00800108  00000918  2**0
                  ALLOC
 41 .bss.last_change_time.2434 00000004  00800100  00800100  00000918  2**0
                  ALLOC
 42 .bss.last_key.2432 00000001  00800109  00800109  00000918  2**0
                  ALLOC
 43 .bss.millis   00000004  00800104  00800104  00000918  2**0
                  ALLOC
 44 .progmemx.data.keypad 00000010  000001dc  000001dc  00000290  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 45 .text.libgcc  0000001a  00000788  00000788  0000083c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.__dummy_fini 00000002  0000085e  0000085e  00000912  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.__dummy_funcs_on_exit 00000002  00000860  00000860  00000914  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.__dummy_simulator_exit 00000002  00000862  00000862  00000916  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.exit    00000016  000007b8  000007b8  0000086c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text._Exit   00000004  0000085a  0000085a  0000090e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.avrlibc 00000024  0000070a  0000070a  000007be  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 37 00 	jmp	0x6e	; 0x6e <__ctors_end>
   4:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
   8:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
   c:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  10:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  14:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  18:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  1c:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  20:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  24:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  28:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  2c:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  30:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  34:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  38:	0c 94 ce 02 	jmp	0x59c	; 0x59c <__vector_14>
  3c:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  40:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  44:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  48:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  4c:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  50:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  54:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  58:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  5c:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  60:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>
  64:	0c 94 2b 04 	jmp	0x856	; 0x856 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 0a       	sbc	r0, r17
  6c:	80 00       	.word	0x0080	; ????

0000006e <__ctors_end>:
  6e:	11 24       	eor	r1, r1
  70:	1f be       	out	0x3f, r1	; 63
  72:	cf ef       	ldi	r28, 0xFF	; 255
  74:	d8 e0       	ldi	r29, 0x08	; 8
  76:	de bf       	out	0x3e, r29	; 62
  78:	cd bf       	out	0x3d, r28	; 61

0000007a <__do_copy_data>:
  7a:	e8 e6       	ldi	r30, 0x68	; 104
  7c:	f0 e0       	ldi	r31, 0x00	; 0
  7e:	40 e0       	ldi	r20, 0x00	; 0
  80:	17 c0       	rjmp	.+46     	; 0xb0 <__do_clear_bss+0x8>
  82:	b5 91       	lpm	r27, Z+
  84:	a5 91       	lpm	r26, Z+
  86:	35 91       	lpm	r19, Z+
  88:	25 91       	lpm	r18, Z+
  8a:	05 91       	lpm	r16, Z+
  8c:	07 fd       	sbrc	r16, 7
  8e:	0c c0       	rjmp	.+24     	; 0xa8 <__do_clear_bss>
  90:	95 91       	lpm	r25, Z+
  92:	85 91       	lpm	r24, Z+
  94:	ef 01       	movw	r28, r30
  96:	f9 2f       	mov	r31, r25
  98:	e8 2f       	mov	r30, r24
  9a:	05 90       	lpm	r0, Z+
  9c:	0d 92       	st	X+, r0
  9e:	a2 17       	cp	r26, r18
  a0:	b3 07       	cpc	r27, r19
  a2:	d9 f7       	brne	.-10     	; 0x9a <__do_copy_data+0x20>
  a4:	fe 01       	movw	r30, r28
  a6:	04 c0       	rjmp	.+8      	; 0xb0 <__do_clear_bss+0x8>

000000a8 <__do_clear_bss>:
  a8:	1d 92       	st	X+, r1
  aa:	a2 17       	cp	r26, r18
  ac:	b3 07       	cpc	r27, r19
  ae:	e1 f7       	brne	.-8      	; 0xa8 <__do_clear_bss>
  b0:	ed 36       	cpi	r30, 0x6D	; 109
  b2:	f4 07       	cpc	r31, r20
  b4:	31 f7       	brne	.-52     	; 0x82 <__do_copy_data+0x8>
  b6:	0e 94 f6 00 	call	0x1ec	; 0x1ec <main>
  ba:	0c 94 dc 03 	jmp	0x7b8	; 0x7b8 <exit>

000000be <_exit>:
  be:	f8 94       	cli

000000c0 <__stop_program>:
  c0:	ff cf       	rjmp	.-2      	; 0xc0 <__stop_program>

Disassembly of section .text:

00000856 <__bad_interrupt>:
 856:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.i2c_master_start:

00000544 <i2c_master_start>:
	// wait for end of transmission
	while( !(TWCR & (1<<TWINT)) );

	// return received data from TWDR
	return TWDR;
}
 544:	ec eb       	ldi	r30, 0xBC	; 188
 546:	f0 e0       	ldi	r31, 0x00	; 0
 548:	10 82       	st	Z, r1
 54a:	94 ea       	ldi	r25, 0xA4	; 164
 54c:	90 83       	st	Z, r25
 54e:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 552:	99 23       	and	r25, r25
 554:	e4 f7       	brge	.-8      	; 0x54e <i2c_master_start+0xa>
 556:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 55a:	98 7f       	andi	r25, 0xF8	; 248
 55c:	98 30       	cpi	r25, 0x08	; 8
 55e:	11 f0       	breq	.+4      	; 0x564 <i2c_master_start+0x20>
 560:	90 31       	cpi	r25, 0x10	; 16
 562:	b1 f4       	brne	.+44     	; 0x590 <i2c_master_start+0x4c>
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	88 0f       	add	r24, r24
 568:	99 1f       	adc	r25, r25
 56a:	86 2b       	or	r24, r22
 56c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 570:	84 e8       	ldi	r24, 0x84	; 132
 572:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 576:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 57a:	88 23       	and	r24, r24
 57c:	e4 f7       	brge	.-8      	; 0x576 <i2c_master_start+0x32>
 57e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 582:	88 7f       	andi	r24, 0xF8	; 248
 584:	88 31       	cpi	r24, 0x18	; 24
 586:	31 f0       	breq	.+12     	; 0x594 <i2c_master_start+0x50>
 588:	80 34       	cpi	r24, 0x40	; 64
 58a:	31 f4       	brne	.+12     	; 0x598 <i2c_master_start+0x54>
 58c:	80 e0       	ldi	r24, 0x00	; 0
 58e:	08 95       	ret
 590:	8a e0       	ldi	r24, 0x0A	; 10
 592:	08 95       	ret
 594:	80 e0       	ldi	r24, 0x00	; 0
 596:	08 95       	ret
 598:	84 e1       	ldi	r24, 0x14	; 20
 59a:	08 95       	ret

Disassembly of section .text.i2c_master_write:

000006e6 <i2c_master_write>:
 6e6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
 6ea:	84 e8       	ldi	r24, 0x84	; 132
 6ec:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 6f0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 6f4:	88 23       	and	r24, r24
 6f6:	e4 f7       	brge	.-8      	; 0x6f0 <i2c_master_write+0xa>
 6f8:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
 6fc:	88 7f       	andi	r24, 0xF8	; 248
 6fe:	88 32       	cpi	r24, 0x28	; 40
 700:	11 f0       	breq	.+4      	; 0x706 <i2c_master_write+0x20>
 702:	85 e1       	ldi	r24, 0x15	; 21
 704:	08 95       	ret
 706:	80 e0       	ldi	r24, 0x00	; 0
 708:	08 95       	ret

Disassembly of section .text.i2c_master_stop:

00000846 <i2c_master_stop>:
	return I2C_STATUS_SUCCESS;
}

void i2c_master_stop(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
 846:	84 e9       	ldi	r24, 0x94	; 148
 848:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 84c:	08 95       	ret

Disassembly of section .text.i2c_master_sendByte:

0000072e <i2c_master_sendByte>:
	// wait for end of transmission
	while( !(TWCR & (1<<TWINT)) );

	// return received data from TWDR
	return TWDR;
}
 72e:	cf 93       	push	r28
 730:	c6 2f       	mov	r28, r22
 732:	60 e0       	ldi	r22, 0x00	; 0
 734:	0e 94 a2 02 	call	0x544	; 0x544 <i2c_master_start>
 738:	81 11       	cpse	r24, r1
 73a:	08 c0       	rjmp	.+16     	; 0x74c <i2c_master_sendByte+0x1e>
 73c:	8c 2f       	mov	r24, r28
 73e:	0e 94 73 03 	call	0x6e6	; 0x6e6 <i2c_master_write>
 742:	81 11       	cpse	r24, r1
 744:	03 c0       	rjmp	.+6      	; 0x74c <i2c_master_sendByte+0x1e>
 746:	0e 94 23 04 	call	0x846	; 0x846 <i2c_master_stop>
 74a:	80 e0       	ldi	r24, 0x00	; 0
 74c:	cf 91       	pop	r28
 74e:	08 95       	ret

Disassembly of section .text.lq_transmitI2C:

0000082a <lq_transmitI2C>:
 82a:	fc 01       	movw	r30, r24
 82c:	23 81       	ldd	r18, Z+3	; 0x03
 82e:	62 2b       	or	r22, r18
 830:	80 81       	ld	r24, Z
 832:	0e 94 97 03 	call	0x72e	; 0x72e <i2c_master_sendByte>
 836:	08 95       	ret

Disassembly of section .text.lq_turnOnBacklight:

00000838 <lq_turnOnBacklight>:
 838:	28 e0       	ldi	r18, 0x08	; 8
 83a:	fc 01       	movw	r30, r24
 83c:	23 83       	std	Z+3, r18	; 0x03
 83e:	60 e0       	ldi	r22, 0x00	; 0
 840:	0e 94 15 04 	call	0x82a	; 0x82a <lq_transmitI2C>
 844:	08 95       	ret

Disassembly of section .text.lq_writeDevicePulse:

0000065e <lq_writeDevicePulse>:
 65e:	0f 93       	push	r16
 660:	1f 93       	push	r17
 662:	cf 93       	push	r28
 664:	8c 01       	movw	r16, r24
 666:	c6 2f       	mov	r28, r22
 668:	64 60       	ori	r22, 0x04	; 4
 66a:	0e 94 15 04 	call	0x82a	; 0x82a <lq_transmitI2C>
 66e:	8a e0       	ldi	r24, 0x0A	; 10
 670:	8a 95       	dec	r24
 672:	f1 f7       	brne	.-4      	; 0x670 <lq_writeDevicePulse+0x12>
 674:	00 c0       	rjmp	.+0      	; 0x676 <lq_writeDevicePulse+0x18>
 676:	6c 2f       	mov	r22, r28
 678:	6b 7f       	andi	r22, 0xFB	; 251
 67a:	c8 01       	movw	r24, r16
 67c:	0e 94 15 04 	call	0x82a	; 0x82a <lq_transmitI2C>
 680:	87 ec       	ldi	r24, 0xC7	; 199
 682:	90 e0       	ldi	r25, 0x00	; 0
 684:	01 97       	sbiw	r24, 0x01	; 1
 686:	f1 f7       	brne	.-4      	; 0x684 <lq_writeDevicePulse+0x26>
 688:	00 c0       	rjmp	.+0      	; 0x68a <lq_writeDevicePulse+0x2c>
 68a:	00 00       	nop
 68c:	cf 91       	pop	r28
 68e:	1f 91       	pop	r17
 690:	0f 91       	pop	r16
 692:	08 95       	ret

Disassembly of section .text.lq_writeDevice4Bits:

00000750 <lq_writeDevice4Bits>:
 750:	1f 93       	push	r17
 752:	cf 93       	push	r28
 754:	df 93       	push	r29
 756:	ec 01       	movw	r28, r24
 758:	16 2f       	mov	r17, r22
 75a:	0e 94 15 04 	call	0x82a	; 0x82a <lq_transmitI2C>
 75e:	61 2f       	mov	r22, r17
 760:	ce 01       	movw	r24, r28
 762:	0e 94 2f 03 	call	0x65e	; 0x65e <lq_writeDevicePulse>
 766:	df 91       	pop	r29
 768:	cf 91       	pop	r28
 76a:	1f 91       	pop	r17
 76c:	08 95       	ret

Disassembly of section .text.lq_writeDeviceByte:

00000624 <lq_writeDeviceByte>:
 624:	ff 92       	push	r15
 626:	0f 93       	push	r16
 628:	1f 93       	push	r17
 62a:	cf 93       	push	r28
 62c:	df 93       	push	r29
 62e:	8c 01       	movw	r16, r24
 630:	f4 2e       	mov	r15, r20
 632:	86 2f       	mov	r24, r22
 634:	80 7f       	andi	r24, 0xF0	; 240
 636:	90 e1       	ldi	r25, 0x10	; 16
 638:	69 9f       	mul	r22, r25
 63a:	e0 01       	movw	r28, r0
 63c:	11 24       	eor	r1, r1
 63e:	68 2f       	mov	r22, r24
 640:	64 2b       	or	r22, r20
 642:	c8 01       	movw	r24, r16
 644:	0e 94 a8 03 	call	0x750	; 0x750 <lq_writeDevice4Bits>
 648:	6c 2f       	mov	r22, r28
 64a:	6f 29       	or	r22, r15
 64c:	c8 01       	movw	r24, r16
 64e:	0e 94 a8 03 	call	0x750	; 0x750 <lq_writeDevice4Bits>
 652:	df 91       	pop	r29
 654:	cf 91       	pop	r28
 656:	1f 91       	pop	r17
 658:	0f 91       	pop	r16
 65a:	ff 90       	pop	r15
 65c:	08 95       	ret

Disassembly of section .text.lq_print:

00000694 <lq_print>:
 694:	0f 93       	push	r16
 696:	1f 93       	push	r17
 698:	cf 93       	push	r28
 69a:	df 93       	push	r29
 69c:	8c 01       	movw	r16, r24
 69e:	eb 01       	movw	r28, r22
 6a0:	68 81       	ld	r22, Y
 6a2:	06 c0       	rjmp	.+12     	; 0x6b0 <lq_print+0x1c>
 6a4:	41 e0       	ldi	r20, 0x01	; 1
 6a6:	c8 01       	movw	r24, r16
 6a8:	0e 94 12 03 	call	0x624	; 0x624 <lq_writeDeviceByte>
 6ac:	21 96       	adiw	r28, 0x01	; 1
 6ae:	68 81       	ld	r22, Y
 6b0:	61 11       	cpse	r22, r1
 6b2:	f8 cf       	rjmp	.-16     	; 0x6a4 <lq_print+0x10>
 6b4:	df 91       	pop	r29
 6b6:	cf 91       	pop	r28
 6b8:	1f 91       	pop	r17
 6ba:	0f 91       	pop	r16
 6bc:	08 95       	ret

Disassembly of section .text.lq_sendCommand:

0000084e <lq_sendCommand>:
}


void lq_sendCommand(LiquidCrystalDevice_t* device, uint8_t command)
{
	lq_writeDeviceByte(device, command, 0);
 84e:	40 e0       	ldi	r20, 0x00	; 0
 850:	0e 94 12 03 	call	0x624	; 0x624 <lq_writeDeviceByte>
 854:	08 95       	ret

Disassembly of section .text.lq_setCursor:

000005e6 <lq_setCursor>:
 5e6:	cf 93       	push	r28
 5e8:	df 93       	push	r29
 5ea:	00 d0       	rcall	.+0      	; 0x5ec <lq_setCursor+0x6>
 5ec:	00 d0       	rcall	.+0      	; 0x5ee <lq_setCursor+0x8>
 5ee:	cd b7       	in	r28, 0x3d	; 61
 5f0:	de b7       	in	r29, 0x3e	; 62
 5f2:	19 82       	std	Y+1, r1	; 0x01
 5f4:	20 e4       	ldi	r18, 0x40	; 64
 5f6:	2a 83       	std	Y+2, r18	; 0x02
 5f8:	24 e1       	ldi	r18, 0x14	; 20
 5fa:	2b 83       	std	Y+3, r18	; 0x03
 5fc:	24 e5       	ldi	r18, 0x54	; 84
 5fe:	2c 83       	std	Y+4, r18	; 0x04
 600:	e1 e0       	ldi	r30, 0x01	; 1
 602:	f0 e0       	ldi	r31, 0x00	; 0
 604:	ec 0f       	add	r30, r28
 606:	fd 1f       	adc	r31, r29
 608:	e6 0f       	add	r30, r22
 60a:	f1 1d       	adc	r31, r1
 60c:	60 81       	ld	r22, Z
 60e:	64 0f       	add	r22, r20
 610:	60 68       	ori	r22, 0x80	; 128
 612:	0e 94 27 04 	call	0x84e	; 0x84e <lq_sendCommand>
 616:	0f 90       	pop	r0
 618:	0f 90       	pop	r0
 61a:	0f 90       	pop	r0
 61c:	0f 90       	pop	r0
 61e:	df 91       	pop	r29
 620:	cf 91       	pop	r28
 622:	08 95       	ret

Disassembly of section .text.lq_clear:

000006be <lq_clear>:
 6be:	cf 93       	push	r28
 6c0:	df 93       	push	r29
 6c2:	ec 01       	movw	r28, r24
 6c4:	61 e0       	ldi	r22, 0x01	; 1
 6c6:	0e 94 27 04 	call	0x84e	; 0x84e <lq_sendCommand>
 6ca:	8f e3       	ldi	r24, 0x3F	; 63
 6cc:	9f e1       	ldi	r25, 0x1F	; 31
 6ce:	01 97       	sbiw	r24, 0x01	; 1
 6d0:	f1 f7       	brne	.-4      	; 0x6ce <lq_clear+0x10>
 6d2:	00 c0       	rjmp	.+0      	; 0x6d4 <lq_clear+0x16>
 6d4:	00 00       	nop
 6d6:	40 e0       	ldi	r20, 0x00	; 0
 6d8:	60 e0       	ldi	r22, 0x00	; 0
 6da:	ce 01       	movw	r24, r28
 6dc:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <lq_setCursor>
 6e0:	df 91       	pop	r29
 6e2:	cf 91       	pop	r28
 6e4:	08 95       	ret

Disassembly of section .text.lq_returnHome:

000007ce <lq_returnHome>:
 7ce:	62 e0       	ldi	r22, 0x02	; 2
 7d0:	0e 94 27 04 	call	0x84e	; 0x84e <lq_sendCommand>
 7d4:	8f e3       	ldi	r24, 0x3F	; 63
 7d6:	9f e1       	ldi	r25, 0x1F	; 31
 7d8:	01 97       	sbiw	r24, 0x01	; 1
 7da:	f1 f7       	brne	.-4      	; 0x7d8 <lq_returnHome+0xa>
 7dc:	00 c0       	rjmp	.+0      	; 0x7de <lq_returnHome+0x10>
 7de:	00 00       	nop
 7e0:	08 95       	ret

Disassembly of section .text.lq_turnOnDisplay:

000007e2 <lq_turnOnDisplay>:
 7e2:	fc 01       	movw	r30, r24
 7e4:	65 81       	ldd	r22, Z+5	; 0x05
 7e6:	26 2f       	mov	r18, r22
 7e8:	24 60       	ori	r18, 0x04	; 4
 7ea:	25 83       	std	Z+5, r18	; 0x05
 7ec:	6c 60       	ori	r22, 0x0C	; 12
 7ee:	0e 94 27 04 	call	0x84e	; 0x84e <lq_sendCommand>
 7f2:	08 95       	ret

Disassembly of section .text.lq_turnOnCursor:

000007f4 <lq_turnOnCursor>:
 7f4:	fc 01       	movw	r30, r24
 7f6:	65 81       	ldd	r22, Z+5	; 0x05
 7f8:	26 2f       	mov	r18, r22
 7fa:	22 60       	ori	r18, 0x02	; 2
 7fc:	25 83       	std	Z+5, r18	; 0x05
 7fe:	6a 60       	ori	r22, 0x0A	; 10
 800:	0e 94 27 04 	call	0x84e	; 0x84e <lq_sendCommand>
 804:	08 95       	ret

Disassembly of section .text.lq_turnOnBlink:

00000806 <lq_turnOnBlink>:
 806:	fc 01       	movw	r30, r24
 808:	65 81       	ldd	r22, Z+5	; 0x05
 80a:	26 2f       	mov	r18, r22
 80c:	21 60       	ori	r18, 0x01	; 1
 80e:	25 83       	std	Z+5, r18	; 0x05
 810:	69 60       	ori	r22, 0x09	; 9
 812:	0e 94 27 04 	call	0x84e	; 0x84e <lq_sendCommand>
 816:	08 95       	ret

Disassembly of section .text.lq_init:

00000336 <lq_init>:
 336:	cf 93       	push	r28
 338:	df 93       	push	r29
 33a:	cd b7       	in	r28, 0x3d	; 61
 33c:	de b7       	in	r29, 0x3e	; 62
 33e:	2e 97       	sbiw	r28, 0x0e	; 14
 340:	0f b6       	in	r0, 0x3f	; 63
 342:	f8 94       	cli
 344:	de bf       	out	0x3e, r29	; 62
 346:	0f be       	out	0x3f, r0	; 63
 348:	cd bf       	out	0x3d, r28	; 61
 34a:	88 87       	std	Y+8, r24	; 0x08
 34c:	69 87       	std	Y+9, r22	; 0x09
 34e:	4a 87       	std	Y+10, r20	; 0x0a
 350:	1b 86       	std	Y+11, r1	; 0x0b
 352:	2c 87       	std	Y+12, r18	; 0x0c
 354:	84 e0       	ldi	r24, 0x04	; 4
 356:	8d 87       	std	Y+13, r24	; 0x0d
 358:	82 e0       	ldi	r24, 0x02	; 2
 35a:	8e 87       	std	Y+14, r24	; 0x0e
 35c:	42 30       	cpi	r20, 0x02	; 2
 35e:	18 f0       	brcs	.+6      	; 0x366 <lq_init+0x30>
 360:	82 2f       	mov	r24, r18
 362:	88 60       	ori	r24, 0x08	; 8
 364:	8c 87       	std	Y+12, r24	; 0x0c
 366:	22 23       	and	r18, r18
 368:	29 f0       	breq	.+10     	; 0x374 <lq_init+0x3e>
 36a:	41 30       	cpi	r20, 0x01	; 1
 36c:	19 f4       	brne	.+6      	; 0x374 <lq_init+0x3e>
 36e:	8c 85       	ldd	r24, Y+12	; 0x0c
 370:	84 60       	ori	r24, 0x04	; 4
 372:	8c 87       	std	Y+12, r24	; 0x0c
 374:	2f ef       	ldi	r18, 0xFF	; 255
 376:	81 ee       	ldi	r24, 0xE1	; 225
 378:	94 e0       	ldi	r25, 0x04	; 4
 37a:	21 50       	subi	r18, 0x01	; 1
 37c:	80 40       	sbci	r24, 0x00	; 0
 37e:	90 40       	sbci	r25, 0x00	; 0
 380:	e1 f7       	brne	.-8      	; 0x37a <lq_init+0x44>
 382:	00 c0       	rjmp	.+0      	; 0x384 <lq_init+0x4e>
 384:	00 00       	nop
 386:	60 e0       	ldi	r22, 0x00	; 0
 388:	ce 01       	movw	r24, r28
 38a:	08 96       	adiw	r24, 0x08	; 8
 38c:	0e 94 15 04 	call	0x82a	; 0x82a <lq_transmitI2C>
 390:	2f ef       	ldi	r18, 0xFF	; 255
 392:	83 ed       	ldi	r24, 0xD3	; 211
 394:	90 e3       	ldi	r25, 0x30	; 48
 396:	21 50       	subi	r18, 0x01	; 1
 398:	80 40       	sbci	r24, 0x00	; 0
 39a:	90 40       	sbci	r25, 0x00	; 0
 39c:	e1 f7       	brne	.-8      	; 0x396 <lq_init+0x60>
 39e:	00 c0       	rjmp	.+0      	; 0x3a0 <lq_init+0x6a>
 3a0:	00 00       	nop
 3a2:	60 e3       	ldi	r22, 0x30	; 48
 3a4:	ce 01       	movw	r24, r28
 3a6:	08 96       	adiw	r24, 0x08	; 8
 3a8:	0e 94 15 04 	call	0x82a	; 0x82a <lq_transmitI2C>
 3ac:	8f e4       	ldi	r24, 0x4F	; 79
 3ae:	96 e4       	ldi	r25, 0x46	; 70
 3b0:	01 97       	sbiw	r24, 0x01	; 1
 3b2:	f1 f7       	brne	.-4      	; 0x3b0 <lq_init+0x7a>
 3b4:	00 c0       	rjmp	.+0      	; 0x3b6 <lq_init+0x80>
 3b6:	00 00       	nop
 3b8:	60 e3       	ldi	r22, 0x30	; 48
 3ba:	ce 01       	movw	r24, r28
 3bc:	08 96       	adiw	r24, 0x08	; 8
 3be:	0e 94 a8 03 	call	0x750	; 0x750 <lq_writeDevice4Bits>
 3c2:	8f e4       	ldi	r24, 0x4F	; 79
 3c4:	96 e4       	ldi	r25, 0x46	; 70
 3c6:	01 97       	sbiw	r24, 0x01	; 1
 3c8:	f1 f7       	brne	.-4      	; 0x3c6 <lq_init+0x90>
 3ca:	00 c0       	rjmp	.+0      	; 0x3cc <lq_init+0x96>
 3cc:	00 00       	nop
 3ce:	60 e3       	ldi	r22, 0x30	; 48
 3d0:	ce 01       	movw	r24, r28
 3d2:	08 96       	adiw	r24, 0x08	; 8
 3d4:	0e 94 a8 03 	call	0x750	; 0x750 <lq_writeDevice4Bits>
 3d8:	87 e5       	ldi	r24, 0x57	; 87
 3da:	92 e0       	ldi	r25, 0x02	; 2
 3dc:	01 97       	sbiw	r24, 0x01	; 1
 3de:	f1 f7       	brne	.-4      	; 0x3dc <lq_init+0xa6>
 3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <lq_init+0xac>
 3e2:	00 00       	nop
 3e4:	60 e2       	ldi	r22, 0x20	; 32
 3e6:	ce 01       	movw	r24, r28
 3e8:	08 96       	adiw	r24, 0x08	; 8
 3ea:	0e 94 a8 03 	call	0x750	; 0x750 <lq_writeDevice4Bits>
 3ee:	6c 85       	ldd	r22, Y+12	; 0x0c
 3f0:	60 62       	ori	r22, 0x20	; 32
 3f2:	ce 01       	movw	r24, r28
 3f4:	08 96       	adiw	r24, 0x08	; 8
 3f6:	0e 94 27 04 	call	0x84e	; 0x84e <lq_sendCommand>
 3fa:	ce 01       	movw	r24, r28
 3fc:	08 96       	adiw	r24, 0x08	; 8
 3fe:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <lq_turnOnDisplay>
 402:	ce 01       	movw	r24, r28
 404:	08 96       	adiw	r24, 0x08	; 8
 406:	0e 94 5f 03 	call	0x6be	; 0x6be <lq_clear>
 40a:	6e 85       	ldd	r22, Y+14	; 0x0e
 40c:	64 60       	ori	r22, 0x04	; 4
 40e:	ce 01       	movw	r24, r28
 410:	08 96       	adiw	r24, 0x08	; 8
 412:	0e 94 27 04 	call	0x84e	; 0x84e <lq_sendCommand>
 416:	ce 01       	movw	r24, r28
 418:	08 96       	adiw	r24, 0x08	; 8
 41a:	0e 94 e7 03 	call	0x7ce	; 0x7ce <lq_returnHome>
 41e:	87 e0       	ldi	r24, 0x07	; 7
 420:	fe 01       	movw	r30, r28
 422:	38 96       	adiw	r30, 0x08	; 8
 424:	de 01       	movw	r26, r28
 426:	11 96       	adiw	r26, 0x01	; 1
 428:	01 90       	ld	r0, Z+
 42a:	0d 92       	st	X+, r0
 42c:	8a 95       	dec	r24
 42e:	e1 f7       	brne	.-8      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 430:	29 81       	ldd	r18, Y+1	; 0x01
 432:	3a 81       	ldd	r19, Y+2	; 0x02
 434:	4b 81       	ldd	r20, Y+3	; 0x03
 436:	5c 81       	ldd	r21, Y+4	; 0x04
 438:	6d 81       	ldd	r22, Y+5	; 0x05
 43a:	7e 81       	ldd	r23, Y+6	; 0x06
 43c:	8f 81       	ldd	r24, Y+7	; 0x07
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	2e 96       	adiw	r28, 0x0e	; 14
 442:	0f b6       	in	r0, 0x3f	; 63
 444:	f8 94       	cli
 446:	de bf       	out	0x3e, r29	; 62
 448:	0f be       	out	0x3f, r0	; 63
 44a:	cd bf       	out	0x3d, r28	; 61
 44c:	df 91       	pop	r29
 44e:	cf 91       	pop	r28
 450:	08 95       	ret

Disassembly of section .text.millis_now:

000007a2 <millis_now>:
 7a2:	f8 94       	cli
 7a4:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <millis>
 7a8:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <millis+0x1>
 7ac:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <millis+0x2>
 7b0:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <millis+0x3>
 7b4:	78 94       	sei
 7b6:	08 95       	ret

Disassembly of section .text.timer0_init_millis:

00000818 <timer0_init_millis>:
 818:	82 e0       	ldi	r24, 0x02	; 2
 81a:	84 bd       	out	0x24, r24	; 36
 81c:	93 e0       	ldi	r25, 0x03	; 3
 81e:	95 bd       	out	0x25, r25	; 37
 820:	99 ef       	ldi	r25, 0xF9	; 249
 822:	97 bd       	out	0x27, r25	; 39
 824:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
 828:	08 95       	ret

Disassembly of section .text.read_keypad:

00000452 <read_keypad>:
 452:	0f 93       	push	r16
 454:	1f 93       	push	r17
 456:	cf 93       	push	r28
 458:	60 e0       	ldi	r22, 0x00	; 0
 45a:	3c c0       	rjmp	.+120    	; 0x4d4 <read_keypad+0x82>
 45c:	2b b1       	in	r18, 0x0b	; 11
 45e:	e6 2f       	mov	r30, r22
 460:	f0 e0       	ldi	r31, 0x00	; 0
 462:	af 01       	movw	r20, r30
 464:	4c 5f       	subi	r20, 0xFC	; 252
 466:	5f 4f       	sbci	r21, 0xFF	; 255
 468:	81 e0       	ldi	r24, 0x01	; 1
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	02 c0       	rjmp	.+4      	; 0x472 <read_keypad+0x20>
 46e:	88 0f       	add	r24, r24
 470:	99 1f       	adc	r25, r25
 472:	4a 95       	dec	r20
 474:	e2 f7       	brpl	.-8      	; 0x46e <read_keypad+0x1c>
 476:	92 2f       	mov	r25, r18
 478:	90 6f       	ori	r25, 0xF0	; 240
 47a:	80 95       	com	r24
 47c:	89 23       	and	r24, r25
 47e:	8b b9       	out	0x0b, r24	; 11
 480:	8a e1       	ldi	r24, 0x1A	; 26
 482:	8a 95       	dec	r24
 484:	f1 f7       	brne	.-4      	; 0x482 <read_keypad+0x30>
 486:	00 c0       	rjmp	.+0      	; 0x488 <read_keypad+0x36>
 488:	99 b1       	in	r25, 0x09	; 9
 48a:	9f 70       	andi	r25, 0x0F	; 15
 48c:	80 e0       	ldi	r24, 0x00	; 0
 48e:	1f c0       	rjmp	.+62     	; 0x4ce <read_keypad+0x7c>
 490:	48 2f       	mov	r20, r24
 492:	50 e0       	ldi	r21, 0x00	; 0
 494:	29 2f       	mov	r18, r25
 496:	30 e0       	ldi	r19, 0x00	; 0
 498:	08 2e       	mov	r0, r24
 49a:	02 c0       	rjmp	.+4      	; 0x4a0 <read_keypad+0x4e>
 49c:	35 95       	asr	r19
 49e:	27 95       	ror	r18
 4a0:	0a 94       	dec	r0
 4a2:	e2 f7       	brpl	.-8      	; 0x49c <read_keypad+0x4a>
 4a4:	20 fd       	sbrc	r18, 0
 4a6:	12 c0       	rjmp	.+36     	; 0x4cc <read_keypad+0x7a>
 4a8:	cf 01       	movw	r24, r30
 4aa:	88 0f       	add	r24, r24
 4ac:	99 1f       	adc	r25, r25
 4ae:	88 0f       	add	r24, r24
 4b0:	99 1f       	adc	r25, r25
 4b2:	84 0f       	add	r24, r20
 4b4:	95 1f       	adc	r25, r21
 4b6:	09 2e       	mov	r0, r25
 4b8:	00 0c       	add	r0, r0
 4ba:	aa 0b       	sbc	r26, r26
 4bc:	84 52       	subi	r24, 0x24	; 36
 4be:	9e 4f       	sbci	r25, 0xFE	; 254
 4c0:	af 4f       	sbci	r26, 0xFF	; 255
 4c2:	fc 01       	movw	r30, r24
 4c4:	c4 91       	lpm	r28, Z
 4c6:	a7 fd       	sbrc	r26, 7
 4c8:	c0 81       	ld	r28, Z
 4ca:	07 c0       	rjmp	.+14     	; 0x4da <read_keypad+0x88>
 4cc:	8f 5f       	subi	r24, 0xFF	; 255
 4ce:	84 30       	cpi	r24, 0x04	; 4
 4d0:	f8 f2       	brcs	.-66     	; 0x490 <read_keypad+0x3e>
 4d2:	6f 5f       	subi	r22, 0xFF	; 255
 4d4:	64 30       	cpi	r22, 0x04	; 4
 4d6:	10 f2       	brcs	.-124    	; 0x45c <read_keypad+0xa>
 4d8:	c0 e0       	ldi	r28, 0x00	; 0
 4da:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <millis_now>
 4de:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <last_key.2432>
 4e2:	c2 17       	cp	r28, r18
 4e4:	51 f0       	breq	.+20     	; 0x4fa <read_keypad+0xa8>
 4e6:	c0 93 09 01 	sts	0x0109, r28	; 0x800109 <last_key.2432>
 4ea:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
 4ee:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 4f2:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 4f6:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 4fa:	00 91 00 01 	lds	r16, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 4fe:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 502:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 506:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 50a:	dc 01       	movw	r26, r24
 50c:	cb 01       	movw	r24, r22
 50e:	80 1b       	sub	r24, r16
 510:	91 0b       	sbc	r25, r17
 512:	a2 0b       	sbc	r26, r18
 514:	b3 0b       	sbc	r27, r19
 516:	4f 97       	sbiw	r24, 0x1f	; 31
 518:	a1 05       	cpc	r26, r1
 51a:	b1 05       	cpc	r27, r1
 51c:	50 f0       	brcs	.+20     	; 0x532 <read_keypad+0xe0>
 51e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <stable_key.2433>
 522:	c8 17       	cp	r28, r24
 524:	41 f0       	breq	.+16     	; 0x536 <read_keypad+0xe4>
 526:	c0 93 08 01 	sts	0x0108, r28	; 0x800108 <stable_key.2433>
 52a:	cc 23       	and	r28, r28
 52c:	31 f0       	breq	.+12     	; 0x53a <read_keypad+0xe8>
 52e:	8c 2f       	mov	r24, r28
 530:	05 c0       	rjmp	.+10     	; 0x53c <read_keypad+0xea>
 532:	80 e0       	ldi	r24, 0x00	; 0
 534:	03 c0       	rjmp	.+6      	; 0x53c <read_keypad+0xea>
 536:	80 e0       	ldi	r24, 0x00	; 0
 538:	01 c0       	rjmp	.+2      	; 0x53c <read_keypad+0xea>
 53a:	80 e0       	ldi	r24, 0x00	; 0
 53c:	cf 91       	pop	r28
 53e:	1f 91       	pop	r17
 540:	0f 91       	pop	r16
 542:	08 95       	ret

Disassembly of section .text.keypad_init:

0000076e <keypad_init>:
 76e:	8a b1       	in	r24, 0x0a	; 10
 770:	80 7f       	andi	r24, 0xF0	; 240
 772:	8a b9       	out	0x0a, r24	; 10
 774:	8b b1       	in	r24, 0x0b	; 11
 776:	8f 60       	ori	r24, 0x0F	; 15
 778:	8b b9       	out	0x0b, r24	; 11
 77a:	8a b1       	in	r24, 0x0a	; 10
 77c:	80 6f       	ori	r24, 0xF0	; 240
 77e:	8a b9       	out	0x0a, r24	; 10
 780:	8b b1       	in	r24, 0x0b	; 11
 782:	80 6f       	ori	r24, 0xF0	; 240
 784:	8b b9       	out	0x0b, r24	; 11
 786:	08 95       	ret

Disassembly of section .text.main:

000001ec <main>:
 1ec:	cf 93       	push	r28
 1ee:	df 93       	push	r29
 1f0:	cd b7       	in	r28, 0x3d	; 61
 1f2:	de b7       	in	r29, 0x3e	; 62
 1f4:	e3 97       	sbiw	r28, 0x33	; 51
 1f6:	0f b6       	in	r0, 0x3f	; 63
 1f8:	f8 94       	cli
 1fa:	de bf       	out	0x3e, r29	; 62
 1fc:	0f be       	out	0x3f, r0	; 63
 1fe:	cd bf       	out	0x3d, r28	; 61
 200:	0e 94 b7 03 	call	0x76e	; 0x76e <keypad_init>
 204:	0e 94 0c 04 	call	0x818	; 0x818 <timer0_init_millis>
 208:	78 94       	sei
 20a:	20 e0       	ldi	r18, 0x00	; 0
 20c:	42 e0       	ldi	r20, 0x02	; 2
 20e:	60 e1       	ldi	r22, 0x10	; 16
 210:	87 e2       	ldi	r24, 0x27	; 39
 212:	0e 94 9b 01 	call	0x336	; 0x336 <lq_init>
 216:	29 83       	std	Y+1, r18	; 0x01
 218:	3a 83       	std	Y+2, r19	; 0x02
 21a:	4b 83       	std	Y+3, r20	; 0x03
 21c:	5c 83       	std	Y+4, r21	; 0x04
 21e:	6d 83       	std	Y+5, r22	; 0x05
 220:	7e 83       	std	Y+6, r23	; 0x06
 222:	8f 83       	std	Y+7, r24	; 0x07
 224:	ce 01       	movw	r24, r28
 226:	01 96       	adiw	r24, 0x01	; 1
 228:	0e 94 1c 04 	call	0x838	; 0x838 <lq_turnOnBacklight>
 22c:	27 eb       	ldi	r18, 0xB7	; 183
 22e:	31 e0       	ldi	r19, 0x01	; 1
 230:	40 e0       	ldi	r20, 0x00	; 0
 232:	8c e0       	ldi	r24, 0x0C	; 12
 234:	f9 01       	movw	r30, r18
 236:	de 01       	movw	r26, r28
 238:	18 96       	adiw	r26, 0x08	; 8
 23a:	74 2f       	mov	r23, r20
 23c:	0e 94 c4 03 	call	0x788	; 0x788 <__movmemx_qi>
 240:	be 01       	movw	r22, r28
 242:	68 5f       	subi	r22, 0xF8	; 248
 244:	7f 4f       	sbci	r23, 0xFF	; 255
 246:	ce 01       	movw	r24, r28
 248:	01 96       	adiw	r24, 0x01	; 1
 24a:	0e 94 4a 03 	call	0x694	; 0x694 <lq_print>
 24e:	2f ef       	ldi	r18, 0xFF	; 255
 250:	83 ed       	ldi	r24, 0xD3	; 211
 252:	90 e3       	ldi	r25, 0x30	; 48
 254:	21 50       	subi	r18, 0x01	; 1
 256:	80 40       	sbci	r24, 0x00	; 0
 258:	90 40       	sbci	r25, 0x00	; 0
 25a:	e1 f7       	brne	.-8      	; 0x254 <main+0x68>
 25c:	00 c0       	rjmp	.+0      	; 0x25e <main+0x72>
 25e:	00 00       	nop
 260:	ce 01       	movw	r24, r28
 262:	01 96       	adiw	r24, 0x01	; 1
 264:	0e 94 5f 03 	call	0x6be	; 0x6be <lq_clear>
 268:	40 e0       	ldi	r20, 0x00	; 0
 26a:	50 e0       	ldi	r21, 0x00	; 0
 26c:	60 e8       	ldi	r22, 0x80	; 128
 26e:	25 e0       	ldi	r18, 0x05	; 5
 270:	30 e0       	ldi	r19, 0x00	; 0
 272:	ce 01       	movw	r24, r28
 274:	44 96       	adiw	r24, 0x14	; 20
 276:	0e 94 85 03 	call	0x70a	; 0x70a <eeprom_read_block>
 27a:	23 ec       	ldi	r18, 0xC3	; 195
 27c:	31 e0       	ldi	r19, 0x01	; 1
 27e:	40 e0       	ldi	r20, 0x00	; 0
 280:	88 e0       	ldi	r24, 0x08	; 8
 282:	f9 01       	movw	r30, r18
 284:	de 01       	movw	r26, r28
 286:	59 96       	adiw	r26, 0x19	; 25
 288:	74 2f       	mov	r23, r20
 28a:	0e 94 c4 03 	call	0x788	; 0x788 <__movmemx_qi>
 28e:	40 e0       	ldi	r20, 0x00	; 0
 290:	60 e0       	ldi	r22, 0x00	; 0
 292:	ce 01       	movw	r24, r28
 294:	01 96       	adiw	r24, 0x01	; 1
 296:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <lq_setCursor>
 29a:	be 01       	movw	r22, r28
 29c:	67 5e       	subi	r22, 0xE7	; 231
 29e:	7f 4f       	sbci	r23, 0xFF	; 255
 2a0:	ce 01       	movw	r24, r28
 2a2:	01 96       	adiw	r24, 0x01	; 1
 2a4:	0e 94 4a 03 	call	0x694	; 0x694 <lq_print>
 2a8:	40 e0       	ldi	r20, 0x00	; 0
 2aa:	61 e0       	ldi	r22, 0x01	; 1
 2ac:	ce 01       	movw	r24, r28
 2ae:	01 96       	adiw	r24, 0x01	; 1
 2b0:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <lq_setCursor>
 2b4:	be 01       	movw	r22, r28
 2b6:	6c 5e       	subi	r22, 0xEC	; 236
 2b8:	7f 4f       	sbci	r23, 0xFF	; 255
 2ba:	ce 01       	movw	r24, r28
 2bc:	01 96       	adiw	r24, 0x01	; 1
 2be:	0e 94 4a 03 	call	0x694	; 0x694 <lq_print>
 2c2:	2f ef       	ldi	r18, 0xFF	; 255
 2c4:	83 e2       	ldi	r24, 0x23	; 35
 2c6:	94 ef       	ldi	r25, 0xF4	; 244
 2c8:	21 50       	subi	r18, 0x01	; 1
 2ca:	80 40       	sbci	r24, 0x00	; 0
 2cc:	90 40       	sbci	r25, 0x00	; 0
 2ce:	e1 f7       	brne	.-8      	; 0x2c8 <main+0xdc>
 2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <main+0xe6>
 2d2:	00 00       	nop
 2d4:	ce 01       	movw	r24, r28
 2d6:	01 96       	adiw	r24, 0x01	; 1
 2d8:	0e 94 5f 03 	call	0x6be	; 0x6be <lq_clear>
 2dc:	ce 01       	movw	r24, r28
 2de:	01 96       	adiw	r24, 0x01	; 1
 2e0:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <lq_turnOnCursor>
 2e4:	ce 01       	movw	r24, r28
 2e6:	01 96       	adiw	r24, 0x01	; 1
 2e8:	0e 94 03 04 	call	0x806	; 0x806 <lq_turnOnBlink>
 2ec:	2b ec       	ldi	r18, 0xCB	; 203
 2ee:	31 e0       	ldi	r19, 0x01	; 1
 2f0:	40 e0       	ldi	r20, 0x00	; 0
 2f2:	81 e1       	ldi	r24, 0x11	; 17
 2f4:	f9 01       	movw	r30, r18
 2f6:	de 01       	movw	r26, r28
 2f8:	91 96       	adiw	r26, 0x21	; 33
 2fa:	74 2f       	mov	r23, r20
 2fc:	0e 94 c4 03 	call	0x788	; 0x788 <__movmemx_qi>
 300:	be 01       	movw	r22, r28
 302:	6f 5d       	subi	r22, 0xDF	; 223
 304:	7f 4f       	sbci	r23, 0xFF	; 255
 306:	ce 01       	movw	r24, r28
 308:	01 96       	adiw	r24, 0x01	; 1
 30a:	0e 94 4a 03 	call	0x694	; 0x694 <lq_print>
 30e:	40 e0       	ldi	r20, 0x00	; 0
 310:	61 e0       	ldi	r22, 0x01	; 1
 312:	ce 01       	movw	r24, r28
 314:	01 96       	adiw	r24, 0x01	; 1
 316:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <lq_setCursor>
 31a:	0e 94 29 02 	call	0x452	; 0x452 <read_keypad>
 31e:	88 23       	and	r24, r24
 320:	e1 f3       	breq	.-8      	; 0x31a <main+0x12e>
 322:	8a ab       	std	Y+50, r24	; 0x32
 324:	1b aa       	std	Y+51, r1	; 0x33
 326:	be 01       	movw	r22, r28
 328:	6e 5c       	subi	r22, 0xCE	; 206
 32a:	7f 4f       	sbci	r23, 0xFF	; 255
 32c:	ce 01       	movw	r24, r28
 32e:	01 96       	adiw	r24, 0x01	; 1
 330:	0e 94 4a 03 	call	0x694	; 0x694 <lq_print>
 334:	f2 cf       	rjmp	.-28     	; 0x31a <main+0x12e>

Disassembly of section .text.__vector_14:

0000059c <__vector_14>:
 59c:	1f 92       	push	r1
 59e:	0f 92       	push	r0
 5a0:	0f b6       	in	r0, 0x3f	; 63
 5a2:	0f 92       	push	r0
 5a4:	11 24       	eor	r1, r1
 5a6:	8f 93       	push	r24
 5a8:	9f 93       	push	r25
 5aa:	af 93       	push	r26
 5ac:	bf 93       	push	r27
 5ae:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <millis>
 5b2:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <millis+0x1>
 5b6:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <millis+0x2>
 5ba:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <millis+0x3>
 5be:	01 96       	adiw	r24, 0x01	; 1
 5c0:	a1 1d       	adc	r26, r1
 5c2:	b1 1d       	adc	r27, r1
 5c4:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <millis>
 5c8:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <millis+0x1>
 5cc:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <millis+0x2>
 5d0:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <millis+0x3>
 5d4:	bf 91       	pop	r27
 5d6:	af 91       	pop	r26
 5d8:	9f 91       	pop	r25
 5da:	8f 91       	pop	r24
 5dc:	0f 90       	pop	r0
 5de:	0f be       	out	0x3f, r0	; 63
 5e0:	0f 90       	pop	r0
 5e2:	1f 90       	pop	r1
 5e4:	18 95       	reti

Disassembly of section .text.libgcc:

00000788 <__movmemx_qi>:
 788:	99 27       	eor	r25, r25

0000078a <__movmemx_hi>:
 78a:	77 fd       	sbrc	r23, 7
 78c:	05 c0       	rjmp	.+10     	; 0x798 <__movmemx_hi+0xe>
 78e:	05 90       	lpm	r0, Z+
 790:	0d 92       	st	X+, r0
 792:	01 97       	sbiw	r24, 0x01	; 1
 794:	e1 f7       	brne	.-8      	; 0x78e <__movmemx_hi+0x4>
 796:	08 95       	ret
 798:	01 90       	ld	r0, Z+
 79a:	0d 92       	st	X+, r0
 79c:	01 97       	sbiw	r24, 0x01	; 1
 79e:	e1 f7       	brne	.-8      	; 0x798 <__movmemx_hi+0xe>
 7a0:	08 95       	ret

Disassembly of section .text.__dummy_fini:

0000085e <_fini>:
 85e:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000860 <__funcs_on_exit>:
 860:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000862 <__simulator_exit>:
 862:	08 95       	ret

Disassembly of section .text.exit:

000007b8 <exit>:
 7b8:	ec 01       	movw	r28, r24
 7ba:	0e 94 30 04 	call	0x860	; 0x860 <__funcs_on_exit>
 7be:	0e 94 2f 04 	call	0x85e	; 0x85e <_fini>
 7c2:	ce 01       	movw	r24, r28
 7c4:	0e 94 31 04 	call	0x862	; 0x862 <__simulator_exit>
 7c8:	ce 01       	movw	r24, r28
 7ca:	0e 94 2d 04 	call	0x85a	; 0x85a <_Exit>

Disassembly of section .text._Exit:

0000085a <_Exit>:
 85a:	0e 94 5f 00 	call	0xbe	; 0xbe <_exit>

Disassembly of section .text.avrlibc:

0000070a <eeprom_read_block>:
 70a:	ba 01       	movw	r22, r20
 70c:	a9 01       	movw	r20, r18
 70e:	dc 01       	movw	r26, r24
 710:	cb 01       	movw	r24, r22

00000712 <eeprom_read_blraw>:
 712:	fc 01       	movw	r30, r24
 714:	f9 99       	sbic	0x1f, 1	; 31
 716:	fe cf       	rjmp	.-4      	; 0x714 <eeprom_read_blraw+0x2>
 718:	06 c0       	rjmp	.+12     	; 0x726 <eeprom_read_blraw+0x14>
 71a:	f2 bd       	out	0x22, r31	; 34
 71c:	e1 bd       	out	0x21, r30	; 33
 71e:	f8 9a       	sbi	0x1f, 0	; 31
 720:	31 96       	adiw	r30, 0x01	; 1
 722:	00 b4       	in	r0, 0x20	; 32
 724:	0d 92       	st	X+, r0
 726:	41 50       	subi	r20, 0x01	; 1
 728:	50 40       	sbci	r21, 0x00	; 0
 72a:	b8 f7       	brcc	.-18     	; 0x71a <eeprom_read_blraw+0x8>
 72c:	08 95       	ret
