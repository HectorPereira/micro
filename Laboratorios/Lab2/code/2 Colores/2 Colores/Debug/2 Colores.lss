
2 Colores.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000362  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000100  00800100  00800100  00000362  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00000362  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 0000002a  00000000  00000000  00000391  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  000003bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011aa  00000000  00000000  00000463  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000082d  00000000  00000000  0000160d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000668  00000000  00000000  00001e3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000248  00000000  00000000  000024a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  000026ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000096d  00000000  00000000  000028f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00003261  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  000002c0  000002c0  00000354  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003314  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .text.usart_init 0000001c  00000278  00000278  0000030c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.adc_init 0000000e  000002aa  000002aa  0000033e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.rgb_init 00000008  000002b8  000002b8  0000034c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.servo_init 00000020  0000023a  0000023a  000002ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.servo_set_angle 00000026  00000214  00000214  000002a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.main    00000074  000000c2  000000c2  00000156  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.__vector_19 00000050  00000136  00000136  000001ca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.__vector_18 0000004a  00000186  00000186  0000021a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .bss.rx_tail  00000001  00800200  00800200  00000362  2**0
                  ALLOC
 24 .bss.rx_head  00000001  00800201  00800201  00000362  2**0
                  ALLOC
 25 .bss.tx_tail  00000001  00800202  00800202  00000362  2**0
                  ALLOC
 26 .bss.tx_head  00000001  00800203  00800203  00000362  2**0
                  ALLOC
 27 .text.libgcc.div 00000044  000001d0  000001d0  00000264  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.libgcc.mul 0000001e  0000025a  0000025a  000002ee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.__dummy_fini 00000002  000002c8  000002c8  0000035c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.__dummy_funcs_on_exit 00000002  000002ca  000002ca  0000035e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.__dummy_simulator_exit 00000002  000002cc  000002cc  00000360  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.exit    00000016  00000294  00000294  00000328  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text._Exit   00000004  000002c4  000002c4  00000358  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 37 00 	jmp	0x6e	; 0x6e <__ctors_end>
   4:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
   8:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
   c:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  10:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  14:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  18:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  1c:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  20:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  24:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  28:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  2c:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  30:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  34:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  38:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  3c:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  40:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  44:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  48:	0c 94 c3 00 	jmp	0x186	; 0x186 <__vector_18>
  4c:	0c 94 9b 00 	jmp	0x136	; 0x136 <__vector_19>
  50:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  54:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  58:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  5c:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  60:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>
  64:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	02 04       	cpc	r0, r2
  6c:	80 00       	.word	0x0080	; ????

0000006e <__ctors_end>:
  6e:	11 24       	eor	r1, r1
  70:	1f be       	out	0x3f, r1	; 63
  72:	cf ef       	ldi	r28, 0xFF	; 255
  74:	d8 e0       	ldi	r29, 0x08	; 8
  76:	de bf       	out	0x3e, r29	; 62
  78:	cd bf       	out	0x3d, r28	; 61

0000007a <__do_copy_data>:
  7a:	e8 e6       	ldi	r30, 0x68	; 104
  7c:	f0 e0       	ldi	r31, 0x00	; 0
  7e:	40 e0       	ldi	r20, 0x00	; 0
  80:	17 c0       	rjmp	.+46     	; 0xb0 <__do_clear_bss+0x8>
  82:	b5 91       	lpm	r27, Z+
  84:	a5 91       	lpm	r26, Z+
  86:	35 91       	lpm	r19, Z+
  88:	25 91       	lpm	r18, Z+
  8a:	05 91       	lpm	r16, Z+
  8c:	07 fd       	sbrc	r16, 7
  8e:	0c c0       	rjmp	.+24     	; 0xa8 <__do_clear_bss>
  90:	95 91       	lpm	r25, Z+
  92:	85 91       	lpm	r24, Z+
  94:	ef 01       	movw	r28, r30
  96:	f9 2f       	mov	r31, r25
  98:	e8 2f       	mov	r30, r24
  9a:	05 90       	lpm	r0, Z+
  9c:	0d 92       	st	X+, r0
  9e:	a2 17       	cp	r26, r18
  a0:	b3 07       	cpc	r27, r19
  a2:	d9 f7       	brne	.-10     	; 0x9a <__do_copy_data+0x20>
  a4:	fe 01       	movw	r30, r28
  a6:	04 c0       	rjmp	.+8      	; 0xb0 <__do_clear_bss+0x8>

000000a8 <__do_clear_bss>:
  a8:	1d 92       	st	X+, r1
  aa:	a2 17       	cp	r26, r18
  ac:	b3 07       	cpc	r27, r19
  ae:	e1 f7       	brne	.-8      	; 0xa8 <__do_clear_bss>
  b0:	ed 36       	cpi	r30, 0x6D	; 109
  b2:	f4 07       	cpc	r31, r20
  b4:	31 f7       	brne	.-52     	; 0x82 <__do_copy_data+0x8>
  b6:	0e 94 61 00 	call	0xc2	; 0xc2 <_etext>
  ba:	0c 94 4a 01 	jmp	0x294	; 0x294 <exit>

000000be <_exit>:
  be:	f8 94       	cli

000000c0 <__stop_program>:
  c0:	ff cf       	rjmp	.-2      	; 0xc0 <__stop_program>

Disassembly of section .text:

000002c0 <__bad_interrupt>:
 2c0:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.usart_init:

00000278 <usart_init>:
// ------------------------------------------------------------------


void usart_init(void) {
	const uint16_t ubrr = (16000000UL / (16UL * BAUD_RATE)) - 1;
	UBRR0H = ubrr >> 8;
 278:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = ubrr;
 27c:	87 e6       	ldi	r24, 0x67	; 103
 27e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0A = 0;
 282:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
	UCSR0B = (1 << TXEN0) | (1 << RXEN0) | (1 << RXCIE0);   // <- RX interrupt
 286:	88 e9       	ldi	r24, 0x98	; 152
 288:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);               // 8N1
 28c:	86 e0       	ldi	r24, 0x06	; 6
 28e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 292:	08 95       	ret

Disassembly of section .text.adc_init:

000002aa <adc_init>:
}

void adc_init(void) {
	ADMUX  = (1 << REFS0);                        // AVcc ref, ADC0 input
 2aa:	80 e4       	ldi	r24, 0x40	; 64
 2ac:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA = (1 << ADEN)                          // Enable ADC
 2b0:	87 e8       	ldi	r24, 0x87	; 135
 2b2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 2b6:	08 95       	ret

Disassembly of section .text.rgb_init:

000002b8 <rgb_init>:
	| (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); // Prescaler 128
}

void rgb_init(void){
	DDRB |= (1<<RED) | (1<<GREEN) | (1<<BLUE);
 2b8:	84 b1       	in	r24, 0x04	; 4
 2ba:	8c 61       	ori	r24, 0x1C	; 28
 2bc:	84 b9       	out	0x04, r24	; 4
 2be:	08 95       	ret

Disassembly of section .text.servo_init:

0000023a <servo_init>:
	}

	// Reverse digits into final buffer
	while (i > 0) buffer[j++] = temp[--i];
	buffer[j] = '\0';
}
 23a:	84 b1       	in	r24, 0x04	; 4
 23c:	82 60       	ori	r24, 0x02	; 2
 23e:	84 b9       	out	0x04, r24	; 4
 240:	82 e8       	ldi	r24, 0x82	; 130
 242:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
 246:	8a e1       	ldi	r24, 0x1A	; 26
 248:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
 24c:	8f e3       	ldi	r24, 0x3F	; 63
 24e:	9c e9       	ldi	r25, 0x9C	; 156
 250:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 254:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 258:	08 95       	ret

Disassembly of section .text.servo_set_angle:

00000214 <servo_set_angle>:
 214:	28 2f       	mov	r18, r24
 216:	30 e0       	ldi	r19, 0x00	; 0
 218:	a0 ea       	ldi	r26, 0xA0	; 160
 21a:	bf e0       	ldi	r27, 0x0F	; 15
 21c:	0e 94 2d 01 	call	0x25a	; 0x25a <__umulhisi3>
 220:	24 eb       	ldi	r18, 0xB4	; 180
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	40 e0       	ldi	r20, 0x00	; 0
 226:	50 e0       	ldi	r21, 0x00	; 0
 228:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <__udivmodsi4>
 22c:	28 51       	subi	r18, 0x18	; 24
 22e:	3c 4f       	sbci	r19, 0xFC	; 252
 230:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 234:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 238:	08 95       	ret

Disassembly of section .text.main:

000000c2 <main>:
  c2:	0e 94 3c 01 	call	0x278	; 0x278 <usart_init>
  c6:	0e 94 55 01 	call	0x2aa	; 0x2aa <adc_init>
  ca:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <rgb_init>
  ce:	0e 94 1d 01 	call	0x23a	; 0x23a <servo_init>
  d2:	78 94       	sei
  d4:	80 e0       	ldi	r24, 0x00	; 0
  d6:	0e 94 0a 01 	call	0x214	; 0x214 <servo_set_angle>
  da:	2f ef       	ldi	r18, 0xFF	; 255
  dc:	83 ed       	ldi	r24, 0xD3	; 211
  de:	90 e3       	ldi	r25, 0x30	; 48
  e0:	21 50       	subi	r18, 0x01	; 1
  e2:	80 40       	sbci	r24, 0x00	; 0
  e4:	90 40       	sbci	r25, 0x00	; 0
  e6:	e1 f7       	brne	.-8      	; 0xe0 <main+0x1e>
  e8:	00 c0       	rjmp	.+0      	; 0xea <main+0x28>
  ea:	00 00       	nop
  ec:	8c e3       	ldi	r24, 0x3C	; 60
  ee:	0e 94 0a 01 	call	0x214	; 0x214 <servo_set_angle>
  f2:	2f ef       	ldi	r18, 0xFF	; 255
  f4:	83 ed       	ldi	r24, 0xD3	; 211
  f6:	90 e3       	ldi	r25, 0x30	; 48
  f8:	21 50       	subi	r18, 0x01	; 1
  fa:	80 40       	sbci	r24, 0x00	; 0
  fc:	90 40       	sbci	r25, 0x00	; 0
  fe:	e1 f7       	brne	.-8      	; 0xf8 <main+0x36>
 100:	00 c0       	rjmp	.+0      	; 0x102 <main+0x40>
 102:	00 00       	nop
 104:	88 e7       	ldi	r24, 0x78	; 120
 106:	0e 94 0a 01 	call	0x214	; 0x214 <servo_set_angle>
 10a:	2f ef       	ldi	r18, 0xFF	; 255
 10c:	83 ed       	ldi	r24, 0xD3	; 211
 10e:	90 e3       	ldi	r25, 0x30	; 48
 110:	21 50       	subi	r18, 0x01	; 1
 112:	80 40       	sbci	r24, 0x00	; 0
 114:	90 40       	sbci	r25, 0x00	; 0
 116:	e1 f7       	brne	.-8      	; 0x110 <main+0x4e>
 118:	00 c0       	rjmp	.+0      	; 0x11a <main+0x58>
 11a:	00 00       	nop
 11c:	84 eb       	ldi	r24, 0xB4	; 180
 11e:	0e 94 0a 01 	call	0x214	; 0x214 <servo_set_angle>
 122:	2f ef       	ldi	r18, 0xFF	; 255
 124:	83 ed       	ldi	r24, 0xD3	; 211
 126:	90 e3       	ldi	r25, 0x30	; 48
 128:	21 50       	subi	r18, 0x01	; 1
 12a:	80 40       	sbci	r24, 0x00	; 0
 12c:	90 40       	sbci	r25, 0x00	; 0
 12e:	e1 f7       	brne	.-8      	; 0x128 <main+0x66>
 130:	00 c0       	rjmp	.+0      	; 0x132 <main+0x70>
 132:	00 00       	nop
 134:	cf cf       	rjmp	.-98     	; 0xd4 <main+0x12>

Disassembly of section .text.__vector_19:

00000136 <__vector_19>:
 136:	1f 92       	push	r1
 138:	0f 92       	push	r0
 13a:	0f b6       	in	r0, 0x3f	; 63
 13c:	0f 92       	push	r0
 13e:	11 24       	eor	r1, r1
 140:	8f 93       	push	r24
 142:	ef 93       	push	r30
 144:	ff 93       	push	r31
 146:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <tx_head>
 14a:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <tx_tail>
 14e:	8e 13       	cpse	r24, r30
 150:	06 c0       	rjmp	.+12     	; 0x15e <__vector_19+0x28>
 152:	e1 ec       	ldi	r30, 0xC1	; 193
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	80 81       	ld	r24, Z
 158:	8f 7d       	andi	r24, 0xDF	; 223
 15a:	80 83       	st	Z, r24
 15c:	0c c0       	rjmp	.+24     	; 0x176 <__vector_19+0x40>
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	e0 58       	subi	r30, 0x80	; 128
 162:	fe 4f       	sbci	r31, 0xFE	; 254
 164:	80 81       	ld	r24, Z
 166:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 16a:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <tx_tail>
 16e:	8f 5f       	subi	r24, 0xFF	; 255
 170:	8f 77       	andi	r24, 0x7F	; 127
 172:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <tx_tail>
 176:	ff 91       	pop	r31
 178:	ef 91       	pop	r30
 17a:	8f 91       	pop	r24
 17c:	0f 90       	pop	r0
 17e:	0f be       	out	0x3f, r0	; 63
 180:	0f 90       	pop	r0
 182:	1f 90       	pop	r1
 184:	18 95       	reti

Disassembly of section .text.__vector_18:

00000186 <__vector_18>:
 186:	1f 92       	push	r1
 188:	0f 92       	push	r0
 18a:	0f b6       	in	r0, 0x3f	; 63
 18c:	0f 92       	push	r0
 18e:	11 24       	eor	r1, r1
 190:	2f 93       	push	r18
 192:	8f 93       	push	r24
 194:	9f 93       	push	r25
 196:	ef 93       	push	r30
 198:	ff 93       	push	r31
 19a:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 19e:	e0 91 01 02 	lds	r30, 0x0201	; 0x800201 <rx_head>
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	8e 0f       	add	r24, r30
 1a6:	8f 77       	andi	r24, 0x7F	; 127
 1a8:	90 91 00 02 	lds	r25, 0x0200	; 0x800200 <_end>
 1ac:	89 17       	cp	r24, r25
 1ae:	31 f0       	breq	.+12     	; 0x1bc <__vector_18+0x36>
 1b0:	f0 e0       	ldi	r31, 0x00	; 0
 1b2:	e0 50       	subi	r30, 0x00	; 0
 1b4:	ff 4f       	sbci	r31, 0xFF	; 255
 1b6:	20 83       	st	Z, r18
 1b8:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <rx_head>
 1bc:	ff 91       	pop	r31
 1be:	ef 91       	pop	r30
 1c0:	9f 91       	pop	r25
 1c2:	8f 91       	pop	r24
 1c4:	2f 91       	pop	r18
 1c6:	0f 90       	pop	r0
 1c8:	0f be       	out	0x3f, r0	; 63
 1ca:	0f 90       	pop	r0
 1cc:	1f 90       	pop	r1
 1ce:	18 95       	reti

Disassembly of section .text.libgcc.div:

000001d0 <__udivmodsi4>:
 1d0:	a1 e2       	ldi	r26, 0x21	; 33
 1d2:	1a 2e       	mov	r1, r26
 1d4:	aa 1b       	sub	r26, r26
 1d6:	bb 1b       	sub	r27, r27
 1d8:	fd 01       	movw	r30, r26
 1da:	0d c0       	rjmp	.+26     	; 0x1f6 <__udivmodsi4_ep>

000001dc <__udivmodsi4_loop>:
 1dc:	aa 1f       	adc	r26, r26
 1de:	bb 1f       	adc	r27, r27
 1e0:	ee 1f       	adc	r30, r30
 1e2:	ff 1f       	adc	r31, r31
 1e4:	a2 17       	cp	r26, r18
 1e6:	b3 07       	cpc	r27, r19
 1e8:	e4 07       	cpc	r30, r20
 1ea:	f5 07       	cpc	r31, r21
 1ec:	20 f0       	brcs	.+8      	; 0x1f6 <__udivmodsi4_ep>
 1ee:	a2 1b       	sub	r26, r18
 1f0:	b3 0b       	sbc	r27, r19
 1f2:	e4 0b       	sbc	r30, r20
 1f4:	f5 0b       	sbc	r31, r21

000001f6 <__udivmodsi4_ep>:
 1f6:	66 1f       	adc	r22, r22
 1f8:	77 1f       	adc	r23, r23
 1fa:	88 1f       	adc	r24, r24
 1fc:	99 1f       	adc	r25, r25
 1fe:	1a 94       	dec	r1
 200:	69 f7       	brne	.-38     	; 0x1dc <__udivmodsi4_loop>
 202:	60 95       	com	r22
 204:	70 95       	com	r23
 206:	80 95       	com	r24
 208:	90 95       	com	r25
 20a:	9b 01       	movw	r18, r22
 20c:	ac 01       	movw	r20, r24
 20e:	bd 01       	movw	r22, r26
 210:	cf 01       	movw	r24, r30
 212:	08 95       	ret

Disassembly of section .text.libgcc.mul:

0000025a <__umulhisi3>:
 25a:	a2 9f       	mul	r26, r18
 25c:	b0 01       	movw	r22, r0
 25e:	b3 9f       	mul	r27, r19
 260:	c0 01       	movw	r24, r0
 262:	a3 9f       	mul	r26, r19
 264:	70 0d       	add	r23, r0
 266:	81 1d       	adc	r24, r1
 268:	11 24       	eor	r1, r1
 26a:	91 1d       	adc	r25, r1
 26c:	b2 9f       	mul	r27, r18
 26e:	70 0d       	add	r23, r0
 270:	81 1d       	adc	r24, r1
 272:	11 24       	eor	r1, r1
 274:	91 1d       	adc	r25, r1
 276:	08 95       	ret

Disassembly of section .text.__dummy_fini:

000002c8 <_fini>:
 2c8:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000002ca <__funcs_on_exit>:
 2ca:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000002cc <__simulator_exit>:
 2cc:	08 95       	ret

Disassembly of section .text.exit:

00000294 <exit>:
 294:	ec 01       	movw	r28, r24
 296:	0e 94 65 01 	call	0x2ca	; 0x2ca <__funcs_on_exit>
 29a:	0e 94 64 01 	call	0x2c8	; 0x2c8 <_fini>
 29e:	ce 01       	movw	r24, r28
 2a0:	0e 94 66 01 	call	0x2cc	; 0x2cc <__simulator_exit>
 2a4:	ce 01       	movw	r24, r28
 2a6:	0e 94 62 01 	call	0x2c4	; 0x2c4 <_Exit>

Disassembly of section .text._Exit:

000002c4 <_Exit>:
 2c4:	0e 94 5f 00 	call	0xbe	; 0xbe <_exit>
