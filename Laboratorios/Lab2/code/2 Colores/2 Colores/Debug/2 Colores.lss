
2 Colores.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000876  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c2  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000080  00800100  00800100  00000876  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00000876  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 00000070  00000000  00000000  000008a5  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000915  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001117  00000000  00000000  000009dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007b3  00000000  00000000  00001af4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000638  00000000  00000000  000022a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000334  00000000  00000000  000028e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  00002c14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009d6  00000000  00000000  00002e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  000037f2  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  000007b4  000007b4  00000868  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000038c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .text.timer1_init 0000001e  000006b2  000006b2  00000766  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.timer1_disable 0000000c  000007a0  000007a0  00000854  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.usart_init 0000001c  0000070c  0000070c  000007c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.adc_init 0000000e  00000792  00000792  00000846  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.eint_init 0000001a  00000728  00000728  000007dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.eint_disable 00000008  000007ac  000007ac  00000860  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .progmemx.data 00000048  000000c2  000000c2  00000176  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 22 .text.identify_color 000001b6  0000014a  0000014a  000001fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.rgb_set 0000001e  000006d0  000006d0  00000784  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.usart_write_try 00000030  000005e8  000005e8  0000069c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.usart_write_str 00000040  00000576  00000576  0000062a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.adc_read 0000002a  00000618  00000618  000006cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.cycle_led 00000044  00000532  00000532  000005e6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.main    00000074  0000037c  0000037c  00000430  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.__vector_19 00000050  00000498  00000498  0000054c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.__vector_18 0000004a  000004e8  000004e8  0000059c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.__vector_13 0000007c  00000300  00000300  000003b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.__vector_21 00000032  000005b6  000005b6  0000066a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.__vector_1 00000056  000003f0  000003f0  000004a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.__vector_2 00000052  00000446  00000446  000004fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .bss.led_state 00000001  00800188  00800188  00000876  2**0
                  ALLOC
 36 .bss.debounce_enable 00000001  00800189  00800189  00000876  2**0
                  ALLOC
 37 .bss.adc_done 00000001  0080018a  0080018a  00000876  2**0
                  ALLOC
 38 .bss.adc_result 00000002  00800186  00800186  00000876  2**0
                  ALLOC
 39 .bss.event_pending 00000001  0080018b  0080018b  00000876  2**0
                  ALLOC
 40 .bss.rx_tail  00000001  0080018c  0080018c  00000876  2**0
                  ALLOC
 41 .bss.rx_head  00000001  0080018d  0080018d  00000876  2**0
                  ALLOC
 42 .bss.tx_tail  00000001  0080018e  0080018e  00000876  2**0
                  ALLOC
 43 .bss.tx_head  00000001  0080018f  0080018f  00000876  2**0
                  ALLOC
 44 .bss.sample_rgb 00000006  00800180  00800180  00000876  2**0
                  ALLOC
 45 .progmemx.data.color_refs 0000003f  0000010a  0000010a  000001be  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 46 .text.libgcc.mul 00000020  00000692  00000692  00000746  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.libgcc.div 00000028  00000642  00000642  000006f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.libgcc.mul 0000001e  000006ee  000006ee  000007a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.libgcc.mul 00000016  00000742  00000742  000007f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.libgcc  00000010  00000782  00000782  00000836  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.libgcc  00000014  0000076e  0000076e  00000822  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.libgcc.div 00000028  0000066a  0000066a  0000071e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.__dummy_fini 00000002  000007bc  000007bc  00000870  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.__dummy_funcs_on_exit 00000002  000007be  000007be  00000872  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.__dummy_simulator_exit 00000002  000007c0  000007c0  00000874  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.exit    00000016  00000758  00000758  0000080c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .text._Exit   00000004  000007b8  000007b8  0000086c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 37 00 	jmp	0x6e	; 0x6e <__ctors_end>
   4:	0c 94 f8 01 	jmp	0x3f0	; 0x3f0 <__vector_1>
   8:	0c 94 23 02 	jmp	0x446	; 0x446 <__vector_2>
   c:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>
  10:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>
  14:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>
  18:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>
  1c:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>
  20:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>
  24:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>
  28:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>
  2c:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>
  30:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>
  34:	0c 94 80 01 	jmp	0x300	; 0x300 <__vector_13>
  38:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>
  3c:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>
  40:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>
  44:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>
  48:	0c 94 74 02 	jmp	0x4e8	; 0x4e8 <__vector_18>
  4c:	0c 94 4c 02 	jmp	0x498	; 0x498 <__vector_19>
  50:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>
  54:	0c 94 db 02 	jmp	0x5b6	; 0x5b6 <__vector_21>
  58:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>
  5c:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>
  60:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>
  64:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	01 90       	ld	r0, Z+
  6c:	80 00       	.word	0x0080	; ????

0000006e <__ctors_end>:
  6e:	11 24       	eor	r1, r1
  70:	1f be       	out	0x3f, r1	; 63
  72:	cf ef       	ldi	r28, 0xFF	; 255
  74:	d8 e0       	ldi	r29, 0x08	; 8
  76:	de bf       	out	0x3e, r29	; 62
  78:	cd bf       	out	0x3d, r28	; 61

0000007a <__do_copy_data>:
  7a:	e8 e6       	ldi	r30, 0x68	; 104
  7c:	f0 e0       	ldi	r31, 0x00	; 0
  7e:	40 e0       	ldi	r20, 0x00	; 0
  80:	17 c0       	rjmp	.+46     	; 0xb0 <__do_clear_bss+0x8>
  82:	b5 91       	lpm	r27, Z+
  84:	a5 91       	lpm	r26, Z+
  86:	35 91       	lpm	r19, Z+
  88:	25 91       	lpm	r18, Z+
  8a:	05 91       	lpm	r16, Z+
  8c:	07 fd       	sbrc	r16, 7
  8e:	0c c0       	rjmp	.+24     	; 0xa8 <__do_clear_bss>
  90:	95 91       	lpm	r25, Z+
  92:	85 91       	lpm	r24, Z+
  94:	ef 01       	movw	r28, r30
  96:	f9 2f       	mov	r31, r25
  98:	e8 2f       	mov	r30, r24
  9a:	05 90       	lpm	r0, Z+
  9c:	0d 92       	st	X+, r0
  9e:	a2 17       	cp	r26, r18
  a0:	b3 07       	cpc	r27, r19
  a2:	d9 f7       	brne	.-10     	; 0x9a <__do_copy_data+0x20>
  a4:	fe 01       	movw	r30, r28
  a6:	04 c0       	rjmp	.+8      	; 0xb0 <__do_clear_bss+0x8>

000000a8 <__do_clear_bss>:
  a8:	1d 92       	st	X+, r1
  aa:	a2 17       	cp	r26, r18
  ac:	b3 07       	cpc	r27, r19
  ae:	e1 f7       	brne	.-8      	; 0xa8 <__do_clear_bss>
  b0:	ed 36       	cpi	r30, 0x6D	; 109
  b2:	f4 07       	cpc	r31, r20
  b4:	31 f7       	brne	.-52     	; 0x82 <__do_copy_data+0x8>
  b6:	0e 94 be 01 	call	0x37c	; 0x37c <main>
  ba:	0c 94 ac 03 	jmp	0x758	; 0x758 <exit>

000000be <_exit>:
  be:	f8 94       	cli

000000c0 <__stop_program>:
  c0:	ff cf       	rjmp	.-2      	; 0xc0 <__stop_program>

Disassembly of section .text:

000007b4 <__bad_interrupt>:
 7b4:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.timer1_init:

000006b2 <timer1_init>:
// ------------------------------------------------------------------


// Timer 1
void timer1_init(void) {
	TCCR1A = 0;                    // Normal mode
 6b2:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B = (1 << CS12) | (1 << CS10); // Prescaler 1024
 6b6:	85 e0       	ldi	r24, 0x05	; 5
 6b8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	TCNT1  = TIMER_1_PRELOAD;                // Preload for 1s overflow
 6bc:	88 e7       	ldi	r24, 0x78	; 120
 6be:	9f ef       	ldi	r25, 0xFF	; 255
 6c0:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 6c4:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	TIMSK1 = (1 << TOIE1);         // Enable overflow interrupt
 6c8:	81 e0       	ldi	r24, 0x01	; 1
 6ca:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
 6ce:	08 95       	ret

Disassembly of section .text.timer1_disable:

000007a0 <timer1_disable>:
}

void timer1_disable(void){
	TIMSK1 &= ~(1 << TOIE1);         // Enable overflow interrupt
 7a0:	ef e6       	ldi	r30, 0x6F	; 111
 7a2:	f0 e0       	ldi	r31, 0x00	; 0
 7a4:	80 81       	ld	r24, Z
 7a6:	8e 7f       	andi	r24, 0xFE	; 254
 7a8:	80 83       	st	Z, r24
 7aa:	08 95       	ret

Disassembly of section .text.usart_init:

0000070c <usart_init>:


// USART
void usart_init(void) {
	const uint16_t ubrr = (16000000UL / (16UL * 9600)) - 1;
	UBRR0H = ubrr >> 8;
 70c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = ubrr;
 710:	87 e6       	ldi	r24, 0x67	; 103
 712:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	UCSR0A = 0;
 716:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
	UCSR0B = (1 << TXEN0) | (1 << RXEN0) | (1 << RXCIE0);   // <- RX interrupt
 71a:	88 e9       	ldi	r24, 0x98	; 152
 71c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);               // 8N1
 720:	86 e0       	ldi	r24, 0x06	; 6
 722:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 726:	08 95       	ret

Disassembly of section .text.adc_init:

00000792 <adc_init>:
}

void adc_init(void) {
	ADMUX  = (1 << REFS0);                           // AVcc ref, ADC0 input
 792:	80 e4       	ldi	r24, 0x40	; 64
 794:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA = (1 << ADEN) | (1 << ADIE)               // Enable ADC + its interrupt
 798:	8f e8       	ldi	r24, 0x8F	; 143
 79a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 79e:	08 95       	ret

Disassembly of section .text.eint_init:

00000728 <eint_init>:
}


void eint_init(void) {
	// 1. Configure PD2 and PD3 as inputs
	DDRD &= ~((1 << PD2) | (1 << PD3));
 728:	8a b1       	in	r24, 0x0a	; 10
 72a:	83 7f       	andi	r24, 0xF3	; 243
 72c:	8a b9       	out	0x0a, r24	; 10

	// 2. Optionally enable internal pull-ups (if using buttons to GND)
	PORTD |= (1 << PD2) | (1 << PD3);
 72e:	8b b1       	in	r24, 0x0b	; 11
 730:	8c 60       	ori	r24, 0x0C	; 12
 732:	8b b9       	out	0x0b, r24	; 11

	MCUCR |= (1 << ISC01) | (1 << ISC00)
 734:	85 b7       	in	r24, 0x35	; 53
 736:	8f 60       	ori	r24, 0x0F	; 15
 738:	85 bf       	out	0x35, r24	; 53
	| (1 << ISC11) | (1 << ISC10);

	EIMSK |= (1 << INT0) | (1 << INT1);
 73a:	8d b3       	in	r24, 0x1d	; 29
 73c:	83 60       	ori	r24, 0x03	; 3
 73e:	8d bb       	out	0x1d, r24	; 29
 740:	08 95       	ret

Disassembly of section .text.eint_disable:

000007ac <eint_disable>:
}

void eint_disable(void) {
	EIMSK &= ~((1 << INT0) | (1 << INT1));   // Clear bits ? disable both
 7ac:	8d b3       	in	r24, 0x1d	; 29
 7ae:	8c 7f       	andi	r24, 0xFC	; 252
 7b0:	8d bb       	out	0x1d, r24	; 29
 7b2:	08 95       	ret

Disassembly of section .text.identify_color:

0000014a <identify_color>:
	}

	// Reverse digits into final buffer
	while (i > 0) buffer[j++] = temp[--i];
	buffer[j] = '\0';
}
 14a:	2f 92       	push	r2
 14c:	3f 92       	push	r3
 14e:	4f 92       	push	r4
 150:	5f 92       	push	r5
 152:	6f 92       	push	r6
 154:	7f 92       	push	r7
 156:	8f 92       	push	r8
 158:	9f 92       	push	r9
 15a:	af 92       	push	r10
 15c:	bf 92       	push	r11
 15e:	cf 92       	push	r12
 160:	df 92       	push	r13
 162:	ef 92       	push	r14
 164:	ff 92       	push	r15
 166:	1f 93       	push	r17
 168:	cf 93       	push	r28
 16a:	df 93       	push	r29
 16c:	cd b7       	in	r28, 0x3d	; 61
 16e:	de b7       	in	r29, 0x3e	; 62
 170:	2d 97       	sbiw	r28, 0x0d	; 13
 172:	0f b6       	in	r0, 0x3f	; 63
 174:	f8 94       	cli
 176:	de bf       	out	0x3e, r29	; 62
 178:	0f be       	out	0x3f, r0	; 63
 17a:	cd bf       	out	0x3d, r28	; 61
 17c:	1c 01       	movw	r2, r24
 17e:	7e 83       	std	Y+6, r23	; 0x06
 180:	6d 83       	std	Y+5, r22	; 0x05
 182:	58 87       	std	Y+8, r21	; 0x08
 184:	4f 83       	std	Y+7, r20	; 0x07
 186:	10 e0       	ldi	r17, 0x00	; 0
 188:	82 ec       	ldi	r24, 0xC2	; 194
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	a0 e0       	ldi	r26, 0x00	; 0
 18e:	89 87       	std	Y+9, r24	; 0x09
 190:	9a 87       	std	Y+10, r25	; 0x0a
 192:	ab 87       	std	Y+11, r26	; 0x0b
 194:	8f ef       	ldi	r24, 0xFF	; 255
 196:	9f ef       	ldi	r25, 0xFF	; 255
 198:	dc 01       	movw	r26, r24
 19a:	89 83       	std	Y+1, r24	; 0x01
 19c:	9a 83       	std	Y+2, r25	; 0x02
 19e:	ab 83       	std	Y+3, r26	; 0x03
 1a0:	bc 83       	std	Y+4, r27	; 0x04
 1a2:	90 c0       	rjmp	.+288    	; 0x2c4 <identify_color+0x17a>
 1a4:	21 01       	movw	r4, r2
 1a6:	61 2c       	mov	r6, r1
 1a8:	71 2c       	mov	r7, r1
 1aa:	a1 2f       	mov	r26, r17
 1ac:	b0 e0       	ldi	r27, 0x00	; 0
 1ae:	bd 87       	std	Y+13, r27	; 0x0d
 1b0:	ac 87       	std	Y+12, r26	; 0x0c
 1b2:	cd 01       	movw	r24, r26
 1b4:	88 0f       	add	r24, r24
 1b6:	99 1f       	adc	r25, r25
 1b8:	88 0f       	add	r24, r24
 1ba:	99 1f       	adc	r25, r25
 1bc:	88 0f       	add	r24, r24
 1be:	99 1f       	adc	r25, r25
 1c0:	8a 0f       	add	r24, r26
 1c2:	9b 1f       	adc	r25, r27
 1c4:	9c 01       	movw	r18, r24
 1c6:	2d 5f       	subi	r18, 0xFD	; 253
 1c8:	3f 4f       	sbci	r19, 0xFF	; 255
 1ca:	03 2e       	mov	r0, r19
 1cc:	00 0c       	add	r0, r0
 1ce:	44 0b       	sbc	r20, r20
 1d0:	26 5f       	subi	r18, 0xF6	; 246
 1d2:	3e 4f       	sbci	r19, 0xFE	; 254
 1d4:	4f 4f       	sbci	r20, 0xFF	; 255
 1d6:	f9 01       	movw	r30, r18
 1d8:	54 2f       	mov	r21, r20
 1da:	0e 94 c1 03 	call	0x782	; 0x782 <__xload_2>
 1de:	46 1a       	sub	r4, r22
 1e0:	57 0a       	sbc	r5, r23
 1e2:	61 08       	sbc	r6, r1
 1e4:	71 08       	sbc	r7, r1
 1e6:	2d 81       	ldd	r18, Y+5	; 0x05
 1e8:	3e 81       	ldd	r19, Y+6	; 0x06
 1ea:	49 01       	movw	r8, r18
 1ec:	a1 2c       	mov	r10, r1
 1ee:	b1 2c       	mov	r11, r1
 1f0:	9c 01       	movw	r18, r24
 1f2:	2b 5f       	subi	r18, 0xFB	; 251
 1f4:	3f 4f       	sbci	r19, 0xFF	; 255
 1f6:	03 2e       	mov	r0, r19
 1f8:	00 0c       	add	r0, r0
 1fa:	44 0b       	sbc	r20, r20
 1fc:	26 5f       	subi	r18, 0xF6	; 246
 1fe:	3e 4f       	sbci	r19, 0xFE	; 254
 200:	4f 4f       	sbci	r20, 0xFF	; 255
 202:	f9 01       	movw	r30, r18
 204:	54 2f       	mov	r21, r20
 206:	0e 94 c1 03 	call	0x782	; 0x782 <__xload_2>
 20a:	86 1a       	sub	r8, r22
 20c:	97 0a       	sbc	r9, r23
 20e:	a1 08       	sbc	r10, r1
 210:	b1 08       	sbc	r11, r1
 212:	af 81       	ldd	r26, Y+7	; 0x07
 214:	b8 85       	ldd	r27, Y+8	; 0x08
 216:	6d 01       	movw	r12, r26
 218:	e1 2c       	mov	r14, r1
 21a:	f1 2c       	mov	r15, r1
 21c:	07 96       	adiw	r24, 0x07	; 7
 21e:	09 2e       	mov	r0, r25
 220:	00 0c       	add	r0, r0
 222:	aa 0b       	sbc	r26, r26
 224:	86 5f       	subi	r24, 0xF6	; 246
 226:	9e 4f       	sbci	r25, 0xFE	; 254
 228:	af 4f       	sbci	r26, 0xFF	; 255
 22a:	fc 01       	movw	r30, r24
 22c:	5a 2f       	mov	r21, r26
 22e:	0e 94 c1 03 	call	0x782	; 0x782 <__xload_2>
 232:	c6 1a       	sub	r12, r22
 234:	d7 0a       	sbc	r13, r23
 236:	e1 08       	sbc	r14, r1
 238:	f1 08       	sbc	r15, r1
 23a:	a3 01       	movw	r20, r6
 23c:	92 01       	movw	r18, r4
 23e:	c3 01       	movw	r24, r6
 240:	b2 01       	movw	r22, r4
 242:	0e 94 49 03 	call	0x692	; 0x692 <__mulsi3>
 246:	2b 01       	movw	r4, r22
 248:	3c 01       	movw	r6, r24
 24a:	a5 01       	movw	r20, r10
 24c:	94 01       	movw	r18, r8
 24e:	c5 01       	movw	r24, r10
 250:	b4 01       	movw	r22, r8
 252:	0e 94 49 03 	call	0x692	; 0x692 <__mulsi3>
 256:	46 0e       	add	r4, r22
 258:	57 1e       	adc	r5, r23
 25a:	68 1e       	adc	r6, r24
 25c:	79 1e       	adc	r7, r25
 25e:	a7 01       	movw	r20, r14
 260:	96 01       	movw	r18, r12
 262:	c7 01       	movw	r24, r14
 264:	b6 01       	movw	r22, r12
 266:	0e 94 49 03 	call	0x692	; 0x692 <__mulsi3>
 26a:	46 0e       	add	r4, r22
 26c:	57 1e       	adc	r5, r23
 26e:	68 1e       	adc	r6, r24
 270:	79 1e       	adc	r7, r25
 272:	89 81       	ldd	r24, Y+1	; 0x01
 274:	9a 81       	ldd	r25, Y+2	; 0x02
 276:	ab 81       	ldd	r26, Y+3	; 0x03
 278:	bc 81       	ldd	r27, Y+4	; 0x04
 27a:	48 16       	cp	r4, r24
 27c:	59 06       	cpc	r5, r25
 27e:	6a 06       	cpc	r6, r26
 280:	7b 06       	cpc	r7, r27
 282:	f8 f4       	brcc	.+62     	; 0x2c2 <identify_color+0x178>
 284:	8c 85       	ldd	r24, Y+12	; 0x0c
 286:	9d 85       	ldd	r25, Y+13	; 0x0d
 288:	88 0f       	add	r24, r24
 28a:	99 1f       	adc	r25, r25
 28c:	88 0f       	add	r24, r24
 28e:	99 1f       	adc	r25, r25
 290:	88 0f       	add	r24, r24
 292:	99 1f       	adc	r25, r25
 294:	ac 85       	ldd	r26, Y+12	; 0x0c
 296:	bd 85       	ldd	r27, Y+13	; 0x0d
 298:	a8 0f       	add	r26, r24
 29a:	b9 1f       	adc	r27, r25
 29c:	ba 83       	std	Y+2, r27	; 0x02
 29e:	a9 83       	std	Y+1, r26	; 0x01
 2a0:	cd 01       	movw	r24, r26
 2a2:	bb 0f       	add	r27, r27
 2a4:	aa 0b       	sbc	r26, r26
 2a6:	86 5f       	subi	r24, 0xF6	; 246
 2a8:	9e 4f       	sbci	r25, 0xFE	; 254
 2aa:	af 4f       	sbci	r26, 0xFF	; 255
 2ac:	fc 01       	movw	r30, r24
 2ae:	5a 2f       	mov	r21, r26
 2b0:	0e 94 b7 03 	call	0x76e	; 0x76e <__xload_3>
 2b4:	69 87       	std	Y+9, r22	; 0x09
 2b6:	7a 87       	std	Y+10, r23	; 0x0a
 2b8:	8b 87       	std	Y+11, r24	; 0x0b
 2ba:	49 82       	std	Y+1, r4	; 0x01
 2bc:	5a 82       	std	Y+2, r5	; 0x02
 2be:	6b 82       	std	Y+3, r6	; 0x03
 2c0:	7c 82       	std	Y+4, r7	; 0x04
 2c2:	1f 5f       	subi	r17, 0xFF	; 255
 2c4:	17 30       	cpi	r17, 0x07	; 7
 2c6:	08 f4       	brcc	.+2      	; 0x2ca <identify_color+0x180>
 2c8:	6d cf       	rjmp	.-294    	; 0x1a4 <identify_color+0x5a>
 2ca:	69 85       	ldd	r22, Y+9	; 0x09
 2cc:	7a 85       	ldd	r23, Y+10	; 0x0a
 2ce:	8b 85       	ldd	r24, Y+11	; 0x0b
 2d0:	2d 96       	adiw	r28, 0x0d	; 13
 2d2:	0f b6       	in	r0, 0x3f	; 63
 2d4:	f8 94       	cli
 2d6:	de bf       	out	0x3e, r29	; 62
 2d8:	0f be       	out	0x3f, r0	; 63
 2da:	cd bf       	out	0x3d, r28	; 61
 2dc:	df 91       	pop	r29
 2de:	cf 91       	pop	r28
 2e0:	1f 91       	pop	r17
 2e2:	ff 90       	pop	r15
 2e4:	ef 90       	pop	r14
 2e6:	df 90       	pop	r13
 2e8:	cf 90       	pop	r12
 2ea:	bf 90       	pop	r11
 2ec:	af 90       	pop	r10
 2ee:	9f 90       	pop	r9
 2f0:	8f 90       	pop	r8
 2f2:	7f 90       	pop	r7
 2f4:	6f 90       	pop	r6
 2f6:	5f 90       	pop	r5
 2f8:	4f 90       	pop	r4
 2fa:	3f 90       	pop	r3
 2fc:	2f 90       	pop	r2
 2fe:	08 95       	ret

Disassembly of section .text.rgb_set:

000006d0 <rgb_set>:
	return best_name;
}

// --- Update LED color ---
void rgb_set(uint8_t r, uint8_t g, uint8_t b) {
	PORTB = (PORTB & ~((1 << RED)|(1 << GREEN)|(1 << BLUE))) |
 6d0:	95 b1       	in	r25, 0x05	; 5
	((r<<RED) | (g<<GREEN) | (b<<BLUE));
 6d2:	70 e0       	ldi	r23, 0x00	; 0
 6d4:	66 0f       	add	r22, r22
 6d6:	77 1f       	adc	r23, r23
 6d8:	50 e0       	ldi	r21, 0x00	; 0
 6da:	44 0f       	add	r20, r20
 6dc:	55 1f       	adc	r21, r21
 6de:	44 0f       	add	r20, r20
 6e0:	55 1f       	adc	r21, r21
	return best_name;
}

// --- Update LED color ---
void rgb_set(uint8_t r, uint8_t g, uint8_t b) {
	PORTB = (PORTB & ~((1 << RED)|(1 << GREEN)|(1 << BLUE))) |
 6e2:	86 2b       	or	r24, r22
 6e4:	48 2b       	or	r20, r24
 6e6:	98 7f       	andi	r25, 0xF8	; 248
 6e8:	49 2b       	or	r20, r25
 6ea:	45 b9       	out	0x05, r20	; 5
 6ec:	08 95       	ret

Disassembly of section .text.usart_write_try:

000005e8 <usart_write_try>:
	}

	// Reverse digits into final buffer
	while (i > 0) buffer[j++] = temp[--i];
	buffer[j] = '\0';
}
 5e8:	e0 91 8f 01 	lds	r30, 0x018F	; 0x80018f <tx_head>
 5ec:	91 e0       	ldi	r25, 0x01	; 1
 5ee:	9e 0f       	add	r25, r30
 5f0:	9f 73       	andi	r25, 0x3F	; 63
 5f2:	20 91 8e 01 	lds	r18, 0x018E	; 0x80018e <tx_tail>
 5f6:	92 17       	cp	r25, r18
 5f8:	69 f0       	breq	.+26     	; 0x614 <usart_write_try+0x2c>
 5fa:	f0 e0       	ldi	r31, 0x00	; 0
 5fc:	e0 5c       	subi	r30, 0xC0	; 192
 5fe:	fe 4f       	sbci	r31, 0xFE	; 254
 600:	80 83       	st	Z, r24
 602:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <tx_head>
 606:	e1 ec       	ldi	r30, 0xC1	; 193
 608:	f0 e0       	ldi	r31, 0x00	; 0
 60a:	80 81       	ld	r24, Z
 60c:	80 62       	ori	r24, 0x20	; 32
 60e:	80 83       	st	Z, r24
 610:	81 e0       	ldi	r24, 0x01	; 1
 612:	08 95       	ret
 614:	80 e0       	ldi	r24, 0x00	; 0
 616:	08 95       	ret

Disassembly of section .text.usart_write_str:

00000576 <usart_write_str>:
 576:	cf 92       	push	r12
 578:	df 92       	push	r13
 57a:	ef 92       	push	r14
 57c:	cf 93       	push	r28
 57e:	df 93       	push	r29
 580:	6b 01       	movw	r12, r22
 582:	e8 2e       	mov	r14, r24
 584:	c0 e0       	ldi	r28, 0x00	; 0
 586:	d0 e0       	ldi	r29, 0x00	; 0
 588:	01 c0       	rjmp	.+2      	; 0x58c <usart_write_str+0x16>
 58a:	21 96       	adiw	r28, 0x01	; 1
 58c:	f6 01       	movw	r30, r12
 58e:	84 91       	lpm	r24, Z
 590:	e7 fc       	sbrc	r14, 7
 592:	80 81       	ld	r24, Z
 594:	88 23       	and	r24, r24
 596:	41 f0       	breq	.+16     	; 0x5a8 <usart_write_str+0x32>
 598:	9f ef       	ldi	r25, 0xFF	; 255
 59a:	c9 1a       	sub	r12, r25
 59c:	d9 0a       	sbc	r13, r25
 59e:	e9 0a       	sbc	r14, r25
 5a0:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <usart_write_try>
 5a4:	81 11       	cpse	r24, r1
 5a6:	f1 cf       	rjmp	.-30     	; 0x58a <usart_write_str+0x14>
 5a8:	ce 01       	movw	r24, r28
 5aa:	df 91       	pop	r29
 5ac:	cf 91       	pop	r28
 5ae:	ef 90       	pop	r14
 5b0:	df 90       	pop	r13
 5b2:	cf 90       	pop	r12
 5b4:	08 95       	ret

Disassembly of section .text.adc_read:

00000618 <adc_read>:
 618:	ec e7       	ldi	r30, 0x7C	; 124
 61a:	f0 e0       	ldi	r31, 0x00	; 0
 61c:	90 81       	ld	r25, Z
 61e:	90 7f       	andi	r25, 0xF0	; 240
 620:	8f 70       	andi	r24, 0x0F	; 15
 622:	89 2b       	or	r24, r25
 624:	80 83       	st	Z, r24
 626:	ea e7       	ldi	r30, 0x7A	; 122
 628:	f0 e0       	ldi	r31, 0x00	; 0
 62a:	80 81       	ld	r24, Z
 62c:	80 64       	ori	r24, 0x40	; 64
 62e:	80 83       	st	Z, r24
 630:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 634:	86 fd       	sbrc	r24, 6
 636:	fc cf       	rjmp	.-8      	; 0x630 <adc_read+0x18>
 638:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 63c:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 640:	08 95       	ret

Disassembly of section .text.cycle_led:

00000532 <cycle_led>:
 532:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <led_state>
 536:	90 e0       	ldi	r25, 0x00	; 0
 538:	01 96       	adiw	r24, 0x01	; 1
 53a:	63 e0       	ldi	r22, 0x03	; 3
 53c:	70 e0       	ldi	r23, 0x00	; 0
 53e:	0e 94 21 03 	call	0x642	; 0x642 <__divmodhi4>
 542:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <led_state>
 546:	81 30       	cpi	r24, 0x01	; 1
 548:	51 f0       	breq	.+20     	; 0x55e <cycle_led+0x2c>
 54a:	18 f0       	brcs	.+6      	; 0x552 <cycle_led+0x20>
 54c:	82 30       	cpi	r24, 0x02	; 2
 54e:	69 f0       	breq	.+26     	; 0x56a <cycle_led+0x38>
 550:	08 95       	ret
 552:	40 e0       	ldi	r20, 0x00	; 0
 554:	60 e0       	ldi	r22, 0x00	; 0
 556:	81 e0       	ldi	r24, 0x01	; 1
 558:	0e 94 68 03 	call	0x6d0	; 0x6d0 <rgb_set>
 55c:	08 95       	ret
 55e:	40 e0       	ldi	r20, 0x00	; 0
 560:	61 e0       	ldi	r22, 0x01	; 1
 562:	80 e0       	ldi	r24, 0x00	; 0
 564:	0e 94 68 03 	call	0x6d0	; 0x6d0 <rgb_set>
 568:	08 95       	ret
 56a:	41 e0       	ldi	r20, 0x01	; 1
 56c:	60 e0       	ldi	r22, 0x00	; 0
 56e:	80 e0       	ldi	r24, 0x00	; 0
 570:	0e 94 68 03 	call	0x6d0	; 0x6d0 <rgb_set>
 574:	08 95       	ret

Disassembly of section .text.main:

0000037c <main>:
 37c:	0e 94 86 03 	call	0x70c	; 0x70c <usart_init>
 380:	0e 94 c9 03 	call	0x792	; 0x792 <adc_init>
 384:	0e 94 94 03 	call	0x728	; 0x728 <eint_init>
 388:	84 b1       	in	r24, 0x04	; 4
 38a:	87 60       	ori	r24, 0x07	; 7
 38c:	84 b9       	out	0x04, r24	; 4
 38e:	78 94       	sei
 390:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <event_pending>
 394:	88 23       	and	r24, r24
 396:	e1 f3       	breq	.-8      	; 0x390 <main+0x14>
 398:	80 e0       	ldi	r24, 0x00	; 0
 39a:	0e 94 0c 03 	call	0x618	; 0x618 <adc_read>
 39e:	20 91 88 01 	lds	r18, 0x0188	; 0x800188 <led_state>
 3a2:	e2 2f       	mov	r30, r18
 3a4:	f0 e0       	ldi	r31, 0x00	; 0
 3a6:	ee 0f       	add	r30, r30
 3a8:	ff 1f       	adc	r31, r31
 3aa:	e0 58       	subi	r30, 0x80	; 128
 3ac:	fe 4f       	sbci	r31, 0xFE	; 254
 3ae:	91 83       	std	Z+1, r25	; 0x01
 3b0:	80 83       	st	Z, r24
 3b2:	22 30       	cpi	r18, 0x02	; 2
 3b4:	d1 f4       	brne	.+52     	; 0x3ea <main+0x6e>
 3b6:	e0 e8       	ldi	r30, 0x80	; 128
 3b8:	f1 e0       	ldi	r31, 0x01	; 1
 3ba:	44 81       	ldd	r20, Z+4	; 0x04
 3bc:	55 81       	ldd	r21, Z+5	; 0x05
 3be:	62 81       	ldd	r22, Z+2	; 0x02
 3c0:	73 81       	ldd	r23, Z+3	; 0x03
 3c2:	80 81       	ld	r24, Z
 3c4:	91 81       	ldd	r25, Z+1	; 0x01
 3c6:	0e 94 a5 00 	call	0x14a	; 0x14a <identify_color>
 3ca:	6b 01       	movw	r12, r22
 3cc:	e8 2e       	mov	r14, r24
 3ce:	6a ec       	ldi	r22, 0xCA	; 202
 3d0:	70 e0       	ldi	r23, 0x00	; 0
 3d2:	80 e0       	ldi	r24, 0x00	; 0
 3d4:	0e 94 bb 02 	call	0x576	; 0x576 <usart_write_str>
 3d8:	8e 2d       	mov	r24, r14
 3da:	b6 01       	movw	r22, r12
 3dc:	0e 94 bb 02 	call	0x576	; 0x576 <usart_write_str>
 3e0:	62 ed       	ldi	r22, 0xD2	; 210
 3e2:	70 e0       	ldi	r23, 0x00	; 0
 3e4:	80 e0       	ldi	r24, 0x00	; 0
 3e6:	0e 94 bb 02 	call	0x576	; 0x576 <usart_write_str>
 3ea:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <event_pending>
 3ee:	d0 cf       	rjmp	.-96     	; 0x390 <main+0x14>

Disassembly of section .text.__vector_19:

00000498 <__vector_19>:
 498:	1f 92       	push	r1
 49a:	0f 92       	push	r0
 49c:	0f b6       	in	r0, 0x3f	; 63
 49e:	0f 92       	push	r0
 4a0:	11 24       	eor	r1, r1
 4a2:	8f 93       	push	r24
 4a4:	ef 93       	push	r30
 4a6:	ff 93       	push	r31
 4a8:	80 91 8f 01 	lds	r24, 0x018F	; 0x80018f <tx_head>
 4ac:	e0 91 8e 01 	lds	r30, 0x018E	; 0x80018e <tx_tail>
 4b0:	8e 13       	cpse	r24, r30
 4b2:	06 c0       	rjmp	.+12     	; 0x4c0 <__vector_19+0x28>
 4b4:	e1 ec       	ldi	r30, 0xC1	; 193
 4b6:	f0 e0       	ldi	r31, 0x00	; 0
 4b8:	80 81       	ld	r24, Z
 4ba:	8f 7d       	andi	r24, 0xDF	; 223
 4bc:	80 83       	st	Z, r24
 4be:	0c c0       	rjmp	.+24     	; 0x4d8 <__vector_19+0x40>
 4c0:	f0 e0       	ldi	r31, 0x00	; 0
 4c2:	e0 5c       	subi	r30, 0xC0	; 192
 4c4:	fe 4f       	sbci	r31, 0xFE	; 254
 4c6:	80 81       	ld	r24, Z
 4c8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 4cc:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <tx_tail>
 4d0:	8f 5f       	subi	r24, 0xFF	; 255
 4d2:	8f 73       	andi	r24, 0x3F	; 63
 4d4:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <tx_tail>
 4d8:	ff 91       	pop	r31
 4da:	ef 91       	pop	r30
 4dc:	8f 91       	pop	r24
 4de:	0f 90       	pop	r0
 4e0:	0f be       	out	0x3f, r0	; 63
 4e2:	0f 90       	pop	r0
 4e4:	1f 90       	pop	r1
 4e6:	18 95       	reti

Disassembly of section .text.__vector_18:

000004e8 <__vector_18>:
 4e8:	1f 92       	push	r1
 4ea:	0f 92       	push	r0
 4ec:	0f b6       	in	r0, 0x3f	; 63
 4ee:	0f 92       	push	r0
 4f0:	11 24       	eor	r1, r1
 4f2:	2f 93       	push	r18
 4f4:	8f 93       	push	r24
 4f6:	9f 93       	push	r25
 4f8:	ef 93       	push	r30
 4fa:	ff 93       	push	r31
 4fc:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 500:	e0 91 8d 01 	lds	r30, 0x018D	; 0x80018d <rx_head>
 504:	81 e0       	ldi	r24, 0x01	; 1
 506:	8e 0f       	add	r24, r30
 508:	8f 73       	andi	r24, 0x3F	; 63
 50a:	90 91 8c 01 	lds	r25, 0x018C	; 0x80018c <rx_tail>
 50e:	89 17       	cp	r24, r25
 510:	31 f0       	breq	.+12     	; 0x51e <__vector_18+0x36>
 512:	f0 e0       	ldi	r31, 0x00	; 0
 514:	e0 50       	subi	r30, 0x00	; 0
 516:	ff 4f       	sbci	r31, 0xFF	; 255
 518:	20 83       	st	Z, r18
 51a:	80 93 8d 01 	sts	0x018D, r24	; 0x80018d <rx_head>
 51e:	ff 91       	pop	r31
 520:	ef 91       	pop	r30
 522:	9f 91       	pop	r25
 524:	8f 91       	pop	r24
 526:	2f 91       	pop	r18
 528:	0f 90       	pop	r0
 52a:	0f be       	out	0x3f, r0	; 63
 52c:	0f 90       	pop	r0
 52e:	1f 90       	pop	r1
 530:	18 95       	reti

Disassembly of section .text.__vector_13:

00000300 <__vector_13>:
 300:	1f 92       	push	r1
 302:	0f 92       	push	r0
 304:	0f b6       	in	r0, 0x3f	; 63
 306:	0f 92       	push	r0
 308:	11 24       	eor	r1, r1
 30a:	2f 93       	push	r18
 30c:	3f 93       	push	r19
 30e:	4f 93       	push	r20
 310:	5f 93       	push	r21
 312:	6f 93       	push	r22
 314:	7f 93       	push	r23
 316:	8f 93       	push	r24
 318:	9f 93       	push	r25
 31a:	af 93       	push	r26
 31c:	bf 93       	push	r27
 31e:	ef 93       	push	r30
 320:	ff 93       	push	r31
 322:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <adc_done>
 326:	81 11       	cpse	r24, r1
 328:	05 c0       	rjmp	.+10     	; 0x334 <__vector_13+0x34>
 32a:	ea e7       	ldi	r30, 0x7A	; 122
 32c:	f0 e0       	ldi	r31, 0x00	; 0
 32e:	80 81       	ld	r24, Z
 330:	80 64       	ori	r24, 0x40	; 64
 332:	80 83       	st	Z, r24
 334:	88 e7       	ldi	r24, 0x78	; 120
 336:	9f ef       	ldi	r25, 0xFF	; 255
 338:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 33c:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 340:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <debounce_enable>
 344:	88 23       	and	r24, r24
 346:	21 f0       	breq	.+8      	; 0x350 <__vector_13+0x50>
 348:	0e 94 94 03 	call	0x728	; 0x728 <eint_init>
 34c:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <debounce_enable>
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <event_pending>
 356:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <timer1_disable>
 35a:	ff 91       	pop	r31
 35c:	ef 91       	pop	r30
 35e:	bf 91       	pop	r27
 360:	af 91       	pop	r26
 362:	9f 91       	pop	r25
 364:	8f 91       	pop	r24
 366:	7f 91       	pop	r23
 368:	6f 91       	pop	r22
 36a:	5f 91       	pop	r21
 36c:	4f 91       	pop	r20
 36e:	3f 91       	pop	r19
 370:	2f 91       	pop	r18
 372:	0f 90       	pop	r0
 374:	0f be       	out	0x3f, r0	; 63
 376:	0f 90       	pop	r0
 378:	1f 90       	pop	r1
 37a:	18 95       	reti

Disassembly of section .text.__vector_21:

000005b6 <__vector_21>:
 5b6:	1f 92       	push	r1
 5b8:	0f 92       	push	r0
 5ba:	0f b6       	in	r0, 0x3f	; 63
 5bc:	0f 92       	push	r0
 5be:	11 24       	eor	r1, r1
 5c0:	8f 93       	push	r24
 5c2:	9f 93       	push	r25
 5c4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 5c8:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
 5cc:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <adc_result+0x1>
 5d0:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <adc_result>
 5d4:	81 e0       	ldi	r24, 0x01	; 1
 5d6:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <adc_done>
 5da:	9f 91       	pop	r25
 5dc:	8f 91       	pop	r24
 5de:	0f 90       	pop	r0
 5e0:	0f be       	out	0x3f, r0	; 63
 5e2:	0f 90       	pop	r0
 5e4:	1f 90       	pop	r1
 5e6:	18 95       	reti

Disassembly of section .text.__vector_1:

000003f0 <__vector_1>:
 3f0:	1f 92       	push	r1
 3f2:	0f 92       	push	r0
 3f4:	0f b6       	in	r0, 0x3f	; 63
 3f6:	0f 92       	push	r0
 3f8:	11 24       	eor	r1, r1
 3fa:	2f 93       	push	r18
 3fc:	3f 93       	push	r19
 3fe:	4f 93       	push	r20
 400:	5f 93       	push	r21
 402:	6f 93       	push	r22
 404:	7f 93       	push	r23
 406:	8f 93       	push	r24
 408:	9f 93       	push	r25
 40a:	af 93       	push	r26
 40c:	bf 93       	push	r27
 40e:	ef 93       	push	r30
 410:	ff 93       	push	r31
 412:	0e 94 99 02 	call	0x532	; 0x532 <cycle_led>
 416:	0e 94 d6 03 	call	0x7ac	; 0x7ac <eint_disable>
 41a:	81 e0       	ldi	r24, 0x01	; 1
 41c:	80 93 89 01 	sts	0x0189, r24	; 0x800189 <debounce_enable>
 420:	0e 94 59 03 	call	0x6b2	; 0x6b2 <timer1_init>
 424:	ff 91       	pop	r31
 426:	ef 91       	pop	r30
 428:	bf 91       	pop	r27
 42a:	af 91       	pop	r26
 42c:	9f 91       	pop	r25
 42e:	8f 91       	pop	r24
 430:	7f 91       	pop	r23
 432:	6f 91       	pop	r22
 434:	5f 91       	pop	r21
 436:	4f 91       	pop	r20
 438:	3f 91       	pop	r19
 43a:	2f 91       	pop	r18
 43c:	0f 90       	pop	r0
 43e:	0f be       	out	0x3f, r0	; 63
 440:	0f 90       	pop	r0
 442:	1f 90       	pop	r1
 444:	18 95       	reti

Disassembly of section .text.__vector_2:

00000446 <__vector_2>:
 446:	1f 92       	push	r1
 448:	0f 92       	push	r0
 44a:	0f b6       	in	r0, 0x3f	; 63
 44c:	0f 92       	push	r0
 44e:	11 24       	eor	r1, r1
 450:	2f 93       	push	r18
 452:	3f 93       	push	r19
 454:	4f 93       	push	r20
 456:	5f 93       	push	r21
 458:	6f 93       	push	r22
 45a:	7f 93       	push	r23
 45c:	8f 93       	push	r24
 45e:	9f 93       	push	r25
 460:	af 93       	push	r26
 462:	bf 93       	push	r27
 464:	ef 93       	push	r30
 466:	ff 93       	push	r31
 468:	0e 94 d6 03 	call	0x7ac	; 0x7ac <eint_disable>
 46c:	81 e0       	ldi	r24, 0x01	; 1
 46e:	80 93 89 01 	sts	0x0189, r24	; 0x800189 <debounce_enable>
 472:	0e 94 59 03 	call	0x6b2	; 0x6b2 <timer1_init>
 476:	ff 91       	pop	r31
 478:	ef 91       	pop	r30
 47a:	bf 91       	pop	r27
 47c:	af 91       	pop	r26
 47e:	9f 91       	pop	r25
 480:	8f 91       	pop	r24
 482:	7f 91       	pop	r23
 484:	6f 91       	pop	r22
 486:	5f 91       	pop	r21
 488:	4f 91       	pop	r20
 48a:	3f 91       	pop	r19
 48c:	2f 91       	pop	r18
 48e:	0f 90       	pop	r0
 490:	0f be       	out	0x3f, r0	; 63
 492:	0f 90       	pop	r0
 494:	1f 90       	pop	r1
 496:	18 95       	reti

Disassembly of section .text.libgcc.mul:

00000692 <__mulsi3>:
 692:	db 01       	movw	r26, r22
 694:	8f 93       	push	r24
 696:	9f 93       	push	r25
 698:	0e 94 a1 03 	call	0x742	; 0x742 <__muluhisi3>
 69c:	bf 91       	pop	r27
 69e:	af 91       	pop	r26
 6a0:	a2 9f       	mul	r26, r18
 6a2:	80 0d       	add	r24, r0
 6a4:	91 1d       	adc	r25, r1
 6a6:	a3 9f       	mul	r26, r19
 6a8:	90 0d       	add	r25, r0
 6aa:	b2 9f       	mul	r27, r18
 6ac:	90 0d       	add	r25, r0
 6ae:	11 24       	eor	r1, r1
 6b0:	08 95       	ret

Disassembly of section .text.libgcc.div:

00000642 <__divmodhi4>:
 642:	97 fb       	bst	r25, 7
 644:	07 2e       	mov	r0, r23
 646:	16 f4       	brtc	.+4      	; 0x64c <__divmodhi4+0xa>
 648:	00 94       	com	r0
 64a:	07 d0       	rcall	.+14     	; 0x65a <__divmodhi4_neg1>
 64c:	77 fd       	sbrc	r23, 7
 64e:	09 d0       	rcall	.+18     	; 0x662 <__divmodhi4_neg2>
 650:	0e 94 35 03 	call	0x66a	; 0x66a <__udivmodhi4>
 654:	07 fc       	sbrc	r0, 7
 656:	05 d0       	rcall	.+10     	; 0x662 <__divmodhi4_neg2>
 658:	3e f4       	brtc	.+14     	; 0x668 <__divmodhi4_exit>

0000065a <__divmodhi4_neg1>:
 65a:	90 95       	com	r25
 65c:	81 95       	neg	r24
 65e:	9f 4f       	sbci	r25, 0xFF	; 255
 660:	08 95       	ret

00000662 <__divmodhi4_neg2>:
 662:	70 95       	com	r23
 664:	61 95       	neg	r22
 666:	7f 4f       	sbci	r23, 0xFF	; 255

00000668 <__divmodhi4_exit>:
 668:	08 95       	ret

Disassembly of section .text.libgcc.mul:

000006ee <__umulhisi3>:
 6ee:	a2 9f       	mul	r26, r18
 6f0:	b0 01       	movw	r22, r0
 6f2:	b3 9f       	mul	r27, r19
 6f4:	c0 01       	movw	r24, r0
 6f6:	a3 9f       	mul	r26, r19
 6f8:	70 0d       	add	r23, r0
 6fa:	81 1d       	adc	r24, r1
 6fc:	11 24       	eor	r1, r1
 6fe:	91 1d       	adc	r25, r1
 700:	b2 9f       	mul	r27, r18
 702:	70 0d       	add	r23, r0
 704:	81 1d       	adc	r24, r1
 706:	11 24       	eor	r1, r1
 708:	91 1d       	adc	r25, r1
 70a:	08 95       	ret

Disassembly of section .text.libgcc.mul:

00000742 <__muluhisi3>:
 742:	0e 94 77 03 	call	0x6ee	; 0x6ee <__umulhisi3>
 746:	a5 9f       	mul	r26, r21
 748:	90 0d       	add	r25, r0
 74a:	b4 9f       	mul	r27, r20
 74c:	90 0d       	add	r25, r0
 74e:	a4 9f       	mul	r26, r20
 750:	80 0d       	add	r24, r0
 752:	91 1d       	adc	r25, r1
 754:	11 24       	eor	r1, r1
 756:	08 95       	ret

Disassembly of section .text.libgcc:

00000782 <__xload_2>:
 782:	57 fd       	sbrc	r21, 7
 784:	03 c0       	rjmp	.+6      	; 0x78c <__xload_2+0xa>
 786:	65 91       	lpm	r22, Z+
 788:	75 91       	lpm	r23, Z+
 78a:	08 95       	ret
 78c:	61 91       	ld	r22, Z+
 78e:	71 91       	ld	r23, Z+
 790:	08 95       	ret

Disassembly of section .text.libgcc:

0000076e <__xload_3>:
 76e:	57 fd       	sbrc	r21, 7
 770:	04 c0       	rjmp	.+8      	; 0x77a <__xload_3+0xc>
 772:	65 91       	lpm	r22, Z+
 774:	75 91       	lpm	r23, Z+
 776:	85 91       	lpm	r24, Z+
 778:	08 95       	ret
 77a:	61 91       	ld	r22, Z+
 77c:	71 91       	ld	r23, Z+
 77e:	81 91       	ld	r24, Z+
 780:	08 95       	ret

Disassembly of section .text.libgcc.div:

0000066a <__udivmodhi4>:
 66a:	aa 1b       	sub	r26, r26
 66c:	bb 1b       	sub	r27, r27
 66e:	51 e1       	ldi	r21, 0x11	; 17
 670:	07 c0       	rjmp	.+14     	; 0x680 <__udivmodhi4_ep>

00000672 <__udivmodhi4_loop>:
 672:	aa 1f       	adc	r26, r26
 674:	bb 1f       	adc	r27, r27
 676:	a6 17       	cp	r26, r22
 678:	b7 07       	cpc	r27, r23
 67a:	10 f0       	brcs	.+4      	; 0x680 <__udivmodhi4_ep>
 67c:	a6 1b       	sub	r26, r22
 67e:	b7 0b       	sbc	r27, r23

00000680 <__udivmodhi4_ep>:
 680:	88 1f       	adc	r24, r24
 682:	99 1f       	adc	r25, r25
 684:	5a 95       	dec	r21
 686:	a9 f7       	brne	.-22     	; 0x672 <__udivmodhi4_loop>
 688:	80 95       	com	r24
 68a:	90 95       	com	r25
 68c:	bc 01       	movw	r22, r24
 68e:	cd 01       	movw	r24, r26
 690:	08 95       	ret

Disassembly of section .text.__dummy_fini:

000007bc <_fini>:
 7bc:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000007be <__funcs_on_exit>:
 7be:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000007c0 <__simulator_exit>:
 7c0:	08 95       	ret

Disassembly of section .text.exit:

00000758 <exit>:
 758:	ec 01       	movw	r28, r24
 75a:	0e 94 df 03 	call	0x7be	; 0x7be <__funcs_on_exit>
 75e:	0e 94 de 03 	call	0x7bc	; 0x7bc <_fini>
 762:	ce 01       	movw	r24, r28
 764:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <__simulator_exit>
 768:	ce 01       	movw	r24, r28
 76a:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_Exit>

Disassembly of section .text._Exit:

000007b8 <_Exit>:
 7b8:	0e 94 5f 00 	call	0xbe	; 0xbe <_exit>
