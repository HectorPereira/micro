
1 Plotter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000005d0  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000fe  00000000  00000000  000000f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000100  00800100  00800100  000005d0  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  000005d0  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 0000001c  00000000  00000000  000005ff  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  0000061b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f54  00000000  00000000  000006e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000083e  00000000  00000000  00001637  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000679  00000000  00000000  00001e75  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001e0  00000000  00000000  000024f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000251  00000000  00000000  000026d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003c6  00000000  00000000  00002921  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00002ce7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  000004ce  000004ce  000005c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002da0  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .text.apagar  0000000e  00000456  00000456  0000054a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.Subir_s 0000000e  00000464  00000464  00000558  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.Bajar   0000000a  0000047e  0000047e  00000572  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.Subir   0000000a  00000488  00000488  0000057c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.Izquierda 0000000a  00000492  00000492  00000586  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.Derecha 0000000a  0000049c  0000049c  00000590  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.dibujar_cuadrado 00000046  000002dc  000002dc  000003d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.centrar 00000032  000003e2  000003e2  000004d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.AbajoIzquierda 0000000a  000004a6  000004a6  0000059a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.AbajoDerecha 0000000a  000004b0  000004b0  000005a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.ArribaIzquierda 0000000a  000004ba  000004ba  000005ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.ArribaDerecha 0000000a  000004c4  000004c4  000005b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.peurbas 00000056  00000286  00000286  0000037a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.__vector_13 00000046  00000322  00000322  00000416  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.serialWrite 0000007e  00000130  00000130  00000224  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.__vector_19 00000068  0000021e  0000021e  00000312  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.Chardos 00000034  000003ae  000003ae  000004a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .progmemx.data 00000031  000000fe  000000fe  000001f2  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 33 .text.main    00000070  000001ae  000001ae  000002a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.__vector_18 00000046  00000368  00000368  0000045c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .data.chan    00000001  00800200  0000012f  00000223  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 36 .bss.CONTADOR2 00000001  00800201  00800201  000005d0  2**0
                  ALLOC
 37 .bss.CONTADOR 00000001  00800202  00800202  000005d0  2**0
                  ALLOC
 38 .bss.rxWritePos 00000001  00800203  00800203  000005d0  2**0
                  ALLOC
 39 .bss.rxReadPos 00000001  00800204  00800204  000005d0  2**0
                  ALLOC
 40 .bss.serialWritePos 00000001  00800205  00800205  000005d0  2**0
                  ALLOC
 41 .bss.serialReadPos 00000001  00800206  00800206  000005d0  2**0
                  ALLOC
 42 .text.libgcc  0000000c  00000472  00000472  00000566  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.__dummy_fini 00000002  000004d6  000004d6  000005ca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.__dummy_funcs_on_exit 00000002  000004d8  000004d8  000005cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.__dummy_simulator_exit 00000002  000004da  000004da  000005ce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.exit    00000016  00000440  00000440  00000534  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.strlen  0000002c  00000414  00000414  00000508  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text._Exit   00000004  000004d2  000004d2  000005c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 55 00 	jmp	0xaa	; 0xaa <__ctors_end>
   4:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
   8:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
   c:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  10:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  14:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  18:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  1c:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  20:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  24:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  28:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  2c:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  30:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  34:	0c 94 91 01 	jmp	0x322	; 0x322 <__vector_13>
  38:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  3c:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  40:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  44:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  48:	0c 94 b4 01 	jmp	0x368	; 0x368 <__vector_18>
  4c:	0c 94 0f 01 	jmp	0x21e	; 0x21e <__vector_19>
  50:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  54:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  58:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  5c:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  60:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  64:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <__bad_interrupt>
  68:	63 01       	movw	r12, r6
  6a:	57 01       	movw	r10, r14
  6c:	69 01       	movw	r12, r18
  6e:	6d 01       	movw	r12, r26
  70:	6d 01       	movw	r12, r26
  72:	6d 01       	movw	r12, r26
  74:	6d 01       	movw	r12, r26
  76:	6b 01       	movw	r12, r22
  78:	6d 01       	movw	r12, r26
  7a:	5a 01       	movw	r10, r20
  7c:	6d 01       	movw	r12, r26
  7e:	6d 01       	movw	r12, r26
  80:	6d 01       	movw	r12, r26
  82:	6d 01       	movw	r12, r26
  84:	66 01       	movw	r12, r12
  86:	5d 01       	movw	r10, r26
  88:	51 01       	movw	r10, r2
  8a:	6d 01       	movw	r12, r26
  8c:	54 01       	movw	r10, r8
  8e:	6d 01       	movw	r12, r26
  90:	6d 01       	movw	r12, r26
  92:	4e 01       	movw	r8, r28
  94:	6d 01       	movw	r12, r26
  96:	60 01       	movw	r12, r0

00000098 <.dinit>:
  98:	01 00       	.word	0x0001	; ????
  9a:	02 00       	.word	0x0002	; ????
  9c:	80 02       	muls	r24, r16
  9e:	00 02       	muls	r16, r16
  a0:	01 00       	.word	0x0001	; ????
  a2:	01 2f       	mov	r16, r17
  a4:	02 01       	movw	r0, r4
  a6:	02 07       	cpc	r16, r18
  a8:	80 00       	.word	0x0080	; ????

000000aa <__ctors_end>:
  aa:	11 24       	eor	r1, r1
  ac:	1f be       	out	0x3f, r1	; 63
  ae:	cf ef       	ldi	r28, 0xFF	; 255
  b0:	d8 e0       	ldi	r29, 0x08	; 8
  b2:	de bf       	out	0x3e, r29	; 62
  b4:	cd bf       	out	0x3d, r28	; 61

000000b6 <__do_copy_data>:
  b6:	e8 e9       	ldi	r30, 0x98	; 152
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	40 e0       	ldi	r20, 0x00	; 0
  bc:	17 c0       	rjmp	.+46     	; 0xec <__do_clear_bss+0x8>
  be:	b5 91       	lpm	r27, Z+
  c0:	a5 91       	lpm	r26, Z+
  c2:	35 91       	lpm	r19, Z+
  c4:	25 91       	lpm	r18, Z+
  c6:	05 91       	lpm	r16, Z+
  c8:	07 fd       	sbrc	r16, 7
  ca:	0c c0       	rjmp	.+24     	; 0xe4 <__do_clear_bss>
  cc:	95 91       	lpm	r25, Z+
  ce:	85 91       	lpm	r24, Z+
  d0:	ef 01       	movw	r28, r30
  d2:	f9 2f       	mov	r31, r25
  d4:	e8 2f       	mov	r30, r24
  d6:	05 90       	lpm	r0, Z+
  d8:	0d 92       	st	X+, r0
  da:	a2 17       	cp	r26, r18
  dc:	b3 07       	cpc	r27, r19
  de:	d9 f7       	brne	.-10     	; 0xd6 <__do_copy_data+0x20>
  e0:	fe 01       	movw	r30, r28
  e2:	04 c0       	rjmp	.+8      	; 0xec <__do_clear_bss+0x8>

000000e4 <__do_clear_bss>:
  e4:	1d 92       	st	X+, r1
  e6:	a2 17       	cp	r26, r18
  e8:	b3 07       	cpc	r27, r19
  ea:	e1 f7       	brne	.-8      	; 0xe4 <__do_clear_bss>
  ec:	e9 3a       	cpi	r30, 0xA9	; 169
  ee:	f4 07       	cpc	r31, r20
  f0:	31 f7       	brne	.-52     	; 0xbe <__do_copy_data+0x8>
  f2:	0e 94 d7 00 	call	0x1ae	; 0x1ae <main>
  f6:	0c 94 20 02 	jmp	0x440	; 0x440 <exit>

000000fa <_exit>:
  fa:	f8 94       	cli

000000fc <__stop_program>:
  fc:	ff cf       	rjmp	.-2      	; 0xfc <__stop_program>

Disassembly of section .text:

000004ce <__bad_interrupt>:
 4ce:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.apagar:

00000456 <apagar>:
	apagar();
}


void apagar(void){
chan = false;
 456:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <_end>
PORTD = (PORTD & 0b00000011) | 0b00001000;
 45a:	8b b1       	in	r24, 0x0b	; 11
 45c:	83 70       	andi	r24, 0x03	; 3
 45e:	88 60       	ori	r24, 0x08	; 8
 460:	8b b9       	out	0x0b, r24	; 11
 462:	08 95       	ret

Disassembly of section .text.Subir_s:

00000464 <Subir_s>:
}


void Subir_s(void)
{
PORTD = (PORTD & 0b00001111) | 0b00000100;
 464:	8b b1       	in	r24, 0x0b	; 11
 466:	8b 70       	andi	r24, 0x0B	; 11
 468:	84 60       	ori	r24, 0x04	; 4
 46a:	8b b9       	out	0x0b, r24	; 11
chan = false;
 46c:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <_end>
 470:	08 95       	ret

Disassembly of section .text.Bajar:

0000047e <Bajar>:

}

void Bajar(void)
{
PORTD = (PORTD & 0b00001111) | 0b00010000;
 47e:	8b b1       	in	r24, 0x0b	; 11
 480:	8f 70       	andi	r24, 0x0F	; 15
 482:	80 61       	ori	r24, 0x10	; 16
 484:	8b b9       	out	0x0b, r24	; 11
 486:	08 95       	ret

Disassembly of section .text.Subir:

00000488 <Subir>:
}

void Subir(void)
{
PORTD = (PORTD & 0b00001111) | 0b00100000;
 488:	8b b1       	in	r24, 0x0b	; 11
 48a:	8f 70       	andi	r24, 0x0F	; 15
 48c:	80 62       	ori	r24, 0x20	; 32
 48e:	8b b9       	out	0x0b, r24	; 11
 490:	08 95       	ret

Disassembly of section .text.Izquierda:

00000492 <Izquierda>:
}

void Izquierda(void)
{
PORTD = (PORTD & 0b00001111) | 0b01000000;
 492:	8b b1       	in	r24, 0x0b	; 11
 494:	8f 70       	andi	r24, 0x0F	; 15
 496:	80 64       	ori	r24, 0x40	; 64
 498:	8b b9       	out	0x0b, r24	; 11
 49a:	08 95       	ret

Disassembly of section .text.Derecha:

0000049c <Derecha>:
}


void Derecha(void)
{
PORTD = (PORTD & 0b00001111) | 0b10000000;
 49c:	8b b1       	in	r24, 0x0b	; 11
 49e:	8f 70       	andi	r24, 0x0F	; 15
 4a0:	80 68       	ori	r24, 0x80	; 128
 4a2:	8b b9       	out	0x0b, r24	; 11
 4a4:	08 95       	ret

Disassembly of section .text.dibujar_cuadrado:

000002dc <dibujar_cuadrado>:

uint8_t clamp8(int v) {
	if (v < 0)   return 0;
	if (v >= N)  return N - 1;
	return (uint8_t)v;
}
 2dc:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <CONTADOR>
 2e0:	0e 94 32 02 	call	0x464	; 0x464 <Subir_s>
 2e4:	02 c0       	rjmp	.+4      	; 0x2ea <dibujar_cuadrado+0xe>
 2e6:	0e 94 44 02 	call	0x488	; 0x488 <Subir>
 2ea:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <CONTADOR>
 2ee:	88 23       	and	r24, r24
 2f0:	d1 f3       	breq	.-12     	; 0x2e6 <dibujar_cuadrado+0xa>
 2f2:	02 c0       	rjmp	.+4      	; 0x2f8 <dibujar_cuadrado+0x1c>
 2f4:	0e 94 4e 02 	call	0x49c	; 0x49c <Derecha>
 2f8:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <CONTADOR>
 2fc:	82 30       	cpi	r24, 0x02	; 2
 2fe:	d0 f3       	brcs	.-12     	; 0x2f4 <dibujar_cuadrado+0x18>
 300:	02 c0       	rjmp	.+4      	; 0x306 <dibujar_cuadrado+0x2a>
 302:	0e 94 3f 02 	call	0x47e	; 0x47e <Bajar>
 306:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <CONTADOR>
 30a:	83 30       	cpi	r24, 0x03	; 3
 30c:	d0 f3       	brcs	.-12     	; 0x302 <dibujar_cuadrado+0x26>
 30e:	02 c0       	rjmp	.+4      	; 0x314 <dibujar_cuadrado+0x38>
 310:	0e 94 49 02 	call	0x492	; 0x492 <Izquierda>
 314:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <CONTADOR>
 318:	84 30       	cpi	r24, 0x04	; 4
 31a:	d0 f3       	brcs	.-12     	; 0x310 <dibujar_cuadrado+0x34>
 31c:	0e 94 2b 02 	call	0x456	; 0x456 <apagar>
 320:	08 95       	ret

Disassembly of section .text.centrar:

000003e2 <centrar>:
 3e2:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <CONTADOR>
 3e6:	82 ec       	ldi	r24, 0xC2	; 194
 3e8:	80 93 85 00 	sts	0x0085, r24	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 3ec:	87 ef       	ldi	r24, 0xF7	; 247
 3ee:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <centrar+0x16>
 3f4:	0e 94 3f 02 	call	0x47e	; 0x47e <Bajar>
 3f8:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <CONTADOR>
 3fc:	82 30       	cpi	r24, 0x02	; 2
 3fe:	d0 f3       	brcs	.-12     	; 0x3f4 <centrar+0x12>
 400:	02 c0       	rjmp	.+4      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 402:	0e 94 4e 02 	call	0x49c	; 0x49c <Derecha>
 406:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <CONTADOR>
 40a:	84 30       	cpi	r24, 0x04	; 4
 40c:	d0 f3       	brcs	.-12     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 40e:	0e 94 2b 02 	call	0x456	; 0x456 <apagar>
 412:	08 95       	ret

Disassembly of section .text.AbajoIzquierda:

000004a6 <AbajoIzquierda>:
PORTD = (PORTD & 0b00001111) | 0b10000000;
}

void AbajoIzquierda(void)
{
	PORTD = (PORTD & 0b00001111) | 0b01010000; // D6 y D4
 4a6:	8b b1       	in	r24, 0x0b	; 11
 4a8:	8f 70       	andi	r24, 0x0F	; 15
 4aa:	80 65       	ori	r24, 0x50	; 80
 4ac:	8b b9       	out	0x0b, r24	; 11
 4ae:	08 95       	ret

Disassembly of section .text.AbajoDerecha:

000004b0 <AbajoDerecha>:
}

void AbajoDerecha(void){
	PORTD = (PORTD & 0b00001111) | 0b10010000; // D6 y D4
 4b0:	8b b1       	in	r24, 0x0b	; 11
 4b2:	8f 70       	andi	r24, 0x0F	; 15
 4b4:	80 69       	ori	r24, 0x90	; 144
 4b6:	8b b9       	out	0x0b, r24	; 11
 4b8:	08 95       	ret

Disassembly of section .text.ArribaIzquierda:

000004ba <ArribaIzquierda>:
}

void ArribaIzquierda(void)
{
	PORTD = (PORTD & 0b00001111) | 0b01100000; // D3 y D4
 4ba:	8b b1       	in	r24, 0x0b	; 11
 4bc:	8f 70       	andi	r24, 0x0F	; 15
 4be:	80 66       	ori	r24, 0x60	; 96
 4c0:	8b b9       	out	0x0b, r24	; 11
 4c2:	08 95       	ret

Disassembly of section .text.ArribaDerecha:

000004c4 <ArribaDerecha>:
}

void ArribaDerecha(void){
	PORTD = (PORTD & 0b00001111) | 0b10100000; // D6 y D4
 4c4:	8b b1       	in	r24, 0x0b	; 11
 4c6:	8f 70       	andi	r24, 0x0F	; 15
 4c8:	80 6a       	ori	r24, 0xA0	; 160
 4ca:	8b b9       	out	0x0b, r24	; 11
 4cc:	08 95       	ret

Disassembly of section .text.peurbas:

00000286 <peurbas>:

uint8_t clamp8(int v) {
	if (v < 0)   return 0;
	if (v >= N)  return N - 1;
	return (uint8_t)v;
}
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	fc 01       	movw	r30, r24
 28a:	e3 56       	subi	r30, 0x63	; 99
 28c:	f1 09       	sbc	r31, r1
 28e:	e8 31       	cpi	r30, 0x18	; 24
 290:	f1 05       	cpc	r31, r1
 292:	18 f5       	brcc	.+70     	; 0x2da <peurbas+0x54>
 294:	ec 5c       	subi	r30, 0xCC	; 204
 296:	ff 4f       	sbci	r31, 0xFF	; 255
 298:	0c 94 39 02 	jmp	0x472	; 0x472 <__tablejump2__>
 29c:	0e 94 2b 02 	call	0x456	; 0x456 <apagar>
 2a0:	08 95       	ret
 2a2:	0e 94 32 02 	call	0x464	; 0x464 <Subir_s>
 2a6:	08 95       	ret
 2a8:	0e 94 44 02 	call	0x488	; 0x488 <Subir>
 2ac:	08 95       	ret
 2ae:	0e 94 3f 02 	call	0x47e	; 0x47e <Bajar>
 2b2:	08 95       	ret
 2b4:	0e 94 49 02 	call	0x492	; 0x492 <Izquierda>
 2b8:	08 95       	ret
 2ba:	0e 94 4e 02 	call	0x49c	; 0x49c <Derecha>
 2be:	08 95       	ret
 2c0:	0e 94 53 02 	call	0x4a6	; 0x4a6 <AbajoIzquierda>
 2c4:	08 95       	ret
 2c6:	0e 94 58 02 	call	0x4b0	; 0x4b0 <AbajoDerecha>
 2ca:	08 95       	ret
 2cc:	0e 94 5d 02 	call	0x4ba	; 0x4ba <ArribaIzquierda>
 2d0:	08 95       	ret
 2d2:	0e 94 62 02 	call	0x4c4	; 0x4c4 <ArribaDerecha>
 2d6:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <centrar>
 2da:	08 95       	ret

Disassembly of section .text.__vector_13:

00000322 <__vector_13>:
 322:	1f 92       	push	r1
 324:	0f 92       	push	r0
 326:	0f b6       	in	r0, 0x3f	; 63
 328:	0f 92       	push	r0
 32a:	11 24       	eor	r1, r1
 32c:	8f 93       	push	r24
 32e:	82 ec       	ldi	r24, 0xC2	; 194
 330:	80 93 85 00 	sts	0x0085, r24	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 334:	87 ef       	ldi	r24, 0xF7	; 247
 336:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 33a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <_end>
 33e:	88 23       	and	r24, r24
 340:	31 f0       	breq	.+12     	; 0x34e <__vector_13+0x2c>
 342:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <CONTADOR>
 346:	8f 5f       	subi	r24, 0xFF	; 255
 348:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <CONTADOR>
 34c:	07 c0       	rjmp	.+14     	; 0x35c <__vector_13+0x3a>
 34e:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <CONTADOR2>
 352:	86 30       	cpi	r24, 0x06	; 6
 354:	18 f0       	brcs	.+6      	; 0x35c <__vector_13+0x3a>
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_end>
 35c:	8f 91       	pop	r24
 35e:	0f 90       	pop	r0
 360:	0f be       	out	0x3f, r0	; 63
 362:	0f 90       	pop	r0
 364:	1f 90       	pop	r1
 366:	18 95       	reti

Disassembly of section .text.serialWrite:

00000130 <serialWrite>:
 130:	cf 92       	push	r12
 132:	df 92       	push	r13
 134:	ef 92       	push	r14
 136:	0f 93       	push	r16
 138:	1f 93       	push	r17
 13a:	cf 93       	push	r28
 13c:	6b 01       	movw	r12, r22
 13e:	e8 2e       	mov	r14, r24
 140:	c0 e0       	ldi	r28, 0x00	; 0
 142:	1f c0       	rjmp	.+62     	; 0x182 <serialWrite+0x52>
 144:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <serialWritePos>
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	4e 2d       	mov	r20, r14
 14c:	96 01       	movw	r18, r12
 14e:	2c 0f       	add	r18, r28
 150:	31 1d       	adc	r19, r1
 152:	41 1d       	adc	r20, r1
 154:	f9 01       	movw	r30, r18
 156:	24 91       	lpm	r18, Z
 158:	47 fd       	sbrc	r20, 7
 15a:	20 81       	ld	r18, Z
 15c:	fc 01       	movw	r30, r24
 15e:	e0 58       	subi	r30, 0x80	; 128
 160:	fe 4f       	sbci	r31, 0xFE	; 254
 162:	20 83       	st	Z, r18
 164:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <serialWritePos>
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	01 96       	adiw	r24, 0x01	; 1
 16c:	8f 77       	andi	r24, 0x7F	; 127
 16e:	90 78       	andi	r25, 0x80	; 128
 170:	99 23       	and	r25, r25
 172:	24 f4       	brge	.+8      	; 0x17c <serialWrite+0x4c>
 174:	01 97       	sbiw	r24, 0x01	; 1
 176:	80 68       	ori	r24, 0x80	; 128
 178:	9f 6f       	ori	r25, 0xFF	; 255
 17a:	01 96       	adiw	r24, 0x01	; 1
 17c:	80 93 05 02 	sts	0x0205, r24	; 0x800205 <serialWritePos>
 180:	cf 5f       	subi	r28, 0xFF	; 255
 182:	0c 2f       	mov	r16, r28
 184:	10 e0       	ldi	r17, 0x00	; 0
 186:	8e 2d       	mov	r24, r14
 188:	b6 01       	movw	r22, r12
 18a:	0e 94 0a 02 	call	0x414	; 0x414 <strlen>
 18e:	99 27       	eor	r25, r25
 190:	08 17       	cp	r16, r24
 192:	19 07       	cpc	r17, r25
 194:	bc f2       	brlt	.-82     	; 0x144 <serialWrite+0x14>
 196:	e1 ec       	ldi	r30, 0xC1	; 193
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	80 81       	ld	r24, Z
 19c:	80 62       	ori	r24, 0x20	; 32
 19e:	80 83       	st	Z, r24
 1a0:	cf 91       	pop	r28
 1a2:	1f 91       	pop	r17
 1a4:	0f 91       	pop	r16
 1a6:	ef 90       	pop	r14
 1a8:	df 90       	pop	r13
 1aa:	cf 90       	pop	r12
 1ac:	08 95       	ret

Disassembly of section .text.__vector_19:

0000021e <__vector_19>:
 21e:	1f 92       	push	r1
 220:	0f 92       	push	r0
 222:	0f b6       	in	r0, 0x3f	; 63
 224:	0f 92       	push	r0
 226:	11 24       	eor	r1, r1
 228:	8f 93       	push	r24
 22a:	9f 93       	push	r25
 22c:	ef 93       	push	r30
 22e:	ff 93       	push	r31
 230:	90 91 06 02 	lds	r25, 0x0206	; 0x800206 <serialReadPos>
 234:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <serialWritePos>
 238:	98 17       	cp	r25, r24
 23a:	b9 f0       	breq	.+46     	; 0x26a <__vector_19+0x4c>
 23c:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <serialReadPos>
 240:	f0 e0       	ldi	r31, 0x00	; 0
 242:	e0 58       	subi	r30, 0x80	; 128
 244:	fe 4f       	sbci	r31, 0xFE	; 254
 246:	80 81       	ld	r24, Z
 248:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 24c:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <serialReadPos>
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	01 96       	adiw	r24, 0x01	; 1
 254:	8f 77       	andi	r24, 0x7F	; 127
 256:	90 78       	andi	r25, 0x80	; 128
 258:	99 23       	and	r25, r25
 25a:	24 f4       	brge	.+8      	; 0x264 <__vector_19+0x46>
 25c:	01 97       	sbiw	r24, 0x01	; 1
 25e:	80 68       	ori	r24, 0x80	; 128
 260:	9f 6f       	ori	r25, 0xFF	; 255
 262:	01 96       	adiw	r24, 0x01	; 1
 264:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <serialReadPos>
 268:	05 c0       	rjmp	.+10     	; 0x274 <__vector_19+0x56>
 26a:	e1 ec       	ldi	r30, 0xC1	; 193
 26c:	f0 e0       	ldi	r31, 0x00	; 0
 26e:	80 81       	ld	r24, Z
 270:	8f 7d       	andi	r24, 0xDF	; 223
 272:	80 83       	st	Z, r24
 274:	ff 91       	pop	r31
 276:	ef 91       	pop	r30
 278:	9f 91       	pop	r25
 27a:	8f 91       	pop	r24
 27c:	0f 90       	pop	r0
 27e:	0f be       	out	0x3f, r0	; 63
 280:	0f 90       	pop	r0
 282:	1f 90       	pop	r1
 284:	18 95       	reti

Disassembly of section .text.Chardos:

000003ae <Chardos>:
 3ae:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <rxReadPos>
 3b2:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <rxWritePos>
 3b6:	98 17       	cp	r25, r24
 3b8:	91 f0       	breq	.+36     	; 0x3de <Chardos+0x30>
 3ba:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <rxReadPos>
 3be:	f0 e0       	ldi	r31, 0x00	; 0
 3c0:	e0 50       	subi	r30, 0x00	; 0
 3c2:	ff 4f       	sbci	r31, 0xFF	; 255
 3c4:	80 81       	ld	r24, Z
 3c6:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <rxReadPos>
 3ca:	9f 5f       	subi	r25, 0xFF	; 255
 3cc:	90 93 04 02 	sts	0x0204, r25	; 0x800204 <rxReadPos>
 3d0:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <rxReadPos>
 3d4:	99 23       	and	r25, r25
 3d6:	24 f4       	brge	.+8      	; 0x3e0 <Chardos+0x32>
 3d8:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <rxReadPos>
 3dc:	08 95       	ret
 3de:	80 e0       	ldi	r24, 0x00	; 0
 3e0:	08 95       	ret

Disassembly of section .text.main:

000001ae <main>:
 1ae:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 1b2:	87 e6       	ldi	r24, 0x67	; 103
 1b4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 1b8:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
 1bc:	e1 e8       	ldi	r30, 0x81	; 129
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 81       	ld	r24, Z
 1c2:	83 60       	ori	r24, 0x03	; 3
 1c4:	80 83       	st	Z, r24
 1c6:	ef e6       	ldi	r30, 0x6F	; 111
 1c8:	f0 e0       	ldi	r31, 0x00	; 0
 1ca:	80 81       	ld	r24, Z
 1cc:	81 60       	ori	r24, 0x01	; 1
 1ce:	80 83       	st	Z, r24
 1d0:	88 e9       	ldi	r24, 0x98	; 152
 1d2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 1d6:	86 e0       	ldi	r24, 0x06	; 6
 1d8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 1dc:	78 94       	sei
 1de:	84 b1       	in	r24, 0x04	; 4
 1e0:	81 60       	ori	r24, 0x01	; 1
 1e2:	84 b9       	out	0x04, r24	; 4
 1e4:	8e ef       	ldi	r24, 0xFE	; 254
 1e6:	8a b9       	out	0x0a, r24	; 10
 1e8:	6e ef       	ldi	r22, 0xFE	; 254
 1ea:	70 e0       	ldi	r23, 0x00	; 0
 1ec:	80 e0       	ldi	r24, 0x00	; 0
 1ee:	0e 94 98 00 	call	0x130	; 0x130 <serialWrite>
 1f2:	60 e2       	ldi	r22, 0x20	; 32
 1f4:	71 e0       	ldi	r23, 0x01	; 1
 1f6:	80 e0       	ldi	r24, 0x00	; 0
 1f8:	0e 94 98 00 	call	0x130	; 0x130 <serialWrite>
 1fc:	81 ee       	ldi	r24, 0xE1	; 225
 1fe:	94 e0       	ldi	r25, 0x04	; 4
 200:	01 97       	sbiw	r24, 0x01	; 1
 202:	f1 f7       	brne	.-4      	; 0x200 <main+0x52>
 204:	00 c0       	rjmp	.+0      	; 0x206 <main+0x58>
 206:	00 00       	nop
 208:	0e 94 d7 01 	call	0x3ae	; 0x3ae <Chardos>
 20c:	c8 2f       	mov	r28, r24
 20e:	81 33       	cpi	r24, 0x31	; 49
 210:	11 f4       	brne	.+4      	; 0x216 <main+0x68>
 212:	0e 94 6e 01 	call	0x2dc	; 0x2dc <dibujar_cuadrado>
 216:	8c 2f       	mov	r24, r28
 218:	0e 94 43 01 	call	0x286	; 0x286 <peurbas>
 21c:	f5 cf       	rjmp	.-22     	; 0x208 <main+0x5a>

Disassembly of section .text.__vector_18:

00000368 <__vector_18>:
 368:	1f 92       	push	r1
 36a:	0f 92       	push	r0
 36c:	0f b6       	in	r0, 0x3f	; 63
 36e:	0f 92       	push	r0
 370:	11 24       	eor	r1, r1
 372:	8f 93       	push	r24
 374:	ef 93       	push	r30
 376:	ff 93       	push	r31
 378:	e0 91 03 02 	lds	r30, 0x0203	; 0x800203 <rxWritePos>
 37c:	f0 e0       	ldi	r31, 0x00	; 0
 37e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 382:	e0 50       	subi	r30, 0x00	; 0
 384:	ff 4f       	sbci	r31, 0xFF	; 255
 386:	80 83       	st	Z, r24
 388:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <rxWritePos>
 38c:	8f 5f       	subi	r24, 0xFF	; 255
 38e:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <rxWritePos>
 392:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <rxWritePos>
 396:	88 23       	and	r24, r24
 398:	14 f4       	brge	.+4      	; 0x39e <__vector_18+0x36>
 39a:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <rxWritePos>
 39e:	ff 91       	pop	r31
 3a0:	ef 91       	pop	r30
 3a2:	8f 91       	pop	r24
 3a4:	0f 90       	pop	r0
 3a6:	0f be       	out	0x3f, r0	; 63
 3a8:	0f 90       	pop	r0
 3aa:	1f 90       	pop	r1
 3ac:	18 95       	reti

Disassembly of section .text.libgcc:

00000472 <__tablejump2__>:
 472:	ee 0f       	add	r30, r30
 474:	ff 1f       	adc	r31, r31
 476:	05 90       	lpm	r0, Z+
 478:	f4 91       	lpm	r31, Z
 47a:	e0 2d       	mov	r30, r0
 47c:	09 94       	ijmp

Disassembly of section .text.__dummy_fini:

000004d6 <_fini>:
 4d6:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000004d8 <__funcs_on_exit>:
 4d8:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000004da <__simulator_exit>:
 4da:	08 95       	ret

Disassembly of section .text.exit:

00000440 <exit>:
 440:	ec 01       	movw	r28, r24
 442:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <__funcs_on_exit>
 446:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <_fini>
 44a:	ce 01       	movw	r24, r28
 44c:	0e 94 6d 02 	call	0x4da	; 0x4da <__simulator_exit>
 450:	ce 01       	movw	r24, r28
 452:	0e 94 69 02 	call	0x4d2	; 0x4d2 <_Exit>

Disassembly of section .text.strlen:

00000414 <strlen>:
 414:	cf 92       	push	r12
 416:	df 92       	push	r13
 418:	ef 92       	push	r14
 41a:	6b 01       	movw	r12, r22
 41c:	e8 2e       	mov	r14, r24
 41e:	a8 2f       	mov	r26, r24
 420:	cb 01       	movw	r24, r22
 422:	fc 01       	movw	r30, r24
 424:	24 91       	lpm	r18, Z
 426:	a7 fd       	sbrc	r26, 7
 428:	20 81       	ld	r18, Z
 42a:	22 23       	and	r18, r18
 42c:	19 f0       	breq	.+6      	; 0x434 <strlen+0x20>
 42e:	01 96       	adiw	r24, 0x01	; 1
 430:	a1 1d       	adc	r26, r1
 432:	f7 cf       	rjmp	.-18     	; 0x422 <strlen+0xe>
 434:	8c 19       	sub	r24, r12
 436:	9d 09       	sbc	r25, r13
 438:	ef 90       	pop	r14
 43a:	df 90       	pop	r13
 43c:	cf 90       	pop	r12
 43e:	08 95       	ret

Disassembly of section .text._Exit:

000004d2 <_Exit>:
 4d2:	0e 94 7d 00 	call	0xfa	; 0xfa <_exit>
