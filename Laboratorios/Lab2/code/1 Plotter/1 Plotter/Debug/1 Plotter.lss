
1 Plotter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003e6  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000c2  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000100  00800100  00800100  000003e6  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  000003e6  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 0000000e  00000000  00000000  00000415  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00000423  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001225  00000000  00000000  0000051b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000843  00000000  00000000  00001740  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006b8  00000000  00000000  00001f83  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000027c  00000000  00000000  0000263c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  000028b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005f9  00000000  00000000  00002ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  000030b9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  00000324  00000324  000003d8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000031d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .text.__vector_13 0000002e  000002b4  000002b4  00000368  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.serialWrite 0000007e  000000f4  000000f4  000001a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__vector_19 00000068  00000172  00000172  00000226  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.Chardos 00000034  00000280  00000280  00000334  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .progmemx.data 00000031  000000c2  000000c2  00000176  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 20 .text.main    00000060  000001da  000001da  0000028e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.__vector_18 00000046  0000023a  0000023a  000002ee  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .bss.CONTADOR 00000001  00800200  00800200  000003e6  2**0
                  ALLOC
 23 .bss.rxWritePos 00000001  00800201  00800201  000003e6  2**0
                  ALLOC
 24 .bss.rxReadPos 00000001  00800202  00800202  000003e6  2**0
                  ALLOC
 25 .bss.serialWritePos 00000001  00800203  00800203  000003e6  2**0
                  ALLOC
 26 .bss.serialReadPos 00000001  00800204  00800204  000003e6  2**0
                  ALLOC
 27 .text.__dummy_fini 00000002  0000032c  0000032c  000003e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.__dummy_funcs_on_exit 00000002  0000032e  0000032e  000003e2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.__dummy_simulator_exit 00000002  00000330  00000330  000003e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.exit    00000016  0000030e  0000030e  000003c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.strlen  0000002c  000002e2  000002e2  00000396  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text._Exit   00000004  00000328  00000328  000003dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 37 00 	jmp	0x6e	; 0x6e <__ctors_end>
   4:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
   8:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
   c:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  10:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  14:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  18:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  1c:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  20:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  24:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  28:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  2c:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  30:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  34:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__vector_13>
  38:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  3c:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  40:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  44:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  48:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__vector_18>
  4c:	0c 94 b9 00 	jmp	0x172	; 0x172 <__vector_19>
  50:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  54:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  58:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  5c:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  60:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
  64:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>

00000068 <.dinit>:
  68:	01 00       	.word	0x0001	; ????
  6a:	02 05       	cpc	r16, r2
  6c:	80 00       	.word	0x0080	; ????

0000006e <__ctors_end>:
  6e:	11 24       	eor	r1, r1
  70:	1f be       	out	0x3f, r1	; 63
  72:	cf ef       	ldi	r28, 0xFF	; 255
  74:	d8 e0       	ldi	r29, 0x08	; 8
  76:	de bf       	out	0x3e, r29	; 62
  78:	cd bf       	out	0x3d, r28	; 61

0000007a <__do_copy_data>:
  7a:	e8 e6       	ldi	r30, 0x68	; 104
  7c:	f0 e0       	ldi	r31, 0x00	; 0
  7e:	40 e0       	ldi	r20, 0x00	; 0
  80:	17 c0       	rjmp	.+46     	; 0xb0 <__do_clear_bss+0x8>
  82:	b5 91       	lpm	r27, Z+
  84:	a5 91       	lpm	r26, Z+
  86:	35 91       	lpm	r19, Z+
  88:	25 91       	lpm	r18, Z+
  8a:	05 91       	lpm	r16, Z+
  8c:	07 fd       	sbrc	r16, 7
  8e:	0c c0       	rjmp	.+24     	; 0xa8 <__do_clear_bss>
  90:	95 91       	lpm	r25, Z+
  92:	85 91       	lpm	r24, Z+
  94:	ef 01       	movw	r28, r30
  96:	f9 2f       	mov	r31, r25
  98:	e8 2f       	mov	r30, r24
  9a:	05 90       	lpm	r0, Z+
  9c:	0d 92       	st	X+, r0
  9e:	a2 17       	cp	r26, r18
  a0:	b3 07       	cpc	r27, r19
  a2:	d9 f7       	brne	.-10     	; 0x9a <__do_copy_data+0x20>
  a4:	fe 01       	movw	r30, r28
  a6:	04 c0       	rjmp	.+8      	; 0xb0 <__do_clear_bss+0x8>

000000a8 <__do_clear_bss>:
  a8:	1d 92       	st	X+, r1
  aa:	a2 17       	cp	r26, r18
  ac:	b3 07       	cpc	r27, r19
  ae:	e1 f7       	brne	.-8      	; 0xa8 <__do_clear_bss>
  b0:	ed 36       	cpi	r30, 0x6D	; 109
  b2:	f4 07       	cpc	r31, r20
  b4:	31 f7       	brne	.-52     	; 0x82 <__do_copy_data+0x8>
  b6:	0e 94 ed 00 	call	0x1da	; 0x1da <main>
  ba:	0c 94 87 01 	jmp	0x30e	; 0x30e <exit>

000000be <_exit>:
  be:	f8 94       	cli

000000c0 <__stop_program>:
  c0:	ff cf       	rjmp	.-2      	; 0xc0 <__stop_program>

Disassembly of section .text:

00000324 <__bad_interrupt>:
 324:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.__vector_13:

000002b4 <__vector_13>:
	sbi(PORTD, 3);  
	cbi(PORTD, 2);   
}


ISR(TIMER1_OVF_vect) {
 2b4:	1f 92       	push	r1
 2b6:	0f 92       	push	r0
 2b8:	0f b6       	in	r0, 0x3f	; 63
 2ba:	0f 92       	push	r0
 2bc:	11 24       	eor	r1, r1
 2be:	8f 93       	push	r24
	TCNT1H = 0xC2;
 2c0:	82 ec       	ldi	r24, 0xC2	; 194
 2c2:	80 93 85 00 	sts	0x0085, r24	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
	TCNT1L = 0xF7;
 2c6:	87 ef       	ldi	r24, 0xF7	; 247
 2c8:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	
	CONTADOR ++;
 2cc:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <_end>
 2d0:	8f 5f       	subi	r24, 0xFF	; 255
 2d2:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_end>
}
 2d6:	8f 91       	pop	r24
 2d8:	0f 90       	pop	r0
 2da:	0f be       	out	0x3f, r0	; 63
 2dc:	0f 90       	pop	r0
 2de:	1f 90       	pop	r1
 2e0:	18 95       	reti

Disassembly of section .text.serialWrite:

000000f4 <serialWrite>:
}

void Subir_s(void)
{
	sbi(PORTD, 3);  
	cbi(PORTD, 2);   
  f4:	cf 92       	push	r12
  f6:	df 92       	push	r13
  f8:	ef 92       	push	r14
  fa:	0f 93       	push	r16
  fc:	1f 93       	push	r17
  fe:	cf 93       	push	r28
 100:	6b 01       	movw	r12, r22
 102:	e8 2e       	mov	r14, r24
 104:	c0 e0       	ldi	r28, 0x00	; 0
 106:	1f c0       	rjmp	.+62     	; 0x146 <serialWrite+0x52>
 108:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <serialWritePos>
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	4e 2d       	mov	r20, r14
 110:	96 01       	movw	r18, r12
 112:	2c 0f       	add	r18, r28
 114:	31 1d       	adc	r19, r1
 116:	41 1d       	adc	r20, r1
 118:	f9 01       	movw	r30, r18
 11a:	24 91       	lpm	r18, Z
 11c:	47 fd       	sbrc	r20, 7
 11e:	20 81       	ld	r18, Z
 120:	fc 01       	movw	r30, r24
 122:	e0 58       	subi	r30, 0x80	; 128
 124:	fe 4f       	sbci	r31, 0xFE	; 254
 126:	20 83       	st	Z, r18
 128:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <serialWritePos>
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	01 96       	adiw	r24, 0x01	; 1
 130:	8f 77       	andi	r24, 0x7F	; 127
 132:	90 78       	andi	r25, 0x80	; 128
 134:	99 23       	and	r25, r25
 136:	24 f4       	brge	.+8      	; 0x140 <serialWrite+0x4c>
 138:	01 97       	sbiw	r24, 0x01	; 1
 13a:	80 68       	ori	r24, 0x80	; 128
 13c:	9f 6f       	ori	r25, 0xFF	; 255
 13e:	01 96       	adiw	r24, 0x01	; 1
 140:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <serialWritePos>
 144:	cf 5f       	subi	r28, 0xFF	; 255
 146:	0c 2f       	mov	r16, r28
 148:	10 e0       	ldi	r17, 0x00	; 0
 14a:	8e 2d       	mov	r24, r14
 14c:	b6 01       	movw	r22, r12
 14e:	0e 94 71 01 	call	0x2e2	; 0x2e2 <strlen>
 152:	99 27       	eor	r25, r25
 154:	08 17       	cp	r16, r24
 156:	19 07       	cpc	r17, r25
 158:	bc f2       	brlt	.-82     	; 0x108 <serialWrite+0x14>
 15a:	e1 ec       	ldi	r30, 0xC1	; 193
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	80 81       	ld	r24, Z
 160:	80 62       	ori	r24, 0x20	; 32
 162:	80 83       	st	Z, r24
 164:	cf 91       	pop	r28
 166:	1f 91       	pop	r17
 168:	0f 91       	pop	r16
 16a:	ef 90       	pop	r14
 16c:	df 90       	pop	r13
 16e:	cf 90       	pop	r12
 170:	08 95       	ret

Disassembly of section .text.__vector_19:

00000172 <__vector_19>:
 172:	1f 92       	push	r1
 174:	0f 92       	push	r0
 176:	0f b6       	in	r0, 0x3f	; 63
 178:	0f 92       	push	r0
 17a:	11 24       	eor	r1, r1
 17c:	8f 93       	push	r24
 17e:	9f 93       	push	r25
 180:	ef 93       	push	r30
 182:	ff 93       	push	r31
 184:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <serialReadPos>
 188:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <serialWritePos>
 18c:	98 17       	cp	r25, r24
 18e:	b9 f0       	breq	.+46     	; 0x1be <__vector_19+0x4c>
 190:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <serialReadPos>
 194:	f0 e0       	ldi	r31, 0x00	; 0
 196:	e0 58       	subi	r30, 0x80	; 128
 198:	fe 4f       	sbci	r31, 0xFE	; 254
 19a:	80 81       	ld	r24, Z
 19c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 1a0:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <serialReadPos>
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	01 96       	adiw	r24, 0x01	; 1
 1a8:	8f 77       	andi	r24, 0x7F	; 127
 1aa:	90 78       	andi	r25, 0x80	; 128
 1ac:	99 23       	and	r25, r25
 1ae:	24 f4       	brge	.+8      	; 0x1b8 <__vector_19+0x46>
 1b0:	01 97       	sbiw	r24, 0x01	; 1
 1b2:	80 68       	ori	r24, 0x80	; 128
 1b4:	9f 6f       	ori	r25, 0xFF	; 255
 1b6:	01 96       	adiw	r24, 0x01	; 1
 1b8:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <serialReadPos>
 1bc:	05 c0       	rjmp	.+10     	; 0x1c8 <__vector_19+0x56>
 1be:	e1 ec       	ldi	r30, 0xC1	; 193
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	80 81       	ld	r24, Z
 1c4:	8f 7d       	andi	r24, 0xDF	; 223
 1c6:	80 83       	st	Z, r24
 1c8:	ff 91       	pop	r31
 1ca:	ef 91       	pop	r30
 1cc:	9f 91       	pop	r25
 1ce:	8f 91       	pop	r24
 1d0:	0f 90       	pop	r0
 1d2:	0f be       	out	0x3f, r0	; 63
 1d4:	0f 90       	pop	r0
 1d6:	1f 90       	pop	r1
 1d8:	18 95       	reti

Disassembly of section .text.Chardos:

00000280 <Chardos>:
 280:	90 91 02 02 	lds	r25, 0x0202	; 0x800202 <rxReadPos>
 284:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <rxWritePos>
 288:	98 17       	cp	r25, r24
 28a:	91 f0       	breq	.+36     	; 0x2b0 <Chardos+0x30>
 28c:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <rxReadPos>
 290:	f0 e0       	ldi	r31, 0x00	; 0
 292:	e0 50       	subi	r30, 0x00	; 0
 294:	ff 4f       	sbci	r31, 0xFF	; 255
 296:	80 81       	ld	r24, Z
 298:	90 91 02 02 	lds	r25, 0x0202	; 0x800202 <rxReadPos>
 29c:	9f 5f       	subi	r25, 0xFF	; 255
 29e:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <rxReadPos>
 2a2:	90 91 02 02 	lds	r25, 0x0202	; 0x800202 <rxReadPos>
 2a6:	99 23       	and	r25, r25
 2a8:	24 f4       	brge	.+8      	; 0x2b2 <Chardos+0x32>
 2aa:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <rxReadPos>
 2ae:	08 95       	ret
 2b0:	80 e0       	ldi	r24, 0x00	; 0
 2b2:	08 95       	ret

Disassembly of section .text.main:

000001da <main>:
 1da:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 1de:	87 e6       	ldi	r24, 0x67	; 103
 1e0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 1e4:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
 1e8:	e1 e8       	ldi	r30, 0x81	; 129
 1ea:	f0 e0       	ldi	r31, 0x00	; 0
 1ec:	80 81       	ld	r24, Z
 1ee:	85 60       	ori	r24, 0x05	; 5
 1f0:	80 83       	st	Z, r24
 1f2:	ef e6       	ldi	r30, 0x6F	; 111
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	80 81       	ld	r24, Z
 1f8:	81 60       	ori	r24, 0x01	; 1
 1fa:	80 83       	st	Z, r24
 1fc:	88 e9       	ldi	r24, 0x98	; 152
 1fe:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 202:	86 e0       	ldi	r24, 0x06	; 6
 204:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 208:	78 94       	sei
 20a:	84 b1       	in	r24, 0x04	; 4
 20c:	81 60       	ori	r24, 0x01	; 1
 20e:	84 b9       	out	0x04, r24	; 4
 210:	8e ef       	ldi	r24, 0xFE	; 254
 212:	8a b9       	out	0x0a, r24	; 10
 214:	62 ec       	ldi	r22, 0xC2	; 194
 216:	70 e0       	ldi	r23, 0x00	; 0
 218:	80 e0       	ldi	r24, 0x00	; 0
 21a:	0e 94 7a 00 	call	0xf4	; 0xf4 <serialWrite>
 21e:	64 ee       	ldi	r22, 0xE4	; 228
 220:	70 e0       	ldi	r23, 0x00	; 0
 222:	80 e0       	ldi	r24, 0x00	; 0
 224:	0e 94 7a 00 	call	0xf4	; 0xf4 <serialWrite>
 228:	81 ee       	ldi	r24, 0xE1	; 225
 22a:	94 e0       	ldi	r25, 0x04	; 4
 22c:	01 97       	sbiw	r24, 0x01	; 1
 22e:	f1 f7       	brne	.-4      	; 0x22c <main+0x52>
 230:	00 c0       	rjmp	.+0      	; 0x232 <main+0x58>
 232:	00 00       	nop
 234:	0e 94 40 01 	call	0x280	; 0x280 <Chardos>
 238:	fd cf       	rjmp	.-6      	; 0x234 <main+0x5a>

Disassembly of section .text.__vector_18:

0000023a <__vector_18>:
 23a:	1f 92       	push	r1
 23c:	0f 92       	push	r0
 23e:	0f b6       	in	r0, 0x3f	; 63
 240:	0f 92       	push	r0
 242:	11 24       	eor	r1, r1
 244:	8f 93       	push	r24
 246:	ef 93       	push	r30
 248:	ff 93       	push	r31
 24a:	e0 91 01 02 	lds	r30, 0x0201	; 0x800201 <rxWritePos>
 24e:	f0 e0       	ldi	r31, 0x00	; 0
 250:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 254:	e0 50       	subi	r30, 0x00	; 0
 256:	ff 4f       	sbci	r31, 0xFF	; 255
 258:	80 83       	st	Z, r24
 25a:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <rxWritePos>
 25e:	8f 5f       	subi	r24, 0xFF	; 255
 260:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <rxWritePos>
 264:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <rxWritePos>
 268:	88 23       	and	r24, r24
 26a:	14 f4       	brge	.+4      	; 0x270 <__vector_18+0x36>
 26c:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <rxWritePos>
 270:	ff 91       	pop	r31
 272:	ef 91       	pop	r30
 274:	8f 91       	pop	r24
 276:	0f 90       	pop	r0
 278:	0f be       	out	0x3f, r0	; 63
 27a:	0f 90       	pop	r0
 27c:	1f 90       	pop	r1
 27e:	18 95       	reti

Disassembly of section .text.__dummy_fini:

0000032c <_fini>:
 32c:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

0000032e <__funcs_on_exit>:
 32e:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000330 <__simulator_exit>:
 330:	08 95       	ret

Disassembly of section .text.exit:

0000030e <exit>:
 30e:	ec 01       	movw	r28, r24
 310:	0e 94 97 01 	call	0x32e	; 0x32e <__funcs_on_exit>
 314:	0e 94 96 01 	call	0x32c	; 0x32c <_fini>
 318:	ce 01       	movw	r24, r28
 31a:	0e 94 98 01 	call	0x330	; 0x330 <__simulator_exit>
 31e:	ce 01       	movw	r24, r28
 320:	0e 94 94 01 	call	0x328	; 0x328 <_Exit>

Disassembly of section .text.strlen:

000002e2 <strlen>:
 2e2:	cf 92       	push	r12
 2e4:	df 92       	push	r13
 2e6:	ef 92       	push	r14
 2e8:	6b 01       	movw	r12, r22
 2ea:	e8 2e       	mov	r14, r24
 2ec:	a8 2f       	mov	r26, r24
 2ee:	cb 01       	movw	r24, r22
 2f0:	fc 01       	movw	r30, r24
 2f2:	24 91       	lpm	r18, Z
 2f4:	a7 fd       	sbrc	r26, 7
 2f6:	20 81       	ld	r18, Z
 2f8:	22 23       	and	r18, r18
 2fa:	19 f0       	breq	.+6      	; 0x302 <strlen+0x20>
 2fc:	01 96       	adiw	r24, 0x01	; 1
 2fe:	a1 1d       	adc	r26, r1
 300:	f7 cf       	rjmp	.-18     	; 0x2f0 <strlen+0xe>
 302:	8c 19       	sub	r24, r12
 304:	9d 09       	sbc	r25, r13
 306:	ef 90       	pop	r14
 308:	df 90       	pop	r13
 30a:	cf 90       	pop	r12
 30c:	08 95       	ret

Disassembly of section .text._Exit:

00000328 <_Exit>:
 328:	0e 94 5f 00 	call	0xbe	; 0xbe <_exit>
