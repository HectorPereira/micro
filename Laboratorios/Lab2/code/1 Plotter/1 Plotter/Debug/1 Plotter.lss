
1 Plotter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000053c  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000f2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000100  00800100  00800100  0000053c  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  0000053c  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 0000001c  00000000  00000000  0000056b  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00000587  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001587  00000000  00000000  00000687  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000846  00000000  00000000  00001c0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000086e  00000000  00000000  00002454  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000250  00000000  00000000  00002cc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000251  00000000  00000000  00002f14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007c7  00000000  00000000  00003165  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  0000392c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  0000049a  0000049a  0000052e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003a1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .text.apagar  0000000a  00000436  00000436  000004ca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.Subir_s 0000000a  00000440  00000440  000004d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.Bajar   0000000a  0000044a  0000044a  000004de  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.Subir   0000000a  00000454  00000454  000004e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.Izquierda 0000000a  0000045e  0000045e  000004f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.Derecha 0000000a  00000468  00000468  000004fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.generar_escalon4 00000032  00000348  00000348  000003dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.Hacer_circulo 0000001c  000003f8  000003f8  0000048c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.AbajoIzquierda 0000000a  00000472  00000472  00000506  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.AbajoDerecha 0000000a  0000047c  0000047c  00000510  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.centrar 00000024  000003d4  000003d4  00000468  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.ArribaIzquierda 0000000a  00000486  00000486  0000051a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.ArribaDerecha 0000000a  00000490  00000490  00000524  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.peurbas 00000058  00000276  00000276  0000030a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.__vector_13 0000002e  0000037a  0000037a  0000040e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.serialWrite 0000007e  00000124  00000124  000001b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.__vector_19 00000068  0000020e  0000020e  000002a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.Chardos 00000034  00000314  00000314  000003a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .progmemx.data 00000032  000000f2  000000f2  00000186  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 34 .text.main    0000006c  000001a2  000001a2  00000236  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.__vector_18 00000046  000002ce  000002ce  00000362  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .bss.CONTADOR 00000001  00800200  00800200  0000053c  2**0
                  ALLOC
 37 .bss.rxWritePos 00000001  00800201  00800201  0000053c  2**0
                  ALLOC
 38 .bss.rxReadPos 00000001  00800202  00800202  0000053c  2**0
                  ALLOC
 39 .bss.serialWritePos 00000001  00800203  00800203  0000053c  2**0
                  ALLOC
 40 .bss.serialReadPos 00000001  00800204  00800204  0000053c  2**0
                  ALLOC
 41 .text.libgcc  0000000c  0000042a  0000042a  000004be  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.__dummy_fini 00000002  000004a2  000004a2  00000536  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.__dummy_funcs_on_exit 00000002  000004a4  000004a4  00000538  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.__dummy_simulator_exit 00000002  000004a6  000004a6  0000053a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.exit    00000016  00000414  00000414  000004a8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.strlen  0000002c  000003a8  000003a8  0000043c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text._Exit   00000004  0000049e  0000049e  00000532  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__ctors_end>
   4:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
   8:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
   c:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  10:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  14:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  18:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  1c:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  20:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  24:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  28:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  2c:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  30:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  34:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__vector_13>
  38:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  3c:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  40:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  44:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  48:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <__vector_18>
  4c:	0c 94 07 01 	jmp	0x20e	; 0x20e <__vector_19>
  50:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  54:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  58:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  5c:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  60:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  64:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__bad_interrupt>
  68:	5b 01       	movw	r10, r22
  6a:	4f 01       	movw	r8, r30
  6c:	61 01       	movw	r12, r2
  6e:	66 01       	movw	r12, r12
  70:	66 01       	movw	r12, r12
  72:	66 01       	movw	r12, r12
  74:	66 01       	movw	r12, r12
  76:	64 01       	movw	r12, r8
  78:	66 01       	movw	r12, r12
  7a:	52 01       	movw	r10, r4
  7c:	66 01       	movw	r12, r12
  7e:	66 01       	movw	r12, r12
  80:	66 01       	movw	r12, r12
  82:	66 01       	movw	r12, r12
  84:	5e 01       	movw	r10, r28
  86:	55 01       	movw	r10, r10
  88:	49 01       	movw	r8, r18
  8a:	66 01       	movw	r12, r12
  8c:	4c 01       	movw	r8, r24
  8e:	66 01       	movw	r12, r12
  90:	66 01       	movw	r12, r12
  92:	46 01       	movw	r8, r12
  94:	66 01       	movw	r12, r12
  96:	58 01       	movw	r10, r16

00000098 <.dinit>:
  98:	01 00       	.word	0x0001	; ????
  9a:	02 05       	cpc	r16, r2
  9c:	80 00       	.word	0x0080	; ????

0000009e <__ctors_end>:
  9e:	11 24       	eor	r1, r1
  a0:	1f be       	out	0x3f, r1	; 63
  a2:	cf ef       	ldi	r28, 0xFF	; 255
  a4:	d8 e0       	ldi	r29, 0x08	; 8
  a6:	de bf       	out	0x3e, r29	; 62
  a8:	cd bf       	out	0x3d, r28	; 61

000000aa <__do_copy_data>:
  aa:	e8 e9       	ldi	r30, 0x98	; 152
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	40 e0       	ldi	r20, 0x00	; 0
  b0:	17 c0       	rjmp	.+46     	; 0xe0 <__do_clear_bss+0x8>
  b2:	b5 91       	lpm	r27, Z+
  b4:	a5 91       	lpm	r26, Z+
  b6:	35 91       	lpm	r19, Z+
  b8:	25 91       	lpm	r18, Z+
  ba:	05 91       	lpm	r16, Z+
  bc:	07 fd       	sbrc	r16, 7
  be:	0c c0       	rjmp	.+24     	; 0xd8 <__do_clear_bss>
  c0:	95 91       	lpm	r25, Z+
  c2:	85 91       	lpm	r24, Z+
  c4:	ef 01       	movw	r28, r30
  c6:	f9 2f       	mov	r31, r25
  c8:	e8 2f       	mov	r30, r24
  ca:	05 90       	lpm	r0, Z+
  cc:	0d 92       	st	X+, r0
  ce:	a2 17       	cp	r26, r18
  d0:	b3 07       	cpc	r27, r19
  d2:	d9 f7       	brne	.-10     	; 0xca <__do_copy_data+0x20>
  d4:	fe 01       	movw	r30, r28
  d6:	04 c0       	rjmp	.+8      	; 0xe0 <__do_clear_bss+0x8>

000000d8 <__do_clear_bss>:
  d8:	1d 92       	st	X+, r1
  da:	a2 17       	cp	r26, r18
  dc:	b3 07       	cpc	r27, r19
  de:	e1 f7       	brne	.-8      	; 0xd8 <__do_clear_bss>
  e0:	ed 39       	cpi	r30, 0x9D	; 157
  e2:	f4 07       	cpc	r31, r20
  e4:	31 f7       	brne	.-52     	; 0xb2 <__do_copy_data+0x8>
  e6:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <main>
  ea:	0c 94 0a 02 	jmp	0x414	; 0x414 <exit>

000000ee <_exit>:
  ee:	f8 94       	cli

000000f0 <__stop_program>:
  f0:	ff cf       	rjmp	.-2      	; 0xf0 <__stop_program>

Disassembly of section .text:

0000049a <__bad_interrupt>:
 49a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.apagar:

00000436 <apagar>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 436:	8b b1       	in	r24, 0x0b	; 11
 438:	83 70       	andi	r24, 0x03	; 3
 43a:	88 60       	ori	r24, 0x08	; 8
 43c:	8b b9       	out	0x0b, r24	; 11
 43e:	08 95       	ret

Disassembly of section .text.Subir_s:

00000440 <Subir_s>:
 440:	8b b1       	in	r24, 0x0b	; 11
 442:	83 70       	andi	r24, 0x03	; 3
 444:	84 60       	ori	r24, 0x04	; 4
 446:	8b b9       	out	0x0b, r24	; 11
 448:	08 95       	ret

Disassembly of section .text.Bajar:

0000044a <Bajar>:
 44a:	8b b1       	in	r24, 0x0b	; 11
 44c:	8f 70       	andi	r24, 0x0F	; 15
 44e:	80 61       	ori	r24, 0x10	; 16
 450:	8b b9       	out	0x0b, r24	; 11
 452:	08 95       	ret

Disassembly of section .text.Subir:

00000454 <Subir>:
 454:	8b b1       	in	r24, 0x0b	; 11
 456:	8f 70       	andi	r24, 0x0F	; 15
 458:	80 62       	ori	r24, 0x20	; 32
 45a:	8b b9       	out	0x0b, r24	; 11
 45c:	08 95       	ret

Disassembly of section .text.Izquierda:

0000045e <Izquierda>:
 45e:	8b b1       	in	r24, 0x0b	; 11
 460:	8f 70       	andi	r24, 0x0F	; 15
 462:	80 64       	ori	r24, 0x40	; 64
 464:	8b b9       	out	0x0b, r24	; 11
 466:	08 95       	ret

Disassembly of section .text.Derecha:

00000468 <Derecha>:
 468:	8b b1       	in	r24, 0x0b	; 11
 46a:	8f 70       	andi	r24, 0x0F	; 15
 46c:	80 68       	ori	r24, 0x80	; 128
 46e:	8b b9       	out	0x0b, r24	; 11
 470:	08 95       	ret

Disassembly of section .text.generar_escalon4:

00000348 <generar_escalon4>:
 348:	0e 94 2a 02 	call	0x454	; 0x454 <Subir>
 34c:	87 ea       	ldi	r24, 0xA7	; 167
 34e:	91 e6       	ldi	r25, 0x61	; 97
 350:	01 97       	sbiw	r24, 0x01	; 1
 352:	f1 f7       	brne	.-4      	; 0x350 <generar_escalon4+0x8>
 354:	00 c0       	rjmp	.+0      	; 0x356 <generar_escalon4+0xe>
 356:	00 00       	nop
 358:	0e 94 2a 02 	call	0x454	; 0x454 <Subir>
 35c:	87 ea       	ldi	r24, 0xA7	; 167
 35e:	91 e6       	ldi	r25, 0x61	; 97
 360:	01 97       	sbiw	r24, 0x01	; 1
 362:	f1 f7       	brne	.-4      	; 0x360 <generar_escalon4+0x18>
 364:	00 c0       	rjmp	.+0      	; 0x366 <generar_escalon4+0x1e>
 366:	00 00       	nop
 368:	0e 94 34 02 	call	0x468	; 0x468 <Derecha>
 36c:	87 ea       	ldi	r24, 0xA7	; 167
 36e:	91 e6       	ldi	r25, 0x61	; 97
 370:	01 97       	sbiw	r24, 0x01	; 1
 372:	f1 f7       	brne	.-4      	; 0x370 <generar_escalon4+0x28>
 374:	00 c0       	rjmp	.+0      	; 0x376 <generar_escalon4+0x2e>
 376:	00 00       	nop
 378:	08 95       	ret

Disassembly of section .text.Hacer_circulo:

000003f8 <Hacer_circulo>:
 3f8:	0e 94 20 02 	call	0x440	; 0x440 <Subir_s>
 3fc:	2f e3       	ldi	r18, 0x3F	; 63
 3fe:	8d e0       	ldi	r24, 0x0D	; 13
 400:	93 e0       	ldi	r25, 0x03	; 3
 402:	21 50       	subi	r18, 0x01	; 1
 404:	80 40       	sbci	r24, 0x00	; 0
 406:	90 40       	sbci	r25, 0x00	; 0
 408:	e1 f7       	brne	.-8      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 40a:	00 c0       	rjmp	.+0      	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 40c:	00 00       	nop
 40e:	0e 94 a4 01 	call	0x348	; 0x348 <generar_escalon4>
 412:	fd cf       	rjmp	.-6      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>

Disassembly of section .text.AbajoIzquierda:

00000472 <AbajoIzquierda>:
PORTD = (PORTD & 0b00001111) | 0b10000000;
}

void AbajoIzquierda(void)
{
	PORTD = (PORTD & 0b00001111) | 0b01010000; // D6 y D4
 472:	8b b1       	in	r24, 0x0b	; 11
 474:	8f 70       	andi	r24, 0x0F	; 15
 476:	80 65       	ori	r24, 0x50	; 80
 478:	8b b9       	out	0x0b, r24	; 11
 47a:	08 95       	ret

Disassembly of section .text.AbajoDerecha:

0000047c <AbajoDerecha>:
}

void AbajoDerecha(void){
	PORTD = (PORTD & 0b00001111) | 0b10010000; // D6 y D4
 47c:	8b b1       	in	r24, 0x0b	; 11
 47e:	8f 70       	andi	r24, 0x0F	; 15
 480:	80 69       	ori	r24, 0x90	; 144
 482:	8b b9       	out	0x0b, r24	; 11
 484:	08 95       	ret

Disassembly of section .text.centrar:

000003d4 <centrar>:
 3d4:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <_end>
 3d8:	82 ec       	ldi	r24, 0xC2	; 194
 3da:	80 93 85 00 	sts	0x0085, r24	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 3de:	87 ef       	ldi	r24, 0xF7	; 247
 3e0:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 3e4:	02 c0       	rjmp	.+4      	; 0x3ea <centrar+0x16>
 3e6:	0e 94 3e 02 	call	0x47c	; 0x47c <AbajoDerecha>
 3ea:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <_end>
 3ee:	86 30       	cpi	r24, 0x06	; 6
 3f0:	d0 f3       	brcs	.-12     	; 0x3e6 <centrar+0x12>
 3f2:	0e 94 1b 02 	call	0x436	; 0x436 <apagar>
 3f6:	08 95       	ret

Disassembly of section .text.ArribaIzquierda:

00000486 <ArribaIzquierda>:
}

void ArribaIzquierda(void)
{
	PORTD = (PORTD & 0b00001111) | 0b01100000; // D3 y D4
 486:	8b b1       	in	r24, 0x0b	; 11
 488:	8f 70       	andi	r24, 0x0F	; 15
 48a:	80 66       	ori	r24, 0x60	; 96
 48c:	8b b9       	out	0x0b, r24	; 11
 48e:	08 95       	ret

Disassembly of section .text.ArribaDerecha:

00000490 <ArribaDerecha>:
}

void ArribaDerecha(void){
	PORTD = (PORTD & 0b00001111) | 0b10100000; // D6 y D4
 490:	8b b1       	in	r24, 0x0b	; 11
 492:	8f 70       	andi	r24, 0x0F	; 15
 494:	80 6a       	ori	r24, 0xA0	; 160
 496:	8b b9       	out	0x0b, r24	; 11
 498:	08 95       	ret

Disassembly of section .text.peurbas:

00000276 <peurbas>:
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	fc 01       	movw	r30, r24
 27a:	e3 56       	subi	r30, 0x63	; 99
 27c:	f1 09       	sbc	r31, r1
 27e:	e8 31       	cpi	r30, 0x18	; 24
 280:	f1 05       	cpc	r31, r1
 282:	20 f5       	brcc	.+72     	; 0x2cc <peurbas+0x56>
 284:	ec 5c       	subi	r30, 0xCC	; 204
 286:	ff 4f       	sbci	r31, 0xFF	; 255
 288:	0c 94 15 02 	jmp	0x42a	; 0x42a <__tablejump2__>
 28c:	0e 94 1b 02 	call	0x436	; 0x436 <apagar>
 290:	08 95       	ret
 292:	0e 94 20 02 	call	0x440	; 0x440 <Subir_s>
 296:	08 95       	ret
 298:	0e 94 2a 02 	call	0x454	; 0x454 <Subir>
 29c:	08 95       	ret
 29e:	0e 94 25 02 	call	0x44a	; 0x44a <Bajar>
 2a2:	08 95       	ret
 2a4:	0e 94 2f 02 	call	0x45e	; 0x45e <Izquierda>
 2a8:	08 95       	ret
 2aa:	0e 94 34 02 	call	0x468	; 0x468 <Derecha>
 2ae:	08 95       	ret
 2b0:	0e 94 39 02 	call	0x472	; 0x472 <AbajoIzquierda>
 2b4:	08 95       	ret
 2b6:	0e 94 3e 02 	call	0x47c	; 0x47c <AbajoDerecha>
 2ba:	08 95       	ret
 2bc:	0e 94 43 02 	call	0x486	; 0x486 <ArribaIzquierda>
 2c0:	08 95       	ret
 2c2:	0e 94 48 02 	call	0x490	; 0x490 <ArribaDerecha>
 2c6:	08 95       	ret
 2c8:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <centrar>
 2cc:	08 95       	ret

Disassembly of section .text.__vector_13:

0000037a <__vector_13>:
 37a:	1f 92       	push	r1
 37c:	0f 92       	push	r0
 37e:	0f b6       	in	r0, 0x3f	; 63
 380:	0f 92       	push	r0
 382:	11 24       	eor	r1, r1
 384:	8f 93       	push	r24
 386:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <_end>
 38a:	8f 5f       	subi	r24, 0xFF	; 255
 38c:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_end>
 390:	82 ec       	ldi	r24, 0xC2	; 194
 392:	80 93 85 00 	sts	0x0085, r24	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 396:	87 ef       	ldi	r24, 0xF7	; 247
 398:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 39c:	8f 91       	pop	r24
 39e:	0f 90       	pop	r0
 3a0:	0f be       	out	0x3f, r0	; 63
 3a2:	0f 90       	pop	r0
 3a4:	1f 90       	pop	r1
 3a6:	18 95       	reti

Disassembly of section .text.serialWrite:

00000124 <serialWrite>:
 124:	cf 92       	push	r12
 126:	df 92       	push	r13
 128:	ef 92       	push	r14
 12a:	0f 93       	push	r16
 12c:	1f 93       	push	r17
 12e:	cf 93       	push	r28
 130:	6b 01       	movw	r12, r22
 132:	e8 2e       	mov	r14, r24
 134:	c0 e0       	ldi	r28, 0x00	; 0
 136:	1f c0       	rjmp	.+62     	; 0x176 <serialWrite+0x52>
 138:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <serialWritePos>
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	4e 2d       	mov	r20, r14
 140:	96 01       	movw	r18, r12
 142:	2c 0f       	add	r18, r28
 144:	31 1d       	adc	r19, r1
 146:	41 1d       	adc	r20, r1
 148:	f9 01       	movw	r30, r18
 14a:	24 91       	lpm	r18, Z
 14c:	47 fd       	sbrc	r20, 7
 14e:	20 81       	ld	r18, Z
 150:	fc 01       	movw	r30, r24
 152:	e0 58       	subi	r30, 0x80	; 128
 154:	fe 4f       	sbci	r31, 0xFE	; 254
 156:	20 83       	st	Z, r18
 158:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <serialWritePos>
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	01 96       	adiw	r24, 0x01	; 1
 160:	8f 77       	andi	r24, 0x7F	; 127
 162:	90 78       	andi	r25, 0x80	; 128
 164:	99 23       	and	r25, r25
 166:	24 f4       	brge	.+8      	; 0x170 <serialWrite+0x4c>
 168:	01 97       	sbiw	r24, 0x01	; 1
 16a:	80 68       	ori	r24, 0x80	; 128
 16c:	9f 6f       	ori	r25, 0xFF	; 255
 16e:	01 96       	adiw	r24, 0x01	; 1
 170:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <serialWritePos>
 174:	cf 5f       	subi	r28, 0xFF	; 255
 176:	0c 2f       	mov	r16, r28
 178:	10 e0       	ldi	r17, 0x00	; 0
 17a:	8e 2d       	mov	r24, r14
 17c:	b6 01       	movw	r22, r12
 17e:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <strlen>
 182:	99 27       	eor	r25, r25
 184:	08 17       	cp	r16, r24
 186:	19 07       	cpc	r17, r25
 188:	bc f2       	brlt	.-82     	; 0x138 <serialWrite+0x14>
 18a:	e1 ec       	ldi	r30, 0xC1	; 193
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	80 81       	ld	r24, Z
 190:	80 62       	ori	r24, 0x20	; 32
 192:	80 83       	st	Z, r24
 194:	cf 91       	pop	r28
 196:	1f 91       	pop	r17
 198:	0f 91       	pop	r16
 19a:	ef 90       	pop	r14
 19c:	df 90       	pop	r13
 19e:	cf 90       	pop	r12
 1a0:	08 95       	ret

Disassembly of section .text.__vector_19:

0000020e <__vector_19>:
 20e:	1f 92       	push	r1
 210:	0f 92       	push	r0
 212:	0f b6       	in	r0, 0x3f	; 63
 214:	0f 92       	push	r0
 216:	11 24       	eor	r1, r1
 218:	8f 93       	push	r24
 21a:	9f 93       	push	r25
 21c:	ef 93       	push	r30
 21e:	ff 93       	push	r31
 220:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <serialReadPos>
 224:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <serialWritePos>
 228:	98 17       	cp	r25, r24
 22a:	b9 f0       	breq	.+46     	; 0x25a <__vector_19+0x4c>
 22c:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <serialReadPos>
 230:	f0 e0       	ldi	r31, 0x00	; 0
 232:	e0 58       	subi	r30, 0x80	; 128
 234:	fe 4f       	sbci	r31, 0xFE	; 254
 236:	80 81       	ld	r24, Z
 238:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 23c:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <serialReadPos>
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	01 96       	adiw	r24, 0x01	; 1
 244:	8f 77       	andi	r24, 0x7F	; 127
 246:	90 78       	andi	r25, 0x80	; 128
 248:	99 23       	and	r25, r25
 24a:	24 f4       	brge	.+8      	; 0x254 <__vector_19+0x46>
 24c:	01 97       	sbiw	r24, 0x01	; 1
 24e:	80 68       	ori	r24, 0x80	; 128
 250:	9f 6f       	ori	r25, 0xFF	; 255
 252:	01 96       	adiw	r24, 0x01	; 1
 254:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <serialReadPos>
 258:	05 c0       	rjmp	.+10     	; 0x264 <__vector_19+0x56>
 25a:	e1 ec       	ldi	r30, 0xC1	; 193
 25c:	f0 e0       	ldi	r31, 0x00	; 0
 25e:	80 81       	ld	r24, Z
 260:	8f 7d       	andi	r24, 0xDF	; 223
 262:	80 83       	st	Z, r24
 264:	ff 91       	pop	r31
 266:	ef 91       	pop	r30
 268:	9f 91       	pop	r25
 26a:	8f 91       	pop	r24
 26c:	0f 90       	pop	r0
 26e:	0f be       	out	0x3f, r0	; 63
 270:	0f 90       	pop	r0
 272:	1f 90       	pop	r1
 274:	18 95       	reti

Disassembly of section .text.Chardos:

00000314 <Chardos>:
 314:	90 91 02 02 	lds	r25, 0x0202	; 0x800202 <rxReadPos>
 318:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <rxWritePos>
 31c:	98 17       	cp	r25, r24
 31e:	91 f0       	breq	.+36     	; 0x344 <Chardos+0x30>
 320:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <rxReadPos>
 324:	f0 e0       	ldi	r31, 0x00	; 0
 326:	e0 50       	subi	r30, 0x00	; 0
 328:	ff 4f       	sbci	r31, 0xFF	; 255
 32a:	80 81       	ld	r24, Z
 32c:	90 91 02 02 	lds	r25, 0x0202	; 0x800202 <rxReadPos>
 330:	9f 5f       	subi	r25, 0xFF	; 255
 332:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <rxReadPos>
 336:	90 91 02 02 	lds	r25, 0x0202	; 0x800202 <rxReadPos>
 33a:	99 23       	and	r25, r25
 33c:	24 f4       	brge	.+8      	; 0x346 <Chardos+0x32>
 33e:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <rxReadPos>
 342:	08 95       	ret
 344:	80 e0       	ldi	r24, 0x00	; 0
 346:	08 95       	ret

Disassembly of section .text.main:

000001a2 <main>:
 1a2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 1a6:	87 e6       	ldi	r24, 0x67	; 103
 1a8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 1ac:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
 1b0:	e1 e8       	ldi	r30, 0x81	; 129
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	80 81       	ld	r24, Z
 1b6:	83 60       	ori	r24, 0x03	; 3
 1b8:	80 83       	st	Z, r24
 1ba:	ef e6       	ldi	r30, 0x6F	; 111
 1bc:	f0 e0       	ldi	r31, 0x00	; 0
 1be:	80 81       	ld	r24, Z
 1c0:	81 60       	ori	r24, 0x01	; 1
 1c2:	80 83       	st	Z, r24
 1c4:	88 e9       	ldi	r24, 0x98	; 152
 1c6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 1ca:	86 e0       	ldi	r24, 0x06	; 6
 1cc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 1d0:	78 94       	sei
 1d2:	84 b1       	in	r24, 0x04	; 4
 1d4:	81 60       	ori	r24, 0x01	; 1
 1d6:	84 b9       	out	0x04, r24	; 4
 1d8:	8e ef       	ldi	r24, 0xFE	; 254
 1da:	8a b9       	out	0x0a, r24	; 10
 1dc:	62 ef       	ldi	r22, 0xF2	; 242
 1de:	70 e0       	ldi	r23, 0x00	; 0
 1e0:	80 e0       	ldi	r24, 0x00	; 0
 1e2:	0e 94 92 00 	call	0x124	; 0x124 <serialWrite>
 1e6:	64 e1       	ldi	r22, 0x14	; 20
 1e8:	71 e0       	ldi	r23, 0x01	; 1
 1ea:	80 e0       	ldi	r24, 0x00	; 0
 1ec:	0e 94 92 00 	call	0x124	; 0x124 <serialWrite>
 1f0:	81 ee       	ldi	r24, 0xE1	; 225
 1f2:	94 e0       	ldi	r25, 0x04	; 4
 1f4:	01 97       	sbiw	r24, 0x01	; 1
 1f6:	f1 f7       	brne	.-4      	; 0x1f4 <main+0x52>
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <main+0x58>
 1fa:	00 00       	nop
 1fc:	0e 94 8a 01 	call	0x314	; 0x314 <Chardos>
 200:	81 33       	cpi	r24, 0x31	; 49
 202:	11 f4       	brne	.+4      	; 0x208 <main+0x66>
 204:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <Hacer_circulo>
 208:	0e 94 3b 01 	call	0x276	; 0x276 <peurbas>
 20c:	f7 cf       	rjmp	.-18     	; 0x1fc <main+0x5a>

Disassembly of section .text.__vector_18:

000002ce <__vector_18>:
 2ce:	1f 92       	push	r1
 2d0:	0f 92       	push	r0
 2d2:	0f b6       	in	r0, 0x3f	; 63
 2d4:	0f 92       	push	r0
 2d6:	11 24       	eor	r1, r1
 2d8:	8f 93       	push	r24
 2da:	ef 93       	push	r30
 2dc:	ff 93       	push	r31
 2de:	e0 91 01 02 	lds	r30, 0x0201	; 0x800201 <rxWritePos>
 2e2:	f0 e0       	ldi	r31, 0x00	; 0
 2e4:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 2e8:	e0 50       	subi	r30, 0x00	; 0
 2ea:	ff 4f       	sbci	r31, 0xFF	; 255
 2ec:	80 83       	st	Z, r24
 2ee:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <rxWritePos>
 2f2:	8f 5f       	subi	r24, 0xFF	; 255
 2f4:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <rxWritePos>
 2f8:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <rxWritePos>
 2fc:	88 23       	and	r24, r24
 2fe:	14 f4       	brge	.+4      	; 0x304 <__vector_18+0x36>
 300:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <rxWritePos>
 304:	ff 91       	pop	r31
 306:	ef 91       	pop	r30
 308:	8f 91       	pop	r24
 30a:	0f 90       	pop	r0
 30c:	0f be       	out	0x3f, r0	; 63
 30e:	0f 90       	pop	r0
 310:	1f 90       	pop	r1
 312:	18 95       	reti

Disassembly of section .text.libgcc:

0000042a <__tablejump2__>:
 42a:	ee 0f       	add	r30, r30
 42c:	ff 1f       	adc	r31, r31
 42e:	05 90       	lpm	r0, Z+
 430:	f4 91       	lpm	r31, Z
 432:	e0 2d       	mov	r30, r0
 434:	09 94       	ijmp

Disassembly of section .text.__dummy_fini:

000004a2 <_fini>:
 4a2:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000004a4 <__funcs_on_exit>:
 4a4:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000004a6 <__simulator_exit>:
 4a6:	08 95       	ret

Disassembly of section .text.exit:

00000414 <exit>:
 414:	ec 01       	movw	r28, r24
 416:	0e 94 52 02 	call	0x4a4	; 0x4a4 <__funcs_on_exit>
 41a:	0e 94 51 02 	call	0x4a2	; 0x4a2 <_fini>
 41e:	ce 01       	movw	r24, r28
 420:	0e 94 53 02 	call	0x4a6	; 0x4a6 <__simulator_exit>
 424:	ce 01       	movw	r24, r28
 426:	0e 94 4f 02 	call	0x49e	; 0x49e <_Exit>

Disassembly of section .text.strlen:

000003a8 <strlen>:
 3a8:	cf 92       	push	r12
 3aa:	df 92       	push	r13
 3ac:	ef 92       	push	r14
 3ae:	6b 01       	movw	r12, r22
 3b0:	e8 2e       	mov	r14, r24
 3b2:	a8 2f       	mov	r26, r24
 3b4:	cb 01       	movw	r24, r22
 3b6:	fc 01       	movw	r30, r24
 3b8:	24 91       	lpm	r18, Z
 3ba:	a7 fd       	sbrc	r26, 7
 3bc:	20 81       	ld	r18, Z
 3be:	22 23       	and	r18, r18
 3c0:	19 f0       	breq	.+6      	; 0x3c8 <strlen+0x20>
 3c2:	01 96       	adiw	r24, 0x01	; 1
 3c4:	a1 1d       	adc	r26, r1
 3c6:	f7 cf       	rjmp	.-18     	; 0x3b6 <strlen+0xe>
 3c8:	8c 19       	sub	r24, r12
 3ca:	9d 09       	sbc	r25, r13
 3cc:	ef 90       	pop	r14
 3ce:	df 90       	pop	r13
 3d0:	cf 90       	pop	r12
 3d2:	08 95       	ret

Disassembly of section .text._Exit:

0000049e <_Exit>:
 49e:	0e 94 77 00 	call	0xee	; 0xee <_exit>
